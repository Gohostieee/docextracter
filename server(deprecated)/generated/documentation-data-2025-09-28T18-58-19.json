{
  "metadata": {
    "generatedAt": "2025-09-28T18:58:19.976Z",
    "version": "1.0.0",
    "processor": "docextracter"
  },
  "crawlResults": {
    "pages": [
      {
        "url": "https://docs.stagehand.dev/",
        "title": "Introducing Stagehand - ü§ò Stagehand",
        "metaDescription": "Developers use Stagehand to reliably automate the web.",
        "markdown": "Introducing Stagehand - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nFirst Steps\n\nIntroducing Stagehand\n\nOn this page\n\n-   [The Problem with Browser Automation](#the-problem-with-browser-automation)\n-   [Enter Stagehand](#enter-stagehand)\n-   [Why Developers Choose Stagehand](#why-developers-choose-stagehand)\n-   [Built for Modern Development](#built-for-modern-development)\n-   [Get Started in 60 Seconds](#get-started-in-60-seconds)\n\nFirst Steps\n\n# Introducing Stagehand\n\nCopy page\n\nDevelopers use Stagehand to reliably automate the web.\n\nCopy page\n\nStagehand is a browser automation framework used to control web browsers with natural language and code. By combining the power of AI with the precision of code, Stagehand makes web automation flexible, maintainable, and actually reliable.\n\n##\n\n[‚Äã\n\n](#the-problem-with-browser-automation)\n\nThe Problem with Browser Automation\n\nTraditional frameworks like Playwright and Puppeteer force you to write brittle scripts that break with every UI change. Web agents promise to solve this with AI, but leave you at the mercy of unpredictable behavior. **You‚Äôre stuck between two bad options:**\n\n-   **Too brittle**: Traditional selectors break when websites change\n-   **Too agentic**: AI agents are unpredictable and impossible to debug\n\n##\n\n[‚Äã\n\n](#enter-stagehand)\n\nEnter Stagehand\n\nStagehand gives you the best of both worlds through four powerful primitives that let you choose exactly how much AI to use:\n\n[\n\n## Act\n\nExecute actions using natural language\n\n](/basics/act)[\n\n## Extract\n\nPull structured data with schemas\n\n](/basics/extract)[\n\n## Observe\n\nDiscover available actions on any page\n\n](/basics/observe)[\n\n## Agent\n\nAutomate entire workflows autonomously\n\n](/basics/agent)\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Act - Execute natural language actions\nawait page.act(\"click the login button\");\n\n// Extract - Pull structured data\nconst { price } = await page.extract({\n  schema: z.object({ price: z.number() })\n});\n\n// Observe - Discover available actions\nconst actions = await page.observe(\"find submit buttons\");\n\n// Agent - Automate entire workflows\nconst agent = stagehand.agent({\n    provider: \"anthropic\",\n    model: \"claude-sonnet-4-20250514\",\n    options: {\n      apiKey: process.env.ANTHROPIC_API_KEY,\n    },\n})\nawait agent.execute(\"apply for this job\");\n```\n\n##\n\n[‚Äã\n\n](#why-developers-choose-stagehand)\n\nWhy Developers Choose Stagehand\n\n-   **Precise Control**: Mix AI-powered actions with deterministic code. You decide exactly how much AI to use.\n-   **Actually Repeatable**: Save and replay actions exactly. No more ‚Äúit worked on my machine‚Äù with browser automations.\n-   **Maintainable at Scale**: One script can automate multiple websites. When sites change, your automations adapt.\n-   **Composable Tools**: Choose your level of automation with Act, Extract, Observe, and Agent.\n\n##\n\n[‚Äã\n\n](#built-for-modern-development)\n\nBuilt for Modern Development\n\nStagehand is designed for developers building production browser automations and AI agents that need reliable web access.\n\nFull Playwright Compatibility\n\nUse any Playwright API alongside Stagehand. You‚Äôre never locked into our abstractions.\n\nTypeScript & Python SDKs\n\nFirst-class support for both ecosystems with type safety and IDE autocomplete.\n\nWorks Everywhere\n\nCompatible with all Chromium-based browsers: Chrome, Edge, Arc, Brave, and more.\n\nBuilt by Browserbase\n\nCreated and maintained by the team behind enterprise browser infrastructure.\n\n##\n\n[‚Äã\n\n](#get-started-in-60-seconds)\n\nGet Started in 60 Seconds\n\n**Pro tip**: For best results, we recommend using Stagehand with [Browserbase](https://www.browserbase.com) for reliable cloud browser infrastructure.\n\n[\n\n## Quickstart\n\nBuild your first automation in under a minute\n\n](/first-steps/quickstart)[\n\n## Try Director\n\nGenerate Stagehand scripts with AI\n\n](https://www.director.ai)[\n\n## View Examples\n\nSee real-world automation examples\n\n](https://github.com/browserbase/stagehand/tree/main/examples)[\n\n## Join Discord\n\nGet help from the community\n\n](https://discord.gg/stagehand)\n\n[Quickstart](/first-steps/quickstart)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:54:43.844Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/changelog",
        "title": "Introducing Stagehand - ü§ò Stagehand",
        "metaDescription": "Developers use Stagehand to reliably automate the web.",
        "markdown": "Introducing Stagehand - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nFirst Steps\n\nIntroducing Stagehand\n\nOn this page\n\n-   [The Problem with Browser Automation](#the-problem-with-browser-automation)\n-   [Enter Stagehand](#enter-stagehand)\n-   [Why Developers Choose Stagehand](#why-developers-choose-stagehand)\n-   [Built for Modern Development](#built-for-modern-development)\n-   [Get Started in 60 Seconds](#get-started-in-60-seconds)\n\nFirst Steps\n\n# Introducing Stagehand\n\nCopy page\n\nDevelopers use Stagehand to reliably automate the web.\n\nCopy page\n\nStagehand is a browser automation framework used to control web browsers with natural language and code. By combining the power of AI with the precision of code, Stagehand makes web automation flexible, maintainable, and actually reliable.\n\n##\n\n[‚Äã\n\n](#the-problem-with-browser-automation)\n\nThe Problem with Browser Automation\n\nTraditional frameworks like Playwright and Puppeteer force you to write brittle scripts that break with every UI change. Web agents promise to solve this with AI, but leave you at the mercy of unpredictable behavior. **You‚Äôre stuck between two bad options:**\n\n-   **Too brittle**: Traditional selectors break when websites change\n-   **Too agentic**: AI agents are unpredictable and impossible to debug\n\n##\n\n[‚Äã\n\n](#enter-stagehand)\n\nEnter Stagehand\n\nStagehand gives you the best of both worlds through four powerful primitives that let you choose exactly how much AI to use:\n\n[\n\n## Act\n\nExecute actions using natural language\n\n](/basics/act)[\n\n## Extract\n\nPull structured data with schemas\n\n](/basics/extract)[\n\n## Observe\n\nDiscover available actions on any page\n\n](/basics/observe)[\n\n## Agent\n\nAutomate entire workflows autonomously\n\n](/basics/agent)\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Act - Execute natural language actions\nawait page.act(\"click the login button\");\n\n// Extract - Pull structured data\nconst { price } = await page.extract({\n  schema: z.object({ price: z.number() })\n});\n\n// Observe - Discover available actions\nconst actions = await page.observe(\"find submit buttons\");\n\n// Agent - Automate entire workflows\nconst agent = stagehand.agent({\n    provider: \"anthropic\",\n    model: \"claude-sonnet-4-20250514\",\n    options: {\n      apiKey: process.env.ANTHROPIC_API_KEY,\n    },\n})\nawait agent.execute(\"apply for this job\");\n```\n\n##\n\n[‚Äã\n\n](#why-developers-choose-stagehand)\n\nWhy Developers Choose Stagehand\n\n-   **Precise Control**: Mix AI-powered actions with deterministic code. You decide exactly how much AI to use.\n-   **Actually Repeatable**: Save and replay actions exactly. No more ‚Äúit worked on my machine‚Äù with browser automations.\n-   **Maintainable at Scale**: One script can automate multiple websites. When sites change, your automations adapt.\n-   **Composable Tools**: Choose your level of automation with Act, Extract, Observe, and Agent.\n\n##\n\n[‚Äã\n\n](#built-for-modern-development)\n\nBuilt for Modern Development\n\nStagehand is designed for developers building production browser automations and AI agents that need reliable web access.\n\nFull Playwright Compatibility\n\nUse any Playwright API alongside Stagehand. You‚Äôre never locked into our abstractions.\n\nTypeScript & Python SDKs\n\nFirst-class support for both ecosystems with type safety and IDE autocomplete.\n\nWorks Everywhere\n\nCompatible with all Chromium-based browsers: Chrome, Edge, Arc, Brave, and more.\n\nBuilt by Browserbase\n\nCreated and maintained by the team behind enterprise browser infrastructure.\n\n##\n\n[‚Äã\n\n](#get-started-in-60-seconds)\n\nGet Started in 60 Seconds\n\n**Pro tip**: For best results, we recommend using Stagehand with [Browserbase](https://www.browserbase.com) for reliable cloud browser infrastructure.\n\n[\n\n## Quickstart\n\nBuild your first automation in under a minute\n\n](/first-steps/quickstart)[\n\n## Try Director\n\nGenerate Stagehand scripts with AI\n\n](https://www.director.ai)[\n\n## View Examples\n\nSee real-world automation examples\n\n](https://github.com/browserbase/stagehand/tree/main/examples)[\n\n## Join Discord\n\nGet help from the community\n\n](https://discord.gg/stagehand)\n\n[Quickstart](/first-steps/quickstart)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:54:43.172Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/introduction",
        "title": "Introducing Stagehand - ü§ò Stagehand",
        "metaDescription": "Developers use Stagehand to reliably automate the web.",
        "markdown": "Introducing Stagehand - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nFirst Steps\n\nIntroducing Stagehand\n\nOn this page\n\n-   [The Problem with Browser Automation](#the-problem-with-browser-automation)\n-   [Enter Stagehand](#enter-stagehand)\n-   [Why Developers Choose Stagehand](#why-developers-choose-stagehand)\n-   [Built for Modern Development](#built-for-modern-development)\n-   [Get Started in 60 Seconds](#get-started-in-60-seconds)\n\nFirst Steps\n\n# Introducing Stagehand\n\nCopy page\n\nDevelopers use Stagehand to reliably automate the web.\n\nCopy page\n\nStagehand is a browser automation framework used to control web browsers with natural language and code. By combining the power of AI with the precision of code, Stagehand makes web automation flexible, maintainable, and actually reliable.\n\n##\n\n[‚Äã\n\n](#the-problem-with-browser-automation)\n\nThe Problem with Browser Automation\n\nTraditional frameworks like Playwright and Puppeteer force you to write brittle scripts that break with every UI change. Web agents promise to solve this with AI, but leave you at the mercy of unpredictable behavior. **You‚Äôre stuck between two bad options:**\n\n-   **Too brittle**: Traditional selectors break when websites change\n-   **Too agentic**: AI agents are unpredictable and impossible to debug\n\n##\n\n[‚Äã\n\n](#enter-stagehand)\n\nEnter Stagehand\n\nStagehand gives you the best of both worlds through four powerful primitives that let you choose exactly how much AI to use:\n\n[\n\n## Act\n\nExecute actions using natural language\n\n](/basics/act)[\n\n## Extract\n\nPull structured data with schemas\n\n](/basics/extract)[\n\n## Observe\n\nDiscover available actions on any page\n\n](/basics/observe)[\n\n## Agent\n\nAutomate entire workflows autonomously\n\n](/basics/agent)\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Act - Execute natural language actions\nawait page.act(\"click the login button\");\n\n// Extract - Pull structured data\nconst { price } = await page.extract({\n  schema: z.object({ price: z.number() })\n});\n\n// Observe - Discover available actions\nconst actions = await page.observe(\"find submit buttons\");\n\n// Agent - Automate entire workflows\nconst agent = stagehand.agent({\n    provider: \"anthropic\",\n    model: \"claude-sonnet-4-20250514\",\n    options: {\n      apiKey: process.env.ANTHROPIC_API_KEY,\n    },\n})\nawait agent.execute(\"apply for this job\");\n```\n\n##\n\n[‚Äã\n\n](#why-developers-choose-stagehand)\n\nWhy Developers Choose Stagehand\n\n-   **Precise Control**: Mix AI-powered actions with deterministic code. You decide exactly how much AI to use.\n-   **Actually Repeatable**: Save and replay actions exactly. No more ‚Äúit worked on my machine‚Äù with browser automations.\n-   **Maintainable at Scale**: One script can automate multiple websites. When sites change, your automations adapt.\n-   **Composable Tools**: Choose your level of automation with Act, Extract, Observe, and Agent.\n\n##\n\n[‚Äã\n\n](#built-for-modern-development)\n\nBuilt for Modern Development\n\nStagehand is designed for developers building production browser automations and AI agents that need reliable web access.\n\nFull Playwright Compatibility\n\nUse any Playwright API alongside Stagehand. You‚Äôre never locked into our abstractions.\n\nTypeScript & Python SDKs\n\nFirst-class support for both ecosystems with type safety and IDE autocomplete.\n\nWorks Everywhere\n\nCompatible with all Chromium-based browsers: Chrome, Edge, Arc, Brave, and more.\n\nBuilt by Browserbase\n\nCreated and maintained by the team behind enterprise browser infrastructure.\n\n##\n\n[‚Äã\n\n](#get-started-in-60-seconds)\n\nGet Started in 60 Seconds\n\n**Pro tip**: For best results, we recommend using Stagehand with [Browserbase](https://www.browserbase.com) for reliable cloud browser infrastructure.\n\n[\n\n## Quickstart\n\nBuild your first automation in under a minute\n\n](/first-steps/quickstart)[\n\n## Try Director\n\nGenerate Stagehand scripts with AI\n\n](https://www.director.ai)[\n\n## View Examples\n\nSee real-world automation examples\n\n](https://github.com/browserbase/stagehand/tree/main/examples)[\n\n## Join Discord\n\nGet help from the community\n\n](https://discord.gg/stagehand)\n\n[Quickstart](/first-steps/quickstart)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:54:42.941Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/quickstart",
        "title": "Introducing Stagehand - ü§ò Stagehand",
        "metaDescription": "Developers use Stagehand to reliably automate the web.",
        "markdown": "Introducing Stagehand - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nFirst Steps\n\nIntroducing Stagehand\n\nOn this page\n\n-   [The Problem with Browser Automation](#the-problem-with-browser-automation)\n-   [Enter Stagehand](#enter-stagehand)\n-   [Why Developers Choose Stagehand](#why-developers-choose-stagehand)\n-   [Built for Modern Development](#built-for-modern-development)\n-   [Get Started in 60 Seconds](#get-started-in-60-seconds)\n\nFirst Steps\n\n# Introducing Stagehand\n\nCopy page\n\nDevelopers use Stagehand to reliably automate the web.\n\nCopy page\n\nStagehand is a browser automation framework used to control web browsers with natural language and code. By combining the power of AI with the precision of code, Stagehand makes web automation flexible, maintainable, and actually reliable.\n\n##\n\n[‚Äã\n\n](#the-problem-with-browser-automation)\n\nThe Problem with Browser Automation\n\nTraditional frameworks like Playwright and Puppeteer force you to write brittle scripts that break with every UI change. Web agents promise to solve this with AI, but leave you at the mercy of unpredictable behavior. **You‚Äôre stuck between two bad options:**\n\n-   **Too brittle**: Traditional selectors break when websites change\n-   **Too agentic**: AI agents are unpredictable and impossible to debug\n\n##\n\n[‚Äã\n\n](#enter-stagehand)\n\nEnter Stagehand\n\nStagehand gives you the best of both worlds through four powerful primitives that let you choose exactly how much AI to use:\n\n[\n\n## Act\n\nExecute actions using natural language\n\n](/basics/act)[\n\n## Extract\n\nPull structured data with schemas\n\n](/basics/extract)[\n\n## Observe\n\nDiscover available actions on any page\n\n](/basics/observe)[\n\n## Agent\n\nAutomate entire workflows autonomously\n\n](/basics/agent)\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Act - Execute natural language actions\nawait page.act(\"click the login button\");\n\n// Extract - Pull structured data\nconst { price } = await page.extract({\n  schema: z.object({ price: z.number() })\n});\n\n// Observe - Discover available actions\nconst actions = await page.observe(\"find submit buttons\");\n\n// Agent - Automate entire workflows\nconst agent = stagehand.agent({\n    provider: \"anthropic\",\n    model: \"claude-sonnet-4-20250514\",\n    options: {\n      apiKey: process.env.ANTHROPIC_API_KEY,\n    },\n})\nawait agent.execute(\"apply for this job\");\n```\n\n##\n\n[‚Äã\n\n](#why-developers-choose-stagehand)\n\nWhy Developers Choose Stagehand\n\n-   **Precise Control**: Mix AI-powered actions with deterministic code. You decide exactly how much AI to use.\n-   **Actually Repeatable**: Save and replay actions exactly. No more ‚Äúit worked on my machine‚Äù with browser automations.\n-   **Maintainable at Scale**: One script can automate multiple websites. When sites change, your automations adapt.\n-   **Composable Tools**: Choose your level of automation with Act, Extract, Observe, and Agent.\n\n##\n\n[‚Äã\n\n](#built-for-modern-development)\n\nBuilt for Modern Development\n\nStagehand is designed for developers building production browser automations and AI agents that need reliable web access.\n\nFull Playwright Compatibility\n\nUse any Playwright API alongside Stagehand. You‚Äôre never locked into our abstractions.\n\nTypeScript & Python SDKs\n\nFirst-class support for both ecosystems with type safety and IDE autocomplete.\n\nWorks Everywhere\n\nCompatible with all Chromium-based browsers: Chrome, Edge, Arc, Brave, and more.\n\nBuilt by Browserbase\n\nCreated and maintained by the team behind enterprise browser infrastructure.\n\n##\n\n[‚Äã\n\n](#get-started-in-60-seconds)\n\nGet Started in 60 Seconds\n\n**Pro tip**: For best results, we recommend using Stagehand with [Browserbase](https://www.browserbase.com) for reliable cloud browser infrastructure.\n\n[\n\n## Quickstart\n\nBuild your first automation in under a minute\n\n](/first-steps/quickstart)[\n\n## Try Director\n\nGenerate Stagehand scripts with AI\n\n](https://www.director.ai)[\n\n## View Examples\n\nSee real-world automation examples\n\n](https://github.com/browserbase/stagehand/tree/main/examples)[\n\n## Join Discord\n\nGet help from the community\n\n](https://discord.gg/stagehand)\n\n[Quickstart](/first-steps/quickstart)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:54:45.211Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/installation",
        "title": "Failed to Load",
        "metaDescription": null,
        "markdown": "",
        "timestamp": "2025-09-28T18:54:37.553Z",
        "success": false,
        "error": "Failed to parse server response"
      },
      {
        "url": "https://docs.stagehand.dev/ai-rules",
        "title": "Page Not Found",
        "metaDescription": null,
        "markdown": "Page Not Found\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nPage Not Found\n\n404\n\n# Page Not Found\n\nWe couldn't find the page you were looking for. Maybe you were looking for?\n\n[AI Rules](/first-steps/ai-rules#)[Models](/configuration/models#vercel-ai-sdk)[Browserbase MCP Server](/integrations/mcp/introduction#ease-of-use)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:54:57.772Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/the-basics/act",
        "title": "Failed to Load",
        "metaDescription": null,
        "markdown": "",
        "timestamp": "2025-09-28T18:54:51.447Z",
        "success": false,
        "error": "Failed to parse server response"
      },
      {
        "url": "https://docs.stagehand.dev/the-basics/extract",
        "title": "Page Not Found",
        "metaDescription": null,
        "markdown": "Page Not Found\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nPage Not Found\n\n404\n\n# Page Not Found\n\nWe couldn't find the page you were looking for. Maybe you were looking for?\n\n[AI Rules](/first-steps/ai-rules#)[Models](/configuration/models#vercel-ai-sdk)[Browserbase MCP Server](/integrations/mcp/introduction#ease-of-use)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:54:59.489Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/the-basics/observe",
        "title": "Page Not Found",
        "metaDescription": null,
        "markdown": "Page Not Found\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nPage Not Found\n\n404\n\n# Page Not Found\n\nWe couldn't find the page you were looking for. Maybe you were looking for?\n\n[AI Rules](/first-steps/ai-rules#)[Models](/configuration/models#vercel-ai-sdk)[Browserbase MCP Server](/integrations/mcp/introduction#ease-of-use)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:54:58.373Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/the-basics/agent",
        "title": "Failed to Load",
        "metaDescription": null,
        "markdown": "",
        "timestamp": "2025-09-28T18:54:51.458Z",
        "success": false,
        "error": "Failed to parse server response"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/browser",
        "title": "Browser - ü§ò Stagehand",
        "metaDescription": "Configure Stagehand on Browserbase or locally",
        "markdown": "Browser - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nBrowser\n\nOn this page\n\n-   [Browserbase Environment](#browserbase-environment)\n-   [Environment Variables](#environment-variables)\n-   [Using Stagehand with Browserbase](#using-stagehand-with-browserbase)\n-   [Basic Setup](#basic-setup)\n-   [Advanced Configuration](#advanced-configuration)\n-   [Initialization Result](#initialization-result)\n-   [Alternative: Browserbase SDK](#alternative%3A-browserbase-sdk)\n-   [Connecting to an Existing Session](#connecting-to-an-existing-session)\n-   [Local Environment](#local-environment)\n-   [Environment Comparison](#environment-comparison)\n-   [Basic Local Setup](#basic-local-setup)\n-   [Advanced Local Configuration](#advanced-local-configuration)\n-   [Connecting to your local browser](#connecting-to-your-local-browser)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n\nConfiguration\n\n# Browser\n\nCopy page\n\nConfigure Stagehand on Browserbase or locally\n\nCopy page\n\nStagehand supports two primary environments:\n\n-   **Browserbase** - Cloud-managed browser infrastructure optimized for production web automation at scale\n-   **Local** - Run browsers directly on your machine for development and debugging\n\n##\n\n[‚Äã\n\n](#browserbase-environment)\n\nBrowserbase Environment\n\nBrowserbase provides managed cloud browser infrastructure optimized for web automation at scale. It offers advanced features like stealth mode, proxy support, and persistent contexts.[\n\n## Browserbase\n\nDiscover the power of cloud-managed browser infrastructure with Browserbase.\n\n](https://docs.browserbase.com)\n\n###\n\n[‚Äã\n\n](#environment-variables)\n\nEnvironment Variables\n\nBefore getting started, set up the required environment variables:\n\n.env\n\nCopy\n\nAsk AI\n\n```\nBROWSERBASE_API_KEY=your_api_key_here\nBROWSERBASE_PROJECT_ID=your_project_id_here\n```\n\nGet your API key and Project ID from the [Browserbase Dashboard](https://browserbase.com/overview)\n\n###\n\n[‚Äã\n\n](#using-stagehand-with-browserbase)\n\nUsing Stagehand with Browserbase\n\n####\n\n[‚Äã\n\n](#basic-setup)\n\nBasic Setup\n\nThe simplest way to get started is with default settings:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n});\n\nawait stagehand.init();\n```\n\n####\n\n[‚Äã\n\n](#advanced-configuration)\n\nAdvanced Configuration\n\nConfigure browser settings, proxy support, and other session parameters:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  // Optional: API Key and Project ID will be pulled directly from your environment\n  apiKey: process.env.BROWSERBASE_API_KEY,\n  projectId: process.env.BROWSERBASE_PROJECT_ID,\n  browserbaseSessionCreateParams: {\n    proxies: true,\n    region: \"us-west-2\",\n    browserSettings: {\n      viewport: { width: 1920, height: 1080 },\n      blockAds: true,\n    },\n  },\n});\n\nawait stagehand.init();\nconsole.log(\"Session ID:\", stagehand.sessionId);\n```\n\nAdvanced Browserbase Configuration Example\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  apiKey: process.env.BROWSERBASE_API_KEY,\n  projectId: process.env.BROWSERBASE_PROJECT_ID,\n  browserbaseSessionCreateParams: {\n    projectId: process.env.BROWSERBASE_PROJECT_ID!, // Optional: automatically set if given in environment variable or by Stagehand parameter\n    proxies: true,\n    region: \"us-west-2\",\n    timeout: 3600, // 1 hour session timeout\n    keepAlive: true, // Available on Startup plan\n    browserSettings: {\n      advancedStealth: false, // this is a Scale Plan feature - reach out to support@browserbase.com to enable\n      blockAds: true,\n      solveCaptchas: true,\n      recordSession: false,\n      os: \"windows\", // Valid: \"windows\" | \"mac\" | \"linux\" | \"mobile\" | \"tablet\"\n      viewport: {\n        width: 1920,\n        height: 1080,\n      },\n    },\n    userMetadata: {\n      userId: \"automation-user-123\",\n      environment: \"production\",\n    },\n  },\n});\n```\n\n####\n\n[‚Äã\n\n](#initialization-result)\n\nInitialization Result\n\nAfter calling `stagehand.init()`, the method returns configuration information about the initialized session:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nconst result = await stagehand.init();\nconsole.log(result);\n```\n\nThe returned object contains:\n\nCopy\n\nAsk AI\n\n```\n{\n  debugUrl: 'https://www.browserbase.com/devtools/inspector.html?wss=connect.browserbase.com/debug/f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0/devtools/page/5474B0E0510C5B6E629BEB06E799CD70?debug=true',\n  sessionUrl: 'https://www.browserbase.com/sessions/f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0',\n  sessionId: 'f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0'\n}\n```\n\ndebugUrl\n\n**Open the Browserbase [session live view](https://docs.browserbase.com/features/session-live-view)** to include a human-in-the-loop.\n\nsessionUrl\n\n**Open the [session replay](https://docs.browserbase.com/features/session-replay)** to see the full session recording.\n\nsessionId\n\n**Unique identifier** for the [Browserbase session](https://docs.browserbase.com/introduction/what-is-browserbase). This is used to identify the session in the Browserbase dashboard and to connect to the session.\n\n###\n\n[‚Äã\n\n](#alternative%3A-browserbase-sdk)\n\nAlternative: Browserbase SDK\n\nIf you prefer to manage sessions directly, you can use the Browserbase SDK:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Browserbase } from \"@browserbasehq/sdk\";\n\nconst bb = new Browserbase({\n  apiKey: process.env.BROWSERBASE_API_KEY!\n});\n\nconst session = await bb.sessions.create({\n  projectId: process.env.BROWSERBASE_PROJECT_ID!,\n  // Add configuration options here\n});\n```\n\n####\n\n[‚Äã\n\n](#connecting-to-an-existing-session)\n\nConnecting to an Existing Session\n\nConnect to a previously created Browserbase session using its session ID:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  browserbaseSessionID: \"existing-session-uuid-here\",\n});\n\nawait stagehand.init();\nconsole.log(\"Resumed Session ID:\", stagehand.sessionId);\n```\n\n##\n\n[‚Äã\n\n](#local-environment)\n\nLocal Environment\n\nThe local environment runs browsers directly on your machine, providing full control over browser instances and configurations. Ideal for development, debugging, and scenarios requiring custom browser setups.\n\n###\n\n[‚Äã\n\n](#environment-comparison)\n\nEnvironment Comparison\n\nFeature\n\nBrowserbase\n\nLocal\n\n**Scalability**\n\nHigh (cloud-managed)\n\nLimited (local resources)\n\n**Stealth Features**\n\nAdvanced fingerprinting\n\nBasic stealth\n\n**Proxy Support**\n\nBuilt-in residential proxies\n\nManual configuration\n\n**Session Persistence**\n\nCloud context storage\n\nFile-based user data\n\n**Geographic Distribution**\n\nMulti-region deployment\n\nSingle machine\n\n**Debugging**\n\nSession recordings & logs\n\nDirect DevTools access\n\n**Setup Complexity**\n\nEnvironment variables only\n\nBrowser installation required\n\n**Cost**\n\nUsage-based pricing\n\nInfrastructure & maintenance\n\n**Best For**\n\nProduction, scale, compliance\n\nDevelopment, debugging\n\n###\n\n[‚Äã\n\n](#basic-local-setup)\n\nBasic Local Setup\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"LOCAL\"\n});\n\nawait stagehand.init();\nconsole.log(\"Session ID:\", stagehand.sessionId);\n```\n\n###\n\n[‚Äã\n\n](#advanced-local-configuration)\n\nAdvanced Local Configuration\n\nCustomize browser launch options for local development:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"LOCAL\",\n  localBrowserLaunchOptions: {\n    headless: false, // Show browser window\n    devtools: true, // Open developer tools\n    viewport: { width: 1280, height: 720 },\n    executablePath: '/opt/google/chrome/chrome', // Custom Chrome path\n    args: [\n      '--no-sandbox',\n      '--disable-setuid-sandbox',\n      '--disable-web-security',\n      '--allow-running-insecure-content',\n    ],\n    env: {\n      NODE_ENV: \"development\",\n      DEBUG: \"true\",\n    },\n  },\n});\n\nawait stagehand.init();\n```\n\n###\n\n[‚Äã\n\n](#connecting-to-your-local-browser)\n\nConnecting to your local browser\n\nConnect to your existing local Chrome/Chromium browser instead of launching a new one. This lets you automate your normal browser with all your existing tabs, extensions and settings.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n\tenv: \"LOCAL\",\n\tlocalBrowserLaunchOptions: {\n\t\tcdpUrl: 'http://localhost:9222'\n\t}\n});\n\nawait stagehand.init();\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nBrowserbase Authentication Errors\n\n-   Verify your `BROWSERBASE_API_KEY` and `BROWSERBASE_PROJECT_ID` are set correctly\n-   Check that your API key has the necessary permissions\n-   Ensure your Browserbase account has sufficient credits\n\nLocal Browser Launch Failures\n\n-   Install Chrome or Chromium on your system\n-   Set the correct `executablePath` for your Chrome installation\n-   Check that required dependencies are installed (Linux: `libnss3-dev libatk-bridge2.0-dev libgtk-3-dev libxss1 libasound2`)\n\nSession Timeout Issues\n\n-   Increase session timeout in `browserbaseSessionCreateParams.timeout`\n-   Use `keepAlive: true` for long-running sessions\n-   Monitor session usage to avoid unexpected terminations\n\n[Agent](/basics/agent)[Observability](/configuration/observability)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:12.074Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/observability",
        "title": "Browser - ü§ò Stagehand",
        "metaDescription": "Configure Stagehand on Browserbase or locally",
        "markdown": "Browser - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nBrowser\n\nOn this page\n\n-   [Browserbase Environment](#browserbase-environment)\n-   [Environment Variables](#environment-variables)\n-   [Using Stagehand with Browserbase](#using-stagehand-with-browserbase)\n-   [Basic Setup](#basic-setup)\n-   [Advanced Configuration](#advanced-configuration)\n-   [Initialization Result](#initialization-result)\n-   [Alternative: Browserbase SDK](#alternative%3A-browserbase-sdk)\n-   [Connecting to an Existing Session](#connecting-to-an-existing-session)\n-   [Local Environment](#local-environment)\n-   [Environment Comparison](#environment-comparison)\n-   [Basic Local Setup](#basic-local-setup)\n-   [Advanced Local Configuration](#advanced-local-configuration)\n-   [Connecting to your local browser](#connecting-to-your-local-browser)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n\nConfiguration\n\n# Browser\n\nCopy page\n\nConfigure Stagehand on Browserbase or locally\n\nCopy page\n\nStagehand supports two primary environments:\n\n-   **Browserbase** - Cloud-managed browser infrastructure optimized for production web automation at scale\n-   **Local** - Run browsers directly on your machine for development and debugging\n\n##\n\n[‚Äã\n\n](#browserbase-environment)\n\nBrowserbase Environment\n\nBrowserbase provides managed cloud browser infrastructure optimized for web automation at scale. It offers advanced features like stealth mode, proxy support, and persistent contexts.[\n\n## Browserbase\n\nDiscover the power of cloud-managed browser infrastructure with Browserbase.\n\n](https://docs.browserbase.com)\n\n###\n\n[‚Äã\n\n](#environment-variables)\n\nEnvironment Variables\n\nBefore getting started, set up the required environment variables:\n\n.env\n\nCopy\n\nAsk AI\n\n```\nBROWSERBASE_API_KEY=your_api_key_here\nBROWSERBASE_PROJECT_ID=your_project_id_here\n```\n\nGet your API key and Project ID from the [Browserbase Dashboard](https://browserbase.com/overview)\n\n###\n\n[‚Äã\n\n](#using-stagehand-with-browserbase)\n\nUsing Stagehand with Browserbase\n\n####\n\n[‚Äã\n\n](#basic-setup)\n\nBasic Setup\n\nThe simplest way to get started is with default settings:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n});\n\nawait stagehand.init();\n```\n\n####\n\n[‚Äã\n\n](#advanced-configuration)\n\nAdvanced Configuration\n\nConfigure browser settings, proxy support, and other session parameters:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  // Optional: API Key and Project ID will be pulled directly from your environment\n  apiKey: process.env.BROWSERBASE_API_KEY,\n  projectId: process.env.BROWSERBASE_PROJECT_ID,\n  browserbaseSessionCreateParams: {\n    proxies: true,\n    region: \"us-west-2\",\n    browserSettings: {\n      viewport: { width: 1920, height: 1080 },\n      blockAds: true,\n    },\n  },\n});\n\nawait stagehand.init();\nconsole.log(\"Session ID:\", stagehand.sessionId);\n```\n\nAdvanced Browserbase Configuration Example\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  apiKey: process.env.BROWSERBASE_API_KEY,\n  projectId: process.env.BROWSERBASE_PROJECT_ID,\n  browserbaseSessionCreateParams: {\n    projectId: process.env.BROWSERBASE_PROJECT_ID!, // Optional: automatically set if given in environment variable or by Stagehand parameter\n    proxies: true,\n    region: \"us-west-2\",\n    timeout: 3600, // 1 hour session timeout\n    keepAlive: true, // Available on Startup plan\n    browserSettings: {\n      advancedStealth: false, // this is a Scale Plan feature - reach out to support@browserbase.com to enable\n      blockAds: true,\n      solveCaptchas: true,\n      recordSession: false,\n      os: \"windows\", // Valid: \"windows\" | \"mac\" | \"linux\" | \"mobile\" | \"tablet\"\n      viewport: {\n        width: 1920,\n        height: 1080,\n      },\n    },\n    userMetadata: {\n      userId: \"automation-user-123\",\n      environment: \"production\",\n    },\n  },\n});\n```\n\n####\n\n[‚Äã\n\n](#initialization-result)\n\nInitialization Result\n\nAfter calling `stagehand.init()`, the method returns configuration information about the initialized session:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nconst result = await stagehand.init();\nconsole.log(result);\n```\n\nThe returned object contains:\n\nCopy\n\nAsk AI\n\n```\n{\n  debugUrl: 'https://www.browserbase.com/devtools/inspector.html?wss=connect.browserbase.com/debug/f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0/devtools/page/5474B0E0510C5B6E629BEB06E799CD70?debug=true',\n  sessionUrl: 'https://www.browserbase.com/sessions/f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0',\n  sessionId: 'f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0'\n}\n```\n\ndebugUrl\n\n**Open the Browserbase [session live view](https://docs.browserbase.com/features/session-live-view)** to include a human-in-the-loop.\n\nsessionUrl\n\n**Open the [session replay](https://docs.browserbase.com/features/session-replay)** to see the full session recording.\n\nsessionId\n\n**Unique identifier** for the [Browserbase session](https://docs.browserbase.com/introduction/what-is-browserbase). This is used to identify the session in the Browserbase dashboard and to connect to the session.\n\n###\n\n[‚Äã\n\n](#alternative%3A-browserbase-sdk)\n\nAlternative: Browserbase SDK\n\nIf you prefer to manage sessions directly, you can use the Browserbase SDK:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Browserbase } from \"@browserbasehq/sdk\";\n\nconst bb = new Browserbase({\n  apiKey: process.env.BROWSERBASE_API_KEY!\n});\n\nconst session = await bb.sessions.create({\n  projectId: process.env.BROWSERBASE_PROJECT_ID!,\n  // Add configuration options here\n});\n```\n\n####\n\n[‚Äã\n\n](#connecting-to-an-existing-session)\n\nConnecting to an Existing Session\n\nConnect to a previously created Browserbase session using its session ID:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  browserbaseSessionID: \"existing-session-uuid-here\",\n});\n\nawait stagehand.init();\nconsole.log(\"Resumed Session ID:\", stagehand.sessionId);\n```\n\n##\n\n[‚Äã\n\n](#local-environment)\n\nLocal Environment\n\nThe local environment runs browsers directly on your machine, providing full control over browser instances and configurations. Ideal for development, debugging, and scenarios requiring custom browser setups.\n\n###\n\n[‚Äã\n\n](#environment-comparison)\n\nEnvironment Comparison\n\nFeature\n\nBrowserbase\n\nLocal\n\n**Scalability**\n\nHigh (cloud-managed)\n\nLimited (local resources)\n\n**Stealth Features**\n\nAdvanced fingerprinting\n\nBasic stealth\n\n**Proxy Support**\n\nBuilt-in residential proxies\n\nManual configuration\n\n**Session Persistence**\n\nCloud context storage\n\nFile-based user data\n\n**Geographic Distribution**\n\nMulti-region deployment\n\nSingle machine\n\n**Debugging**\n\nSession recordings & logs\n\nDirect DevTools access\n\n**Setup Complexity**\n\nEnvironment variables only\n\nBrowser installation required\n\n**Cost**\n\nUsage-based pricing\n\nInfrastructure & maintenance\n\n**Best For**\n\nProduction, scale, compliance\n\nDevelopment, debugging\n\n###\n\n[‚Äã\n\n](#basic-local-setup)\n\nBasic Local Setup\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"LOCAL\"\n});\n\nawait stagehand.init();\nconsole.log(\"Session ID:\", stagehand.sessionId);\n```\n\n###\n\n[‚Äã\n\n](#advanced-local-configuration)\n\nAdvanced Local Configuration\n\nCustomize browser launch options for local development:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"LOCAL\",\n  localBrowserLaunchOptions: {\n    headless: false, // Show browser window\n    devtools: true, // Open developer tools\n    viewport: { width: 1280, height: 720 },\n    executablePath: '/opt/google/chrome/chrome', // Custom Chrome path\n    args: [\n      '--no-sandbox',\n      '--disable-setuid-sandbox',\n      '--disable-web-security',\n      '--allow-running-insecure-content',\n    ],\n    env: {\n      NODE_ENV: \"development\",\n      DEBUG: \"true\",\n    },\n  },\n});\n\nawait stagehand.init();\n```\n\n###\n\n[‚Äã\n\n](#connecting-to-your-local-browser)\n\nConnecting to your local browser\n\nConnect to your existing local Chrome/Chromium browser instead of launching a new one. This lets you automate your normal browser with all your existing tabs, extensions and settings.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n\tenv: \"LOCAL\",\n\tlocalBrowserLaunchOptions: {\n\t\tcdpUrl: 'http://localhost:9222'\n\t}\n});\n\nawait stagehand.init();\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nBrowserbase Authentication Errors\n\n-   Verify your `BROWSERBASE_API_KEY` and `BROWSERBASE_PROJECT_ID` are set correctly\n-   Check that your API key has the necessary permissions\n-   Ensure your Browserbase account has sufficient credits\n\nLocal Browser Launch Failures\n\n-   Install Chrome or Chromium on your system\n-   Set the correct `executablePath` for your Chrome installation\n-   Check that required dependencies are installed (Linux: `libnss3-dev libatk-bridge2.0-dev libgtk-3-dev libxss1 libasound2`)\n\nSession Timeout Issues\n\n-   Increase session timeout in `browserbaseSessionCreateParams.timeout`\n-   Use `keepAlive: true` for long-running sessions\n-   Monitor session usage to avoid unexpected terminations\n\n[Agent](/basics/agent)[Observability](/configuration/observability)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:12.073Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/logging",
        "title": "Browser - ü§ò Stagehand",
        "metaDescription": "Configure Stagehand on Browserbase or locally",
        "markdown": "Browser - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nBrowser\n\nOn this page\n\n-   [Browserbase Environment](#browserbase-environment)\n-   [Environment Variables](#environment-variables)\n-   [Using Stagehand with Browserbase](#using-stagehand-with-browserbase)\n-   [Basic Setup](#basic-setup)\n-   [Advanced Configuration](#advanced-configuration)\n-   [Initialization Result](#initialization-result)\n-   [Alternative: Browserbase SDK](#alternative%3A-browserbase-sdk)\n-   [Connecting to an Existing Session](#connecting-to-an-existing-session)\n-   [Local Environment](#local-environment)\n-   [Environment Comparison](#environment-comparison)\n-   [Basic Local Setup](#basic-local-setup)\n-   [Advanced Local Configuration](#advanced-local-configuration)\n-   [Connecting to your local browser](#connecting-to-your-local-browser)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n\nConfiguration\n\n# Browser\n\nCopy page\n\nConfigure Stagehand on Browserbase or locally\n\nCopy page\n\nStagehand supports two primary environments:\n\n-   **Browserbase** - Cloud-managed browser infrastructure optimized for production web automation at scale\n-   **Local** - Run browsers directly on your machine for development and debugging\n\n##\n\n[‚Äã\n\n](#browserbase-environment)\n\nBrowserbase Environment\n\nBrowserbase provides managed cloud browser infrastructure optimized for web automation at scale. It offers advanced features like stealth mode, proxy support, and persistent contexts.[\n\n## Browserbase\n\nDiscover the power of cloud-managed browser infrastructure with Browserbase.\n\n](https://docs.browserbase.com)\n\n###\n\n[‚Äã\n\n](#environment-variables)\n\nEnvironment Variables\n\nBefore getting started, set up the required environment variables:\n\n.env\n\nCopy\n\nAsk AI\n\n```\nBROWSERBASE_API_KEY=your_api_key_here\nBROWSERBASE_PROJECT_ID=your_project_id_here\n```\n\nGet your API key and Project ID from the [Browserbase Dashboard](https://browserbase.com/overview)\n\n###\n\n[‚Äã\n\n](#using-stagehand-with-browserbase)\n\nUsing Stagehand with Browserbase\n\n####\n\n[‚Äã\n\n](#basic-setup)\n\nBasic Setup\n\nThe simplest way to get started is with default settings:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n});\n\nawait stagehand.init();\n```\n\n####\n\n[‚Äã\n\n](#advanced-configuration)\n\nAdvanced Configuration\n\nConfigure browser settings, proxy support, and other session parameters:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  // Optional: API Key and Project ID will be pulled directly from your environment\n  apiKey: process.env.BROWSERBASE_API_KEY,\n  projectId: process.env.BROWSERBASE_PROJECT_ID,\n  browserbaseSessionCreateParams: {\n    proxies: true,\n    region: \"us-west-2\",\n    browserSettings: {\n      viewport: { width: 1920, height: 1080 },\n      blockAds: true,\n    },\n  },\n});\n\nawait stagehand.init();\nconsole.log(\"Session ID:\", stagehand.sessionId);\n```\n\nAdvanced Browserbase Configuration Example\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  apiKey: process.env.BROWSERBASE_API_KEY,\n  projectId: process.env.BROWSERBASE_PROJECT_ID,\n  browserbaseSessionCreateParams: {\n    projectId: process.env.BROWSERBASE_PROJECT_ID!, // Optional: automatically set if given in environment variable or by Stagehand parameter\n    proxies: true,\n    region: \"us-west-2\",\n    timeout: 3600, // 1 hour session timeout\n    keepAlive: true, // Available on Startup plan\n    browserSettings: {\n      advancedStealth: false, // this is a Scale Plan feature - reach out to support@browserbase.com to enable\n      blockAds: true,\n      solveCaptchas: true,\n      recordSession: false,\n      os: \"windows\", // Valid: \"windows\" | \"mac\" | \"linux\" | \"mobile\" | \"tablet\"\n      viewport: {\n        width: 1920,\n        height: 1080,\n      },\n    },\n    userMetadata: {\n      userId: \"automation-user-123\",\n      environment: \"production\",\n    },\n  },\n});\n```\n\n####\n\n[‚Äã\n\n](#initialization-result)\n\nInitialization Result\n\nAfter calling `stagehand.init()`, the method returns configuration information about the initialized session:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nconst result = await stagehand.init();\nconsole.log(result);\n```\n\nThe returned object contains:\n\nCopy\n\nAsk AI\n\n```\n{\n  debugUrl: 'https://www.browserbase.com/devtools/inspector.html?wss=connect.browserbase.com/debug/f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0/devtools/page/5474B0E0510C5B6E629BEB06E799CD70?debug=true',\n  sessionUrl: 'https://www.browserbase.com/sessions/f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0',\n  sessionId: 'f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0'\n}\n```\n\ndebugUrl\n\n**Open the Browserbase [session live view](https://docs.browserbase.com/features/session-live-view)** to include a human-in-the-loop.\n\nsessionUrl\n\n**Open the [session replay](https://docs.browserbase.com/features/session-replay)** to see the full session recording.\n\nsessionId\n\n**Unique identifier** for the [Browserbase session](https://docs.browserbase.com/introduction/what-is-browserbase). This is used to identify the session in the Browserbase dashboard and to connect to the session.\n\n###\n\n[‚Äã\n\n](#alternative%3A-browserbase-sdk)\n\nAlternative: Browserbase SDK\n\nIf you prefer to manage sessions directly, you can use the Browserbase SDK:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Browserbase } from \"@browserbasehq/sdk\";\n\nconst bb = new Browserbase({\n  apiKey: process.env.BROWSERBASE_API_KEY!\n});\n\nconst session = await bb.sessions.create({\n  projectId: process.env.BROWSERBASE_PROJECT_ID!,\n  // Add configuration options here\n});\n```\n\n####\n\n[‚Äã\n\n](#connecting-to-an-existing-session)\n\nConnecting to an Existing Session\n\nConnect to a previously created Browserbase session using its session ID:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  browserbaseSessionID: \"existing-session-uuid-here\",\n});\n\nawait stagehand.init();\nconsole.log(\"Resumed Session ID:\", stagehand.sessionId);\n```\n\n##\n\n[‚Äã\n\n](#local-environment)\n\nLocal Environment\n\nThe local environment runs browsers directly on your machine, providing full control over browser instances and configurations. Ideal for development, debugging, and scenarios requiring custom browser setups.\n\n###\n\n[‚Äã\n\n](#environment-comparison)\n\nEnvironment Comparison\n\nFeature\n\nBrowserbase\n\nLocal\n\n**Scalability**\n\nHigh (cloud-managed)\n\nLimited (local resources)\n\n**Stealth Features**\n\nAdvanced fingerprinting\n\nBasic stealth\n\n**Proxy Support**\n\nBuilt-in residential proxies\n\nManual configuration\n\n**Session Persistence**\n\nCloud context storage\n\nFile-based user data\n\n**Geographic Distribution**\n\nMulti-region deployment\n\nSingle machine\n\n**Debugging**\n\nSession recordings & logs\n\nDirect DevTools access\n\n**Setup Complexity**\n\nEnvironment variables only\n\nBrowser installation required\n\n**Cost**\n\nUsage-based pricing\n\nInfrastructure & maintenance\n\n**Best For**\n\nProduction, scale, compliance\n\nDevelopment, debugging\n\n###\n\n[‚Äã\n\n](#basic-local-setup)\n\nBasic Local Setup\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"LOCAL\"\n});\n\nawait stagehand.init();\nconsole.log(\"Session ID:\", stagehand.sessionId);\n```\n\n###\n\n[‚Äã\n\n](#advanced-local-configuration)\n\nAdvanced Local Configuration\n\nCustomize browser launch options for local development:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"LOCAL\",\n  localBrowserLaunchOptions: {\n    headless: false, // Show browser window\n    devtools: true, // Open developer tools\n    viewport: { width: 1280, height: 720 },\n    executablePath: '/opt/google/chrome/chrome', // Custom Chrome path\n    args: [\n      '--no-sandbox',\n      '--disable-setuid-sandbox',\n      '--disable-web-security',\n      '--allow-running-insecure-content',\n    ],\n    env: {\n      NODE_ENV: \"development\",\n      DEBUG: \"true\",\n    },\n  },\n});\n\nawait stagehand.init();\n```\n\n###\n\n[‚Äã\n\n](#connecting-to-your-local-browser)\n\nConnecting to your local browser\n\nConnect to your existing local Chrome/Chromium browser instead of launching a new one. This lets you automate your normal browser with all your existing tabs, extensions and settings.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n\tenv: \"LOCAL\",\n\tlocalBrowserLaunchOptions: {\n\t\tcdpUrl: 'http://localhost:9222'\n\t}\n});\n\nawait stagehand.init();\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nBrowserbase Authentication Errors\n\n-   Verify your `BROWSERBASE_API_KEY` and `BROWSERBASE_PROJECT_ID` are set correctly\n-   Check that your API key has the necessary permissions\n-   Ensure your Browserbase account has sufficient credits\n\nLocal Browser Launch Failures\n\n-   Install Chrome or Chromium on your system\n-   Set the correct `executablePath` for your Chrome installation\n-   Check that required dependencies are installed (Linux: `libnss3-dev libatk-bridge2.0-dev libgtk-3-dev libxss1 libasound2`)\n\nSession Timeout Issues\n\n-   Increase session timeout in `browserbaseSessionCreateParams.timeout`\n-   Use `keepAlive: true` for long-running sessions\n-   Monitor session usage to avoid unexpected terminations\n\n[Agent](/basics/agent)[Observability](/configuration/observability)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:12.073Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models",
        "title": "Browser - ü§ò Stagehand",
        "metaDescription": "Configure Stagehand on Browserbase or locally",
        "markdown": "Browser - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nBrowser\n\nOn this page\n\n-   [Browserbase Environment](#browserbase-environment)\n-   [Environment Variables](#environment-variables)\n-   [Using Stagehand with Browserbase](#using-stagehand-with-browserbase)\n-   [Basic Setup](#basic-setup)\n-   [Advanced Configuration](#advanced-configuration)\n-   [Initialization Result](#initialization-result)\n-   [Alternative: Browserbase SDK](#alternative%3A-browserbase-sdk)\n-   [Connecting to an Existing Session](#connecting-to-an-existing-session)\n-   [Local Environment](#local-environment)\n-   [Environment Comparison](#environment-comparison)\n-   [Basic Local Setup](#basic-local-setup)\n-   [Advanced Local Configuration](#advanced-local-configuration)\n-   [Connecting to your local browser](#connecting-to-your-local-browser)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n\nConfiguration\n\n# Browser\n\nCopy page\n\nConfigure Stagehand on Browserbase or locally\n\nCopy page\n\nStagehand supports two primary environments:\n\n-   **Browserbase** - Cloud-managed browser infrastructure optimized for production web automation at scale\n-   **Local** - Run browsers directly on your machine for development and debugging\n\n##\n\n[‚Äã\n\n](#browserbase-environment)\n\nBrowserbase Environment\n\nBrowserbase provides managed cloud browser infrastructure optimized for web automation at scale. It offers advanced features like stealth mode, proxy support, and persistent contexts.[\n\n## Browserbase\n\nDiscover the power of cloud-managed browser infrastructure with Browserbase.\n\n](https://docs.browserbase.com)\n\n###\n\n[‚Äã\n\n](#environment-variables)\n\nEnvironment Variables\n\nBefore getting started, set up the required environment variables:\n\n.env\n\nCopy\n\nAsk AI\n\n```\nBROWSERBASE_API_KEY=your_api_key_here\nBROWSERBASE_PROJECT_ID=your_project_id_here\n```\n\nGet your API key and Project ID from the [Browserbase Dashboard](https://browserbase.com/overview)\n\n###\n\n[‚Äã\n\n](#using-stagehand-with-browserbase)\n\nUsing Stagehand with Browserbase\n\n####\n\n[‚Äã\n\n](#basic-setup)\n\nBasic Setup\n\nThe simplest way to get started is with default settings:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n});\n\nawait stagehand.init();\n```\n\n####\n\n[‚Äã\n\n](#advanced-configuration)\n\nAdvanced Configuration\n\nConfigure browser settings, proxy support, and other session parameters:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  // Optional: API Key and Project ID will be pulled directly from your environment\n  apiKey: process.env.BROWSERBASE_API_KEY,\n  projectId: process.env.BROWSERBASE_PROJECT_ID,\n  browserbaseSessionCreateParams: {\n    proxies: true,\n    region: \"us-west-2\",\n    browserSettings: {\n      viewport: { width: 1920, height: 1080 },\n      blockAds: true,\n    },\n  },\n});\n\nawait stagehand.init();\nconsole.log(\"Session ID:\", stagehand.sessionId);\n```\n\nAdvanced Browserbase Configuration Example\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  apiKey: process.env.BROWSERBASE_API_KEY,\n  projectId: process.env.BROWSERBASE_PROJECT_ID,\n  browserbaseSessionCreateParams: {\n    projectId: process.env.BROWSERBASE_PROJECT_ID!, // Optional: automatically set if given in environment variable or by Stagehand parameter\n    proxies: true,\n    region: \"us-west-2\",\n    timeout: 3600, // 1 hour session timeout\n    keepAlive: true, // Available on Startup plan\n    browserSettings: {\n      advancedStealth: false, // this is a Scale Plan feature - reach out to support@browserbase.com to enable\n      blockAds: true,\n      solveCaptchas: true,\n      recordSession: false,\n      os: \"windows\", // Valid: \"windows\" | \"mac\" | \"linux\" | \"mobile\" | \"tablet\"\n      viewport: {\n        width: 1920,\n        height: 1080,\n      },\n    },\n    userMetadata: {\n      userId: \"automation-user-123\",\n      environment: \"production\",\n    },\n  },\n});\n```\n\n####\n\n[‚Äã\n\n](#initialization-result)\n\nInitialization Result\n\nAfter calling `stagehand.init()`, the method returns configuration information about the initialized session:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nconst result = await stagehand.init();\nconsole.log(result);\n```\n\nThe returned object contains:\n\nCopy\n\nAsk AI\n\n```\n{\n  debugUrl: 'https://www.browserbase.com/devtools/inspector.html?wss=connect.browserbase.com/debug/f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0/devtools/page/5474B0E0510C5B6E629BEB06E799CD70?debug=true',\n  sessionUrl: 'https://www.browserbase.com/sessions/f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0',\n  sessionId: 'f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0'\n}\n```\n\ndebugUrl\n\n**Open the Browserbase [session live view](https://docs.browserbase.com/features/session-live-view)** to include a human-in-the-loop.\n\nsessionUrl\n\n**Open the [session replay](https://docs.browserbase.com/features/session-replay)** to see the full session recording.\n\nsessionId\n\n**Unique identifier** for the [Browserbase session](https://docs.browserbase.com/introduction/what-is-browserbase). This is used to identify the session in the Browserbase dashboard and to connect to the session.\n\n###\n\n[‚Äã\n\n](#alternative%3A-browserbase-sdk)\n\nAlternative: Browserbase SDK\n\nIf you prefer to manage sessions directly, you can use the Browserbase SDK:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Browserbase } from \"@browserbasehq/sdk\";\n\nconst bb = new Browserbase({\n  apiKey: process.env.BROWSERBASE_API_KEY!\n});\n\nconst session = await bb.sessions.create({\n  projectId: process.env.BROWSERBASE_PROJECT_ID!,\n  // Add configuration options here\n});\n```\n\n####\n\n[‚Äã\n\n](#connecting-to-an-existing-session)\n\nConnecting to an Existing Session\n\nConnect to a previously created Browserbase session using its session ID:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  browserbaseSessionID: \"existing-session-uuid-here\",\n});\n\nawait stagehand.init();\nconsole.log(\"Resumed Session ID:\", stagehand.sessionId);\n```\n\n##\n\n[‚Äã\n\n](#local-environment)\n\nLocal Environment\n\nThe local environment runs browsers directly on your machine, providing full control over browser instances and configurations. Ideal for development, debugging, and scenarios requiring custom browser setups.\n\n###\n\n[‚Äã\n\n](#environment-comparison)\n\nEnvironment Comparison\n\nFeature\n\nBrowserbase\n\nLocal\n\n**Scalability**\n\nHigh (cloud-managed)\n\nLimited (local resources)\n\n**Stealth Features**\n\nAdvanced fingerprinting\n\nBasic stealth\n\n**Proxy Support**\n\nBuilt-in residential proxies\n\nManual configuration\n\n**Session Persistence**\n\nCloud context storage\n\nFile-based user data\n\n**Geographic Distribution**\n\nMulti-region deployment\n\nSingle machine\n\n**Debugging**\n\nSession recordings & logs\n\nDirect DevTools access\n\n**Setup Complexity**\n\nEnvironment variables only\n\nBrowser installation required\n\n**Cost**\n\nUsage-based pricing\n\nInfrastructure & maintenance\n\n**Best For**\n\nProduction, scale, compliance\n\nDevelopment, debugging\n\n###\n\n[‚Äã\n\n](#basic-local-setup)\n\nBasic Local Setup\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"LOCAL\"\n});\n\nawait stagehand.init();\nconsole.log(\"Session ID:\", stagehand.sessionId);\n```\n\n###\n\n[‚Äã\n\n](#advanced-local-configuration)\n\nAdvanced Local Configuration\n\nCustomize browser launch options for local development:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"LOCAL\",\n  localBrowserLaunchOptions: {\n    headless: false, // Show browser window\n    devtools: true, // Open developer tools\n    viewport: { width: 1280, height: 720 },\n    executablePath: '/opt/google/chrome/chrome', // Custom Chrome path\n    args: [\n      '--no-sandbox',\n      '--disable-setuid-sandbox',\n      '--disable-web-security',\n      '--allow-running-insecure-content',\n    ],\n    env: {\n      NODE_ENV: \"development\",\n      DEBUG: \"true\",\n    },\n  },\n});\n\nawait stagehand.init();\n```\n\n###\n\n[‚Äã\n\n](#connecting-to-your-local-browser)\n\nConnecting to your local browser\n\nConnect to your existing local Chrome/Chromium browser instead of launching a new one. This lets you automate your normal browser with all your existing tabs, extensions and settings.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n\tenv: \"LOCAL\",\n\tlocalBrowserLaunchOptions: {\n\t\tcdpUrl: 'http://localhost:9222'\n\t}\n});\n\nawait stagehand.init();\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nBrowserbase Authentication Errors\n\n-   Verify your `BROWSERBASE_API_KEY` and `BROWSERBASE_PROJECT_ID` are set correctly\n-   Check that your API key has the necessary permissions\n-   Ensure your Browserbase account has sufficient credits\n\nLocal Browser Launch Failures\n\n-   Install Chrome or Chromium on your system\n-   Set the correct `executablePath` for your Chrome installation\n-   Check that required dependencies are installed (Linux: `libnss3-dev libatk-bridge2.0-dev libgtk-3-dev libxss1 libasound2`)\n\nSession Timeout Issues\n\n-   Increase session timeout in `browserbaseSessionCreateParams.timeout`\n-   Use `keepAlive: true` for long-running sessions\n-   Monitor session usage to avoid unexpected terminations\n\n[Agent](/basics/agent)[Observability](/configuration/observability)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:12.072Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/evaluations",
        "title": "Browser - ü§ò Stagehand",
        "metaDescription": "Configure Stagehand on Browserbase or locally",
        "markdown": "Browser - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nBrowser\n\nOn this page\n\n-   [Browserbase Environment](#browserbase-environment)\n-   [Environment Variables](#environment-variables)\n-   [Using Stagehand with Browserbase](#using-stagehand-with-browserbase)\n-   [Basic Setup](#basic-setup)\n-   [Advanced Configuration](#advanced-configuration)\n-   [Initialization Result](#initialization-result)\n-   [Alternative: Browserbase SDK](#alternative%3A-browserbase-sdk)\n-   [Connecting to an Existing Session](#connecting-to-an-existing-session)\n-   [Local Environment](#local-environment)\n-   [Environment Comparison](#environment-comparison)\n-   [Basic Local Setup](#basic-local-setup)\n-   [Advanced Local Configuration](#advanced-local-configuration)\n-   [Connecting to your local browser](#connecting-to-your-local-browser)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n\nConfiguration\n\n# Browser\n\nCopy page\n\nConfigure Stagehand on Browserbase or locally\n\nCopy page\n\nStagehand supports two primary environments:\n\n-   **Browserbase** - Cloud-managed browser infrastructure optimized for production web automation at scale\n-   **Local** - Run browsers directly on your machine for development and debugging\n\n##\n\n[‚Äã\n\n](#browserbase-environment)\n\nBrowserbase Environment\n\nBrowserbase provides managed cloud browser infrastructure optimized for web automation at scale. It offers advanced features like stealth mode, proxy support, and persistent contexts.[\n\n## Browserbase\n\nDiscover the power of cloud-managed browser infrastructure with Browserbase.\n\n](https://docs.browserbase.com)\n\n###\n\n[‚Äã\n\n](#environment-variables)\n\nEnvironment Variables\n\nBefore getting started, set up the required environment variables:\n\n.env\n\nCopy\n\nAsk AI\n\n```\nBROWSERBASE_API_KEY=your_api_key_here\nBROWSERBASE_PROJECT_ID=your_project_id_here\n```\n\nGet your API key and Project ID from the [Browserbase Dashboard](https://browserbase.com/overview)\n\n###\n\n[‚Äã\n\n](#using-stagehand-with-browserbase)\n\nUsing Stagehand with Browserbase\n\n####\n\n[‚Äã\n\n](#basic-setup)\n\nBasic Setup\n\nThe simplest way to get started is with default settings:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n});\n\nawait stagehand.init();\n```\n\n####\n\n[‚Äã\n\n](#advanced-configuration)\n\nAdvanced Configuration\n\nConfigure browser settings, proxy support, and other session parameters:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  // Optional: API Key and Project ID will be pulled directly from your environment\n  apiKey: process.env.BROWSERBASE_API_KEY,\n  projectId: process.env.BROWSERBASE_PROJECT_ID,\n  browserbaseSessionCreateParams: {\n    proxies: true,\n    region: \"us-west-2\",\n    browserSettings: {\n      viewport: { width: 1920, height: 1080 },\n      blockAds: true,\n    },\n  },\n});\n\nawait stagehand.init();\nconsole.log(\"Session ID:\", stagehand.sessionId);\n```\n\nAdvanced Browserbase Configuration Example\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  apiKey: process.env.BROWSERBASE_API_KEY,\n  projectId: process.env.BROWSERBASE_PROJECT_ID,\n  browserbaseSessionCreateParams: {\n    projectId: process.env.BROWSERBASE_PROJECT_ID!, // Optional: automatically set if given in environment variable or by Stagehand parameter\n    proxies: true,\n    region: \"us-west-2\",\n    timeout: 3600, // 1 hour session timeout\n    keepAlive: true, // Available on Startup plan\n    browserSettings: {\n      advancedStealth: false, // this is a Scale Plan feature - reach out to support@browserbase.com to enable\n      blockAds: true,\n      solveCaptchas: true,\n      recordSession: false,\n      os: \"windows\", // Valid: \"windows\" | \"mac\" | \"linux\" | \"mobile\" | \"tablet\"\n      viewport: {\n        width: 1920,\n        height: 1080,\n      },\n    },\n    userMetadata: {\n      userId: \"automation-user-123\",\n      environment: \"production\",\n    },\n  },\n});\n```\n\n####\n\n[‚Äã\n\n](#initialization-result)\n\nInitialization Result\n\nAfter calling `stagehand.init()`, the method returns configuration information about the initialized session:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nconst result = await stagehand.init();\nconsole.log(result);\n```\n\nThe returned object contains:\n\nCopy\n\nAsk AI\n\n```\n{\n  debugUrl: 'https://www.browserbase.com/devtools/inspector.html?wss=connect.browserbase.com/debug/f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0/devtools/page/5474B0E0510C5B6E629BEB06E799CD70?debug=true',\n  sessionUrl: 'https://www.browserbase.com/sessions/f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0',\n  sessionId: 'f8a21b4a-6fa1-4ab9-9007-fbfe61dc14f0'\n}\n```\n\ndebugUrl\n\n**Open the Browserbase [session live view](https://docs.browserbase.com/features/session-live-view)** to include a human-in-the-loop.\n\nsessionUrl\n\n**Open the [session replay](https://docs.browserbase.com/features/session-replay)** to see the full session recording.\n\nsessionId\n\n**Unique identifier** for the [Browserbase session](https://docs.browserbase.com/introduction/what-is-browserbase). This is used to identify the session in the Browserbase dashboard and to connect to the session.\n\n###\n\n[‚Äã\n\n](#alternative%3A-browserbase-sdk)\n\nAlternative: Browserbase SDK\n\nIf you prefer to manage sessions directly, you can use the Browserbase SDK:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Browserbase } from \"@browserbasehq/sdk\";\n\nconst bb = new Browserbase({\n  apiKey: process.env.BROWSERBASE_API_KEY!\n});\n\nconst session = await bb.sessions.create({\n  projectId: process.env.BROWSERBASE_PROJECT_ID!,\n  // Add configuration options here\n});\n```\n\n####\n\n[‚Äã\n\n](#connecting-to-an-existing-session)\n\nConnecting to an Existing Session\n\nConnect to a previously created Browserbase session using its session ID:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"BROWSERBASE\",\n  browserbaseSessionID: \"existing-session-uuid-here\",\n});\n\nawait stagehand.init();\nconsole.log(\"Resumed Session ID:\", stagehand.sessionId);\n```\n\n##\n\n[‚Äã\n\n](#local-environment)\n\nLocal Environment\n\nThe local environment runs browsers directly on your machine, providing full control over browser instances and configurations. Ideal for development, debugging, and scenarios requiring custom browser setups.\n\n###\n\n[‚Äã\n\n](#environment-comparison)\n\nEnvironment Comparison\n\nFeature\n\nBrowserbase\n\nLocal\n\n**Scalability**\n\nHigh (cloud-managed)\n\nLimited (local resources)\n\n**Stealth Features**\n\nAdvanced fingerprinting\n\nBasic stealth\n\n**Proxy Support**\n\nBuilt-in residential proxies\n\nManual configuration\n\n**Session Persistence**\n\nCloud context storage\n\nFile-based user data\n\n**Geographic Distribution**\n\nMulti-region deployment\n\nSingle machine\n\n**Debugging**\n\nSession recordings & logs\n\nDirect DevTools access\n\n**Setup Complexity**\n\nEnvironment variables only\n\nBrowser installation required\n\n**Cost**\n\nUsage-based pricing\n\nInfrastructure & maintenance\n\n**Best For**\n\nProduction, scale, compliance\n\nDevelopment, debugging\n\n###\n\n[‚Äã\n\n](#basic-local-setup)\n\nBasic Local Setup\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"LOCAL\"\n});\n\nawait stagehand.init();\nconsole.log(\"Session ID:\", stagehand.sessionId);\n```\n\n###\n\n[‚Äã\n\n](#advanced-local-configuration)\n\nAdvanced Local Configuration\n\nCustomize browser launch options for local development:\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  env: \"LOCAL\",\n  localBrowserLaunchOptions: {\n    headless: false, // Show browser window\n    devtools: true, // Open developer tools\n    viewport: { width: 1280, height: 720 },\n    executablePath: '/opt/google/chrome/chrome', // Custom Chrome path\n    args: [\n      '--no-sandbox',\n      '--disable-setuid-sandbox',\n      '--disable-web-security',\n      '--allow-running-insecure-content',\n    ],\n    env: {\n      NODE_ENV: \"development\",\n      DEBUG: \"true\",\n    },\n  },\n});\n\nawait stagehand.init();\n```\n\n###\n\n[‚Äã\n\n](#connecting-to-your-local-browser)\n\nConnecting to your local browser\n\nConnect to your existing local Chrome/Chromium browser instead of launching a new one. This lets you automate your normal browser with all your existing tabs, extensions and settings.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n\tenv: \"LOCAL\",\n\tlocalBrowserLaunchOptions: {\n\t\tcdpUrl: 'http://localhost:9222'\n\t}\n});\n\nawait stagehand.init();\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nBrowserbase Authentication Errors\n\n-   Verify your `BROWSERBASE_API_KEY` and `BROWSERBASE_PROJECT_ID` are set correctly\n-   Check that your API key has the necessary permissions\n-   Ensure your Browserbase account has sufficient credits\n\nLocal Browser Launch Failures\n\n-   Install Chrome or Chromium on your system\n-   Set the correct `executablePath` for your Chrome installation\n-   Check that required dependencies are installed (Linux: `libnss3-dev libatk-bridge2.0-dev libgtk-3-dev libxss1 libasound2`)\n\nSession Timeout Issues\n\n-   Increase session timeout in `browserbaseSessionCreateParams.timeout`\n-   Use `keepAlive: true` for long-running sessions\n-   Monitor session usage to avoid unexpected terminations\n\n[Agent](/basics/agent)[Observability](/configuration/observability)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:12.073Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/caching-actions",
        "title": "Working with iframes - ü§ò Stagehand",
        "metaDescription": null,
        "markdown": "Working with iframes - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nBest Practices\n\nWorking with iframes\n\nOn this page\n\n-   [What is an iframe?](#what-is-an-iframe%3F)\n-   [Enable iframe support](#enable-iframe-support)\n-   [Tips](#tips)\n-   [Next steps](#next-steps)\n\nBest Practices\n\n# Working with iframes\n\nCopy page\n\nCopy page\n\n###\n\n[‚Äã\n\n](#what-is-an-iframe%3F)\n\nWhat is an iframe?\n\nIframes embed other pages within your current page. Sites use them for consent banners, payment widgets, chat bubbles, and third-party content. Elements inside iframes exist in a separate context than the main page.\n\n###\n\n[‚Äã\n\n](#enable-iframe-support)\n\nEnable iframe support\n\nSet `iframes: true` in your `act()`, `observe()`, and `extract()` commands.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Act within iframes\nawait page.act({ action: \"click the accept cookies button\", iframes: true });\n\n// Observe within iframes\nconst results = await page.observe({\n  instruction: \"Find the primary action button\",\n  iframes: true,\n});\n\n// Extract from iframes\nconst data = await page.extract({\n  instruction: \"Extract the product price from the payment widget\",\n  schema: z.object({\n    price: z.string(),\n  }),\n  iframes: true,\n});\n```\n\n###\n\n[‚Äã\n\n](#tips)\n\nTips\n\n-   Iframes can increase processing time. For best performance, use the iframe option only when necessary.\n-   When you are unsure whether an element will be in an iframe, you can verify the presence of iframes in Stagehand logs.\n-   If an element intermittently fails to be found, it may be inside a lazy‚Äëloaded iframe. Add small waits between steps or re‚Äërun your action.\n\nYou can enable experimental features (like Shadow DOM support) via your Stagehand configuration. See the [configuration guide](/configuration/browser).\n\n##\n\n[‚Äã\n\n](#next-steps)\n\nNext steps\n\n[\n\n## Analyze pages with observe()\n\nUse `observe()` to plan precise, single-step actions before executing them.\n\n](/basics/observe)[\n\n## Extract data with extract()\n\nUse `extract()` with a data schema to pull clean, typed data from any page.\n\n](/basics/extract)[\n\n## Caching actions\n\nSpeed up repeated automations by caching actions.\n\n](/best-practices/caching)[\n\n## Act fundamentals\n\nLearn how to perform single-step actions reliably with `act()`.\n\n](/basics/act)\n\n[Using Multiple Tabs](/best-practices/using-multiple-tabs)[Deploying Stagehand](/best-practices/deployments)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:23.547Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/cost-optimization",
        "title": "Failed to Load",
        "metaDescription": null,
        "markdown": "",
        "timestamp": "2025-09-28T18:55:18.155Z",
        "success": false,
        "error": "Failed to parse server response"
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/using-multiple-tabs",
        "title": "Working with iframes - ü§ò Stagehand",
        "metaDescription": null,
        "markdown": "Working with iframes - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nBest Practices\n\nWorking with iframes\n\nOn this page\n\n-   [What is an iframe?](#what-is-an-iframe%3F)\n-   [Enable iframe support](#enable-iframe-support)\n-   [Tips](#tips)\n-   [Next steps](#next-steps)\n\nBest Practices\n\n# Working with iframes\n\nCopy page\n\nCopy page\n\n###\n\n[‚Äã\n\n](#what-is-an-iframe%3F)\n\nWhat is an iframe?\n\nIframes embed other pages within your current page. Sites use them for consent banners, payment widgets, chat bubbles, and third-party content. Elements inside iframes exist in a separate context than the main page.\n\n###\n\n[‚Äã\n\n](#enable-iframe-support)\n\nEnable iframe support\n\nSet `iframes: true` in your `act()`, `observe()`, and `extract()` commands.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Act within iframes\nawait page.act({ action: \"click the accept cookies button\", iframes: true });\n\n// Observe within iframes\nconst results = await page.observe({\n  instruction: \"Find the primary action button\",\n  iframes: true,\n});\n\n// Extract from iframes\nconst data = await page.extract({\n  instruction: \"Extract the product price from the payment widget\",\n  schema: z.object({\n    price: z.string(),\n  }),\n  iframes: true,\n});\n```\n\n###\n\n[‚Äã\n\n](#tips)\n\nTips\n\n-   Iframes can increase processing time. For best performance, use the iframe option only when necessary.\n-   When you are unsure whether an element will be in an iframe, you can verify the presence of iframes in Stagehand logs.\n-   If an element intermittently fails to be found, it may be inside a lazy‚Äëloaded iframe. Add small waits between steps or re‚Äërun your action.\n\nYou can enable experimental features (like Shadow DOM support) via your Stagehand configuration. See the [configuration guide](/configuration/browser).\n\n##\n\n[‚Äã\n\n](#next-steps)\n\nNext steps\n\n[\n\n## Analyze pages with observe()\n\nUse `observe()` to plan precise, single-step actions before executing them.\n\n](/basics/observe)[\n\n## Extract data with extract()\n\nUse `extract()` with a data schema to pull clean, typed data from any page.\n\n](/basics/extract)[\n\n## Caching actions\n\nSpeed up repeated automations by caching actions.\n\n](/best-practices/caching)[\n\n## Act fundamentals\n\nLearn how to perform single-step actions reliably with `act()`.\n\n](/basics/act)\n\n[Using Multiple Tabs](/best-practices/using-multiple-tabs)[Deploying Stagehand](/best-practices/deployments)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:23.471Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/working-with-iframes",
        "title": "Working with iframes - ü§ò Stagehand",
        "metaDescription": null,
        "markdown": "Working with iframes - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nBest Practices\n\nWorking with iframes\n\nOn this page\n\n-   [What is an iframe?](#what-is-an-iframe%3F)\n-   [Enable iframe support](#enable-iframe-support)\n-   [Tips](#tips)\n-   [Next steps](#next-steps)\n\nBest Practices\n\n# Working with iframes\n\nCopy page\n\nCopy page\n\n###\n\n[‚Äã\n\n](#what-is-an-iframe%3F)\n\nWhat is an iframe?\n\nIframes embed other pages within your current page. Sites use them for consent banners, payment widgets, chat bubbles, and third-party content. Elements inside iframes exist in a separate context than the main page.\n\n###\n\n[‚Äã\n\n](#enable-iframe-support)\n\nEnable iframe support\n\nSet `iframes: true` in your `act()`, `observe()`, and `extract()` commands.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Act within iframes\nawait page.act({ action: \"click the accept cookies button\", iframes: true });\n\n// Observe within iframes\nconst results = await page.observe({\n  instruction: \"Find the primary action button\",\n  iframes: true,\n});\n\n// Extract from iframes\nconst data = await page.extract({\n  instruction: \"Extract the product price from the payment widget\",\n  schema: z.object({\n    price: z.string(),\n  }),\n  iframes: true,\n});\n```\n\n###\n\n[‚Äã\n\n](#tips)\n\nTips\n\n-   Iframes can increase processing time. For best performance, use the iframe option only when necessary.\n-   When you are unsure whether an element will be in an iframe, you can verify the presence of iframes in Stagehand logs.\n-   If an element intermittently fails to be found, it may be inside a lazy‚Äëloaded iframe. Add small waits between steps or re‚Äërun your action.\n\nYou can enable experimental features (like Shadow DOM support) via your Stagehand configuration. See the [configuration guide](/configuration/browser).\n\n##\n\n[‚Äã\n\n](#next-steps)\n\nNext steps\n\n[\n\n## Analyze pages with observe()\n\nUse `observe()` to plan precise, single-step actions before executing them.\n\n](/basics/observe)[\n\n## Extract data with extract()\n\nUse `extract()` with a data schema to pull clean, typed data from any page.\n\n](/basics/extract)[\n\n## Caching actions\n\nSpeed up repeated automations by caching actions.\n\n](/best-practices/caching)[\n\n## Act fundamentals\n\nLearn how to perform single-step actions reliably with `act()`.\n\n](/basics/act)\n\n[Using Multiple Tabs](/best-practices/using-multiple-tabs)[Deploying Stagehand](/best-practices/deployments)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:24.338Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/deploying-stagehand",
        "title": "Failed to Load",
        "metaDescription": null,
        "markdown": "",
        "timestamp": "2025-09-28T18:55:18.162Z",
        "success": false,
        "error": "Failed to parse server response"
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/computer-use-agents",
        "title": "Page Not Found",
        "metaDescription": null,
        "markdown": "Page Not Found\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nPage Not Found\n\n404\n\n# Page Not Found\n\nWe couldn't find the page you were looking for. Maybe you were looking for?\n\n[Computer Use Agents](/best-practices/computer-use#)[Agent](/basics/agent#computer-use-agents)[Prompting Best Practices](/best-practices/prompting-best-practices#schema-best-practices)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:36.096Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/contribute-to-stagehand",
        "title": "Page Not Found",
        "metaDescription": null,
        "markdown": "Page Not Found\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nPage Not Found\n\n404\n\n# Page Not Found\n\nWe couldn't find the page you were looking for. Maybe you were looking for?\n\n[Computer Use Agents](/best-practices/computer-use#)[Agent](/basics/agent#computer-use-agents)[Prompting Best Practices](/best-practices/prompting-best-practices#schema-best-practices)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:35.230Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/playwright-interoperability",
        "title": "Page Not Found",
        "metaDescription": null,
        "markdown": "Page Not Found\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nPage Not Found\n\n404\n\n# Page Not Found\n\nWe couldn't find the page you were looking for. Maybe you were looking for?\n\n[Computer Use Agents](/best-practices/computer-use#)[Agent](/basics/agent#computer-use-agents)[Prompting Best Practices](/best-practices/prompting-best-practices#schema-best-practices)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:35.231Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/build-a-web-browsing-agent",
        "title": "Failed to Load",
        "metaDescription": null,
        "markdown": "",
        "timestamp": "2025-09-28T18:55:30.634Z",
        "success": false,
        "error": "Failed to parse server response"
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/agent-fallbacks",
        "title": "Page Not Found",
        "metaDescription": null,
        "markdown": "Page Not Found\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nPage Not Found\n\n404\n\n# Page Not Found\n\nWe couldn't find the page you were looking for. Maybe you were looking for?\n\n[Computer Use Agents](/best-practices/computer-use#)[Agent](/basics/agent#computer-use-agents)[Prompting Best Practices](/best-practices/prompting-best-practices#schema-best-practices)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:35.230Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/prompting-best-practices",
        "title": "Prompting Best Practices - ü§ò Stagehand",
        "metaDescription": "Write effective prompts for reliable Stagehand automation",
        "markdown": "Prompting Best Practices - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nBest Practices\n\nPrompting Best Practices\n\nOn this page\n\n-   [Act Method](#act-method)\n-   [Use Element Types, Not Colors](#use-element-types%2C-not-colors)\n-   [Use Descriptive Language](#use-descriptive-language)\n-   [Choose the Right Action Verbs](#choose-the-right-action-verbs)\n-   [Protect Sensitive Data](#protect-sensitive-data)\n-   [Extract Method](#extract-method)\n-   [Schema Best Practices](#schema-best-practices)\n-   [Handle Arrays Correctly](#handle-arrays-correctly)\n-   [Use Proper URL Types](#use-proper-url-types)\n-   [Observe Method](#observe-method)\n-   [Check Elements First](#check-elements-first)\n-   [Be Specific About Element Types](#be-specific-about-element-types)\n-   [Agent Method](#agent-method)\n-   [Navigate First](#navigate-first)\n-   [Be Highly Specific](#be-highly-specific)\n-   [Set Appropriate Step Limits](#set-appropriate-step-limits)\n-   [Include Success Criteria](#include-success-criteria)\n-   [Common Mistakes to Avoid](#common-mistakes-to-avoid)\n-   [Testing Your Prompts](#testing-your-prompts)\n\nBest Practices\n\n# Prompting Best Practices\n\nCopy page\n\nWrite effective prompts for reliable Stagehand automation\n\nCopy page\n\nGood prompts make Stagehand reliable. Bad prompts cause failures. Here‚Äôs how to write prompts that work consistently.\n\n##\n\n[‚Äã\n\n](#act-method)\n\nAct Method\n\nUse `act()` for single actions on web pages. Each action should be focused and clear.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Single, specific actions\nawait page.act(\"click the 'Add to Cart' button\");\nawait page.act(\"type 'user@example.com' into the email field\");\n\n// Bad - Multiple actions combined\nawait page.act(\"fill out the form and submit it\");\nawait page.act(\"login with credentials and navigate to dashboard\");\n```\n\n###\n\n[‚Äã\n\n](#use-element-types%2C-not-colors)\n\nUse Element Types, Not Colors\n\nDescribe elements by their type and function rather than visual attributes like color.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Element types and descriptive text\nawait page.act(\"click the 'Sign In' button\");\nawait page.act(\"type into the email input field\");\n\n// Bad - Color-based descriptions\nawait page.act(\"click the blue button\");\nawait page.act(\"type into the white input\");\n```\n\n###\n\n[‚Äã\n\n](#use-descriptive-language)\n\nUse Descriptive Language\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Clear element identification\nawait page.act(\"click the 'Next' button at the bottom of the form\");\nawait page.act(\"type into the search bar at the top of the page\");\n\n// Bad - Vague descriptions\nawait page.act(\"click next\");\nawait page.act(\"type into search\");\n```\n\n###\n\n[‚Äã\n\n](#choose-the-right-action-verbs)\n\nChoose the Right Action Verbs\n\n-   **Click** for buttons, links, checkboxes\n-   **Type** for text inputs\n-   **Select** for dropdowns\n-   **Check/uncheck** for checkboxes\n-   **Upload** for file inputs\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good\nawait page.act(\"click the submit button\");\nawait page.act(\"select 'Option 1' from dropdown\");\n\n// Bad\nawait page.act(\"click submit\");\nawait page.act(\"choose option 1\");\n```\n\n###\n\n[‚Äã\n\n](#protect-sensitive-data)\n\nProtect Sensitive Data\n\nVariables keep sensitive information out of prompts and logs.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Secure approach\nawait page.act({\n  action: \"enter %username% in the email field\",\n  variables: {\n    username: \"user@example.com\"\n  }\n});\n\nawait page.act({\n  action: \"enter %password% in the password field\",\n  variables: {\n    password: process.env.USER_PASSWORD\n  }\n});\n\n// Bad - Insecure approach\nawait page.act(\"type 'mySecretPassword123' into the password field\");\n```\n\nSet `verbose: 0` in your Stagehand config to prevent secrets from appearing in logs.\n\n##\n\n[‚Äã\n\n](#extract-method)\n\nExtract Method\n\nUse `extract()` to pull structured data from pages. Define clear schemas and provide context.\n\n###\n\n[‚Äã\n\n](#schema-best-practices)\n\nSchema Best Practices\n\nUse descriptive field names, correct types, and detailed descriptions. Field descriptions provide context that helps the agent understand exactly what to extract.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Descriptive names, correct types, and helpful descriptions\nconst productData = await page.extract({\n  instruction: \"Extract product information\",\n  schema: z.object({\n    productTitle: z.string().describe(\"The main product name displayed on the page\"),\n    priceInDollars: z.number().describe(\"Current selling price as a number, without currency symbol\"),\n    isInStock: z.boolean().describe(\"Whether the product is available for purchase\")\n  })\n});\n\n// Bad - Generic names, wrong types, no descriptions\nconst data = await page.extract({\n  instruction: \"Get product details\",\n  schema: z.object({\n    name: z.string(), // Too generic, no context\n    price: z.string(), // Should be number\n    stock: z.string() // Should be boolean, no context\n  })\n});\n```\n\n###\n\n[‚Äã\n\n](#handle-arrays-correctly)\n\nHandle Arrays Correctly\n\nAlways wrap schemas in objects for reliable extraction.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Array wrapped in object\nconst listings = await page.extract({\n  instruction: \"Extract all apartment listings\",\n  schema: z.object({\n    apartments: z.array(z.object({\n      address: z.string(),\n      rent: z.number()\n    }))\n  })\n});\n\n// Bad - Bare array\nconst listings = await page.extract({\n  instruction: \"Extract apartment listings\",\n  schema: z.array(z.string()) // Don't do this\n});\n```\n\n###\n\n[‚Äã\n\n](#use-proper-url-types)\n\nUse Proper URL Types\n\nSpecify URL types to tell Stagehand to extract URLs. Without proper URL types, Stagehand won‚Äôt extract URLs.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Tells Stagehand to extract URLs\nconst links = await page.extract({\n  instruction: \"Extract navigation links\",\n  schema: z.object({\n    links: z.array(z.object({\n      text: z.string(),\n      url: z.string().url() // Required for URL extraction\n    }))\n  })\n});\n```\n\n##\n\n[‚Äã\n\n](#observe-method)\n\nObserve Method\n\nUse `observe()` to discover actionable elements before acting on them.\n\n###\n\n[‚Äã\n\n](#check-elements-first)\n\nCheck Elements First\n\nVerify elements exist before taking action to avoid errors.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Check for elements first\nconst loginButtons = await page.observe(\"Find the login button\");\n\nif (loginButtons.length > 0) {\n  await page.act(loginButtons[0]);\n} else {\n  console.log(\"No login button found\");\n}\n```\n\n###\n\n[‚Äã\n\n](#be-specific-about-element-types)\n\nBe Specific About Element Types\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Specific element types\nconst submitButtons = await page.observe(\"Find submit button in the form\");\nconst dropdowns = await page.observe(\"Find the state dropdown menu\");\n\n// Bad - Too vague\nconst elements = await page.observe(\"Find submit stuff\");\nconst things = await page.observe(\"Find state selection\");\n```\n\n##\n\n[‚Äã\n\n](#agent-method)\n\nAgent Method\n\nUse `agent()` for complex, multi-step workflows. Provide detailed instructions and set appropriate limits.\n\n###\n\n[‚Äã\n\n](#navigate-first)\n\nNavigate First\n\nDon‚Äôt include navigation in agent tasks. Handle it separately.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Navigate first\nawait page.goto('https://amazon.com');\nawait agent.execute('Search for wireless headphones under $100 and add the best rated one to cart');\n\n// Bad - Navigation in task\nawait agent.execute('Go to Amazon, search for headphones, and add one to cart');\n```\n\n###\n\n[‚Äã\n\n](#be-highly-specific)\n\nBe Highly Specific\n\nDetailed instructions lead to better results.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Detailed instructions\nawait agent.execute({\n  instruction: \"Find Italian restaurants in Brooklyn that are open after 10pm, have outdoor seating, and are rated 4+ stars. Save the top 3 results.\",\n  maxSteps: 25\n});\n\n// Bad - Vague instructions\nawait agent.execute(\"Find some good restaurants\");\n```\n\n###\n\n[‚Äã\n\n](#set-appropriate-step-limits)\n\nSet Appropriate Step Limits\n\nMatch step limits to task complexity.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Simple task - fewer steps\nawait agent.execute({\n  instruction: \"Subscribe to the newsletter with email 'user@example.com'\",\n  maxSteps: 10\n});\n\n// Complex task - more steps\nawait agent.execute({\n  instruction: \"Research and compare 5 project management tools with pricing and features\",\n  maxSteps: 50\n});\n```\n\n###\n\n[‚Äã\n\n](#include-success-criteria)\n\nInclude Success Criteria\n\nTell the agent how to know when it‚Äôs done.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Clear success criteria\nawait agent.execute({\n  instruction: \"Add 3 smartphone cases to cart and confirm the cart shows exactly 3 items with total price\",\n  maxSteps: 20\n});\n\n// Bad - No validation\nawait agent.execute(\"Add some items to cart\");\n```\n\n##\n\n[‚Äã\n\n](#common-mistakes-to-avoid)\n\nCommon Mistakes to Avoid\n\n-   **Combining multiple actions** - Keep each `act()` call to one action\n-   **Using vague descriptions** - Be specific about which elements to interact with\n-   **Exposing sensitive data** - Always use variables for credentials\n-   **Skipping validation** - Check results before proceeding\n\n##\n\n[‚Äã\n\n](#testing-your-prompts)\n\nTesting Your Prompts\n\n1.  **Start simple** - Test basic functionality first\n2.  **Add complexity gradually** - Build up to complex workflows\n3.  **Monitor results** - Use logging to understand what‚Äôs happening\n4.  **Iterate based on failures** - Refine prompts when they don‚Äôt work Remember: Good prompting is iterative. When in doubt, be more specific rather than less.\n\n[Agent Fallbacks](/best-practices/agent-fallbacks)[MCP Integrations](/best-practices/mcp-integrations)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:50.393Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/mcp-integrations",
        "title": "Prompting Best Practices - ü§ò Stagehand",
        "metaDescription": "Write effective prompts for reliable Stagehand automation",
        "markdown": "Prompting Best Practices - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\n‚åòK\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\n‚åòK\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nBest Practices\n\nPrompting Best Practices\n\nOn this page\n\n-   [Act Method](#act-method)\n-   [Use Element Types, Not Colors](#use-element-types%2C-not-colors)\n-   [Use Descriptive Language](#use-descriptive-language)\n-   [Choose the Right Action Verbs](#choose-the-right-action-verbs)\n-   [Protect Sensitive Data](#protect-sensitive-data)\n-   [Extract Method](#extract-method)\n-   [Schema Best Practices](#schema-best-practices)\n-   [Handle Arrays Correctly](#handle-arrays-correctly)\n-   [Use Proper URL Types](#use-proper-url-types)\n-   [Observe Method](#observe-method)\n-   [Check Elements First](#check-elements-first)\n-   [Be Specific About Element Types](#be-specific-about-element-types)\n-   [Agent Method](#agent-method)\n-   [Navigate First](#navigate-first)\n-   [Be Highly Specific](#be-highly-specific)\n-   [Set Appropriate Step Limits](#set-appropriate-step-limits)\n-   [Include Success Criteria](#include-success-criteria)\n-   [Common Mistakes to Avoid](#common-mistakes-to-avoid)\n-   [Testing Your Prompts](#testing-your-prompts)\n\nBest Practices\n\n# Prompting Best Practices\n\nCopy page\n\nWrite effective prompts for reliable Stagehand automation\n\nCopy page\n\nGood prompts make Stagehand reliable. Bad prompts cause failures. Here‚Äôs how to write prompts that work consistently.\n\n##\n\n[‚Äã\n\n](#act-method)\n\nAct Method\n\nUse `act()` for single actions on web pages. Each action should be focused and clear.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Single, specific actions\nawait page.act(\"click the 'Add to Cart' button\");\nawait page.act(\"type 'user@example.com' into the email field\");\n\n// Bad - Multiple actions combined\nawait page.act(\"fill out the form and submit it\");\nawait page.act(\"login with credentials and navigate to dashboard\");\n```\n\n###\n\n[‚Äã\n\n](#use-element-types%2C-not-colors)\n\nUse Element Types, Not Colors\n\nDescribe elements by their type and function rather than visual attributes like color.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Element types and descriptive text\nawait page.act(\"click the 'Sign In' button\");\nawait page.act(\"type into the email input field\");\n\n// Bad - Color-based descriptions\nawait page.act(\"click the blue button\");\nawait page.act(\"type into the white input\");\n```\n\n###\n\n[‚Äã\n\n](#use-descriptive-language)\n\nUse Descriptive Language\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Clear element identification\nawait page.act(\"click the 'Next' button at the bottom of the form\");\nawait page.act(\"type into the search bar at the top of the page\");\n\n// Bad - Vague descriptions\nawait page.act(\"click next\");\nawait page.act(\"type into search\");\n```\n\n###\n\n[‚Äã\n\n](#choose-the-right-action-verbs)\n\nChoose the Right Action Verbs\n\n-   **Click** for buttons, links, checkboxes\n-   **Type** for text inputs\n-   **Select** for dropdowns\n-   **Check/uncheck** for checkboxes\n-   **Upload** for file inputs\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good\nawait page.act(\"click the submit button\");\nawait page.act(\"select 'Option 1' from dropdown\");\n\n// Bad\nawait page.act(\"click submit\");\nawait page.act(\"choose option 1\");\n```\n\n###\n\n[‚Äã\n\n](#protect-sensitive-data)\n\nProtect Sensitive Data\n\nVariables keep sensitive information out of prompts and logs.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Secure approach\nawait page.act({\n  action: \"enter %username% in the email field\",\n  variables: {\n    username: \"user@example.com\"\n  }\n});\n\nawait page.act({\n  action: \"enter %password% in the password field\",\n  variables: {\n    password: process.env.USER_PASSWORD\n  }\n});\n\n// Bad - Insecure approach\nawait page.act(\"type 'mySecretPassword123' into the password field\");\n```\n\nSet `verbose: 0` in your Stagehand config to prevent secrets from appearing in logs.\n\n##\n\n[‚Äã\n\n](#extract-method)\n\nExtract Method\n\nUse `extract()` to pull structured data from pages. Define clear schemas and provide context.\n\n###\n\n[‚Äã\n\n](#schema-best-practices)\n\nSchema Best Practices\n\nUse descriptive field names, correct types, and detailed descriptions. Field descriptions provide context that helps the agent understand exactly what to extract.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Descriptive names, correct types, and helpful descriptions\nconst productData = await page.extract({\n  instruction: \"Extract product information\",\n  schema: z.object({\n    productTitle: z.string().describe(\"The main product name displayed on the page\"),\n    priceInDollars: z.number().describe(\"Current selling price as a number, without currency symbol\"),\n    isInStock: z.boolean().describe(\"Whether the product is available for purchase\")\n  })\n});\n\n// Bad - Generic names, wrong types, no descriptions\nconst data = await page.extract({\n  instruction: \"Get product details\",\n  schema: z.object({\n    name: z.string(), // Too generic, no context\n    price: z.string(), // Should be number\n    stock: z.string() // Should be boolean, no context\n  })\n});\n```\n\n###\n\n[‚Äã\n\n](#handle-arrays-correctly)\n\nHandle Arrays Correctly\n\nAlways wrap schemas in objects for reliable extraction.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Array wrapped in object\nconst listings = await page.extract({\n  instruction: \"Extract all apartment listings\",\n  schema: z.object({\n    apartments: z.array(z.object({\n      address: z.string(),\n      rent: z.number()\n    }))\n  })\n});\n\n// Bad - Bare array\nconst listings = await page.extract({\n  instruction: \"Extract apartment listings\",\n  schema: z.array(z.string()) // Don't do this\n});\n```\n\n###\n\n[‚Äã\n\n](#use-proper-url-types)\n\nUse Proper URL Types\n\nSpecify URL types to tell Stagehand to extract URLs. Without proper URL types, Stagehand won‚Äôt extract URLs.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Tells Stagehand to extract URLs\nconst links = await page.extract({\n  instruction: \"Extract navigation links\",\n  schema: z.object({\n    links: z.array(z.object({\n      text: z.string(),\n      url: z.string().url() // Required for URL extraction\n    }))\n  })\n});\n```\n\n##\n\n[‚Äã\n\n](#observe-method)\n\nObserve Method\n\nUse `observe()` to discover actionable elements before acting on them.\n\n###\n\n[‚Äã\n\n](#check-elements-first)\n\nCheck Elements First\n\nVerify elements exist before taking action to avoid errors.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Check for elements first\nconst loginButtons = await page.observe(\"Find the login button\");\n\nif (loginButtons.length > 0) {\n  await page.act(loginButtons[0]);\n} else {\n  console.log(\"No login button found\");\n}\n```\n\n###\n\n[‚Äã\n\n](#be-specific-about-element-types)\n\nBe Specific About Element Types\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Specific element types\nconst submitButtons = await page.observe(\"Find submit button in the form\");\nconst dropdowns = await page.observe(\"Find the state dropdown menu\");\n\n// Bad - Too vague\nconst elements = await page.observe(\"Find submit stuff\");\nconst things = await page.observe(\"Find state selection\");\n```\n\n##\n\n[‚Äã\n\n](#agent-method)\n\nAgent Method\n\nUse `agent()` for complex, multi-step workflows. Provide detailed instructions and set appropriate limits.\n\n###\n\n[‚Äã\n\n](#navigate-first)\n\nNavigate First\n\nDon‚Äôt include navigation in agent tasks. Handle it separately.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Navigate first\nawait page.goto('https://amazon.com');\nawait agent.execute('Search for wireless headphones under $100 and add the best rated one to cart');\n\n// Bad - Navigation in task\nawait agent.execute('Go to Amazon, search for headphones, and add one to cart');\n```\n\n###\n\n[‚Äã\n\n](#be-highly-specific)\n\nBe Highly Specific\n\nDetailed instructions lead to better results.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Detailed instructions\nawait agent.execute({\n  instruction: \"Find Italian restaurants in Brooklyn that are open after 10pm, have outdoor seating, and are rated 4+ stars. Save the top 3 results.\",\n  maxSteps: 25\n});\n\n// Bad - Vague instructions\nawait agent.execute(\"Find some good restaurants\");\n```\n\n###\n\n[‚Äã\n\n](#set-appropriate-step-limits)\n\nSet Appropriate Step Limits\n\nMatch step limits to task complexity.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Simple task - fewer steps\nawait agent.execute({\n  instruction: \"Subscribe to the newsletter with email 'user@example.com'\",\n  maxSteps: 10\n});\n\n// Complex task - more steps\nawait agent.execute({\n  instruction: \"Research and compare 5 project management tools with pricing and features\",\n  maxSteps: 50\n});\n```\n\n###\n\n[‚Äã\n\n](#include-success-criteria)\n\nInclude Success Criteria\n\nTell the agent how to know when it‚Äôs done.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Clear success criteria\nawait agent.execute({\n  instruction: \"Add 3 smartphone cases to cart and confirm the cart shows exactly 3 items with total price\",\n  maxSteps: 20\n});\n\n// Bad - No validation\nawait agent.execute(\"Add some items to cart\");\n```\n\n##\n\n[‚Äã\n\n](#common-mistakes-to-avoid)\n\nCommon Mistakes to Avoid\n\n-   **Combining multiple actions** - Keep each `act()` call to one action\n-   **Using vague descriptions** - Be specific about which elements to interact with\n-   **Exposing sensitive data** - Always use variables for credentials\n-   **Skipping validation** - Check results before proceeding\n\n##\n\n[‚Äã\n\n](#testing-your-prompts)\n\nTesting Your Prompts\n\n1.  **Start simple** - Test basic functionality first\n2.  **Add complexity gradually** - Build up to complex workflows\n3.  **Monitor results** - Use logging to understand what‚Äôs happening\n4.  **Iterate based on failures** - Refine prompts when they don‚Äôt work Remember: Good prompting is iterative. When in doubt, be more specific rather than less.\n\n[Agent Fallbacks](/best-practices/agent-fallbacks)[MCP Integrations](/best-practices/mcp-integrations)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:46.456Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/speed-optimization",
        "title": "Prompting Best Practices - ü§ò Stagehand",
        "metaDescription": "Write effective prompts for reliable Stagehand automation",
        "markdown": "Prompting Best Practices - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nBest Practices\n\nPrompting Best Practices\n\nOn this page\n\n-   [Act Method](#act-method)\n-   [Use Element Types, Not Colors](#use-element-types%2C-not-colors)\n-   [Use Descriptive Language](#use-descriptive-language)\n-   [Choose the Right Action Verbs](#choose-the-right-action-verbs)\n-   [Protect Sensitive Data](#protect-sensitive-data)\n-   [Extract Method](#extract-method)\n-   [Schema Best Practices](#schema-best-practices)\n-   [Handle Arrays Correctly](#handle-arrays-correctly)\n-   [Use Proper URL Types](#use-proper-url-types)\n-   [Observe Method](#observe-method)\n-   [Check Elements First](#check-elements-first)\n-   [Be Specific About Element Types](#be-specific-about-element-types)\n-   [Agent Method](#agent-method)\n-   [Navigate First](#navigate-first)\n-   [Be Highly Specific](#be-highly-specific)\n-   [Set Appropriate Step Limits](#set-appropriate-step-limits)\n-   [Include Success Criteria](#include-success-criteria)\n-   [Common Mistakes to Avoid](#common-mistakes-to-avoid)\n-   [Testing Your Prompts](#testing-your-prompts)\n\nBest Practices\n\n# Prompting Best Practices\n\nCopy page\n\nWrite effective prompts for reliable Stagehand automation\n\nCopy page\n\nGood prompts make Stagehand reliable. Bad prompts cause failures. Here‚Äôs how to write prompts that work consistently.\n\n##\n\n[‚Äã\n\n](#act-method)\n\nAct Method\n\nUse `act()` for single actions on web pages. Each action should be focused and clear.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Single, specific actions\nawait page.act(\"click the 'Add to Cart' button\");\nawait page.act(\"type 'user@example.com' into the email field\");\n\n// Bad - Multiple actions combined\nawait page.act(\"fill out the form and submit it\");\nawait page.act(\"login with credentials and navigate to dashboard\");\n```\n\n###\n\n[‚Äã\n\n](#use-element-types%2C-not-colors)\n\nUse Element Types, Not Colors\n\nDescribe elements by their type and function rather than visual attributes like color.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Element types and descriptive text\nawait page.act(\"click the 'Sign In' button\");\nawait page.act(\"type into the email input field\");\n\n// Bad - Color-based descriptions\nawait page.act(\"click the blue button\");\nawait page.act(\"type into the white input\");\n```\n\n###\n\n[‚Äã\n\n](#use-descriptive-language)\n\nUse Descriptive Language\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Clear element identification\nawait page.act(\"click the 'Next' button at the bottom of the form\");\nawait page.act(\"type into the search bar at the top of the page\");\n\n// Bad - Vague descriptions\nawait page.act(\"click next\");\nawait page.act(\"type into search\");\n```\n\n###\n\n[‚Äã\n\n](#choose-the-right-action-verbs)\n\nChoose the Right Action Verbs\n\n-   **Click** for buttons, links, checkboxes\n-   **Type** for text inputs\n-   **Select** for dropdowns\n-   **Check/uncheck** for checkboxes\n-   **Upload** for file inputs\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good\nawait page.act(\"click the submit button\");\nawait page.act(\"select 'Option 1' from dropdown\");\n\n// Bad\nawait page.act(\"click submit\");\nawait page.act(\"choose option 1\");\n```\n\n###\n\n[‚Äã\n\n](#protect-sensitive-data)\n\nProtect Sensitive Data\n\nVariables keep sensitive information out of prompts and logs.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Secure approach\nawait page.act({\n  action: \"enter %username% in the email field\",\n  variables: {\n    username: \"user@example.com\"\n  }\n});\n\nawait page.act({\n  action: \"enter %password% in the password field\",\n  variables: {\n    password: process.env.USER_PASSWORD\n  }\n});\n\n// Bad - Insecure approach\nawait page.act(\"type 'mySecretPassword123' into the password field\");\n```\n\nSet `verbose: 0` in your Stagehand config to prevent secrets from appearing in logs.\n\n##\n\n[‚Äã\n\n](#extract-method)\n\nExtract Method\n\nUse `extract()` to pull structured data from pages. Define clear schemas and provide context.\n\n###\n\n[‚Äã\n\n](#schema-best-practices)\n\nSchema Best Practices\n\nUse descriptive field names, correct types, and detailed descriptions. Field descriptions provide context that helps the agent understand exactly what to extract.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Descriptive names, correct types, and helpful descriptions\nconst productData = await page.extract({\n  instruction: \"Extract product information\",\n  schema: z.object({\n    productTitle: z.string().describe(\"The main product name displayed on the page\"),\n    priceInDollars: z.number().describe(\"Current selling price as a number, without currency symbol\"),\n    isInStock: z.boolean().describe(\"Whether the product is available for purchase\")\n  })\n});\n\n// Bad - Generic names, wrong types, no descriptions\nconst data = await page.extract({\n  instruction: \"Get product details\",\n  schema: z.object({\n    name: z.string(), // Too generic, no context\n    price: z.string(), // Should be number\n    stock: z.string() // Should be boolean, no context\n  })\n});\n```\n\n###\n\n[‚Äã\n\n](#handle-arrays-correctly)\n\nHandle Arrays Correctly\n\nAlways wrap schemas in objects for reliable extraction.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Array wrapped in object\nconst listings = await page.extract({\n  instruction: \"Extract all apartment listings\",\n  schema: z.object({\n    apartments: z.array(z.object({\n      address: z.string(),\n      rent: z.number()\n    }))\n  })\n});\n\n// Bad - Bare array\nconst listings = await page.extract({\n  instruction: \"Extract apartment listings\",\n  schema: z.array(z.string()) // Don't do this\n});\n```\n\n###\n\n[‚Äã\n\n](#use-proper-url-types)\n\nUse Proper URL Types\n\nSpecify URL types to tell Stagehand to extract URLs. Without proper URL types, Stagehand won‚Äôt extract URLs.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Tells Stagehand to extract URLs\nconst links = await page.extract({\n  instruction: \"Extract navigation links\",\n  schema: z.object({\n    links: z.array(z.object({\n      text: z.string(),\n      url: z.string().url() // Required for URL extraction\n    }))\n  })\n});\n```\n\n##\n\n[‚Äã\n\n](#observe-method)\n\nObserve Method\n\nUse `observe()` to discover actionable elements before acting on them.\n\n###\n\n[‚Äã\n\n](#check-elements-first)\n\nCheck Elements First\n\nVerify elements exist before taking action to avoid errors.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Check for elements first\nconst loginButtons = await page.observe(\"Find the login button\");\n\nif (loginButtons.length > 0) {\n  await page.act(loginButtons[0]);\n} else {\n  console.log(\"No login button found\");\n}\n```\n\n###\n\n[‚Äã\n\n](#be-specific-about-element-types)\n\nBe Specific About Element Types\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Specific element types\nconst submitButtons = await page.observe(\"Find submit button in the form\");\nconst dropdowns = await page.observe(\"Find the state dropdown menu\");\n\n// Bad - Too vague\nconst elements = await page.observe(\"Find submit stuff\");\nconst things = await page.observe(\"Find state selection\");\n```\n\n##\n\n[‚Äã\n\n](#agent-method)\n\nAgent Method\n\nUse `agent()` for complex, multi-step workflows. Provide detailed instructions and set appropriate limits.\n\n###\n\n[‚Äã\n\n](#navigate-first)\n\nNavigate First\n\nDon‚Äôt include navigation in agent tasks. Handle it separately.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Navigate first\nawait page.goto('https://amazon.com');\nawait agent.execute('Search for wireless headphones under $100 and add the best rated one to cart');\n\n// Bad - Navigation in task\nawait agent.execute('Go to Amazon, search for headphones, and add one to cart');\n```\n\n###\n\n[‚Äã\n\n](#be-highly-specific)\n\nBe Highly Specific\n\nDetailed instructions lead to better results.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Detailed instructions\nawait agent.execute({\n  instruction: \"Find Italian restaurants in Brooklyn that are open after 10pm, have outdoor seating, and are rated 4+ stars. Save the top 3 results.\",\n  maxSteps: 25\n});\n\n// Bad - Vague instructions\nawait agent.execute(\"Find some good restaurants\");\n```\n\n###\n\n[‚Äã\n\n](#set-appropriate-step-limits)\n\nSet Appropriate Step Limits\n\nMatch step limits to task complexity.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Simple task - fewer steps\nawait agent.execute({\n  instruction: \"Subscribe to the newsletter with email 'user@example.com'\",\n  maxSteps: 10\n});\n\n// Complex task - more steps\nawait agent.execute({\n  instruction: \"Research and compare 5 project management tools with pricing and features\",\n  maxSteps: 50\n});\n```\n\n###\n\n[‚Äã\n\n](#include-success-criteria)\n\nInclude Success Criteria\n\nTell the agent how to know when it‚Äôs done.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Clear success criteria\nawait agent.execute({\n  instruction: \"Add 3 smartphone cases to cart and confirm the cart shows exactly 3 items with total price\",\n  maxSteps: 20\n});\n\n// Bad - No validation\nawait agent.execute(\"Add some items to cart\");\n```\n\n##\n\n[‚Äã\n\n](#common-mistakes-to-avoid)\n\nCommon Mistakes to Avoid\n\n-   **Combining multiple actions** - Keep each `act()` call to one action\n-   **Using vague descriptions** - Be specific about which elements to interact with\n-   **Exposing sensitive data** - Always use variables for credentials\n-   **Skipping validation** - Check results before proceeding\n\n##\n\n[‚Äã\n\n](#testing-your-prompts)\n\nTesting Your Prompts\n\n1.  **Start simple** - Test basic functionality first\n2.  **Add complexity gradually** - Build up to complex workflows\n3.  **Monitor results** - Use logging to understand what‚Äôs happening\n4.  **Iterate based on failures** - Refine prompts when they don‚Äôt work Remember: Good prompting is iterative. When in doubt, be more specific rather than less.\n\n[Agent Fallbacks](/best-practices/agent-fallbacks)[MCP Integrations](/best-practices/mcp-integrations)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:48.236Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/reference/act",
        "title": "Prompting Best Practices - ü§ò Stagehand",
        "metaDescription": "Write effective prompts for reliable Stagehand automation",
        "markdown": "Prompting Best Practices - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nBest Practices\n\nPrompting Best Practices\n\nOn this page\n\n-   [Act Method](#act-method)\n-   [Use Element Types, Not Colors](#use-element-types%2C-not-colors)\n-   [Use Descriptive Language](#use-descriptive-language)\n-   [Choose the Right Action Verbs](#choose-the-right-action-verbs)\n-   [Protect Sensitive Data](#protect-sensitive-data)\n-   [Extract Method](#extract-method)\n-   [Schema Best Practices](#schema-best-practices)\n-   [Handle Arrays Correctly](#handle-arrays-correctly)\n-   [Use Proper URL Types](#use-proper-url-types)\n-   [Observe Method](#observe-method)\n-   [Check Elements First](#check-elements-first)\n-   [Be Specific About Element Types](#be-specific-about-element-types)\n-   [Agent Method](#agent-method)\n-   [Navigate First](#navigate-first)\n-   [Be Highly Specific](#be-highly-specific)\n-   [Set Appropriate Step Limits](#set-appropriate-step-limits)\n-   [Include Success Criteria](#include-success-criteria)\n-   [Common Mistakes to Avoid](#common-mistakes-to-avoid)\n-   [Testing Your Prompts](#testing-your-prompts)\n\nBest Practices\n\n# Prompting Best Practices\n\nCopy page\n\nWrite effective prompts for reliable Stagehand automation\n\nCopy page\n\nGood prompts make Stagehand reliable. Bad prompts cause failures. Here‚Äôs how to write prompts that work consistently.\n\n##\n\n[‚Äã\n\n](#act-method)\n\nAct Method\n\nUse `act()` for single actions on web pages. Each action should be focused and clear.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Single, specific actions\nawait page.act(\"click the 'Add to Cart' button\");\nawait page.act(\"type 'user@example.com' into the email field\");\n\n// Bad - Multiple actions combined\nawait page.act(\"fill out the form and submit it\");\nawait page.act(\"login with credentials and navigate to dashboard\");\n```\n\n###\n\n[‚Äã\n\n](#use-element-types%2C-not-colors)\n\nUse Element Types, Not Colors\n\nDescribe elements by their type and function rather than visual attributes like color.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Element types and descriptive text\nawait page.act(\"click the 'Sign In' button\");\nawait page.act(\"type into the email input field\");\n\n// Bad - Color-based descriptions\nawait page.act(\"click the blue button\");\nawait page.act(\"type into the white input\");\n```\n\n###\n\n[‚Äã\n\n](#use-descriptive-language)\n\nUse Descriptive Language\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Clear element identification\nawait page.act(\"click the 'Next' button at the bottom of the form\");\nawait page.act(\"type into the search bar at the top of the page\");\n\n// Bad - Vague descriptions\nawait page.act(\"click next\");\nawait page.act(\"type into search\");\n```\n\n###\n\n[‚Äã\n\n](#choose-the-right-action-verbs)\n\nChoose the Right Action Verbs\n\n-   **Click** for buttons, links, checkboxes\n-   **Type** for text inputs\n-   **Select** for dropdowns\n-   **Check/uncheck** for checkboxes\n-   **Upload** for file inputs\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good\nawait page.act(\"click the submit button\");\nawait page.act(\"select 'Option 1' from dropdown\");\n\n// Bad\nawait page.act(\"click submit\");\nawait page.act(\"choose option 1\");\n```\n\n###\n\n[‚Äã\n\n](#protect-sensitive-data)\n\nProtect Sensitive Data\n\nVariables keep sensitive information out of prompts and logs.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Secure approach\nawait page.act({\n  action: \"enter %username% in the email field\",\n  variables: {\n    username: \"user@example.com\"\n  }\n});\n\nawait page.act({\n  action: \"enter %password% in the password field\",\n  variables: {\n    password: process.env.USER_PASSWORD\n  }\n});\n\n// Bad - Insecure approach\nawait page.act(\"type 'mySecretPassword123' into the password field\");\n```\n\nSet `verbose: 0` in your Stagehand config to prevent secrets from appearing in logs.\n\n##\n\n[‚Äã\n\n](#extract-method)\n\nExtract Method\n\nUse `extract()` to pull structured data from pages. Define clear schemas and provide context.\n\n###\n\n[‚Äã\n\n](#schema-best-practices)\n\nSchema Best Practices\n\nUse descriptive field names, correct types, and detailed descriptions. Field descriptions provide context that helps the agent understand exactly what to extract.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Descriptive names, correct types, and helpful descriptions\nconst productData = await page.extract({\n  instruction: \"Extract product information\",\n  schema: z.object({\n    productTitle: z.string().describe(\"The main product name displayed on the page\"),\n    priceInDollars: z.number().describe(\"Current selling price as a number, without currency symbol\"),\n    isInStock: z.boolean().describe(\"Whether the product is available for purchase\")\n  })\n});\n\n// Bad - Generic names, wrong types, no descriptions\nconst data = await page.extract({\n  instruction: \"Get product details\",\n  schema: z.object({\n    name: z.string(), // Too generic, no context\n    price: z.string(), // Should be number\n    stock: z.string() // Should be boolean, no context\n  })\n});\n```\n\n###\n\n[‚Äã\n\n](#handle-arrays-correctly)\n\nHandle Arrays Correctly\n\nAlways wrap schemas in objects for reliable extraction.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Array wrapped in object\nconst listings = await page.extract({\n  instruction: \"Extract all apartment listings\",\n  schema: z.object({\n    apartments: z.array(z.object({\n      address: z.string(),\n      rent: z.number()\n    }))\n  })\n});\n\n// Bad - Bare array\nconst listings = await page.extract({\n  instruction: \"Extract apartment listings\",\n  schema: z.array(z.string()) // Don't do this\n});\n```\n\n###\n\n[‚Äã\n\n](#use-proper-url-types)\n\nUse Proper URL Types\n\nSpecify URL types to tell Stagehand to extract URLs. Without proper URL types, Stagehand won‚Äôt extract URLs.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Tells Stagehand to extract URLs\nconst links = await page.extract({\n  instruction: \"Extract navigation links\",\n  schema: z.object({\n    links: z.array(z.object({\n      text: z.string(),\n      url: z.string().url() // Required for URL extraction\n    }))\n  })\n});\n```\n\n##\n\n[‚Äã\n\n](#observe-method)\n\nObserve Method\n\nUse `observe()` to discover actionable elements before acting on them.\n\n###\n\n[‚Äã\n\n](#check-elements-first)\n\nCheck Elements First\n\nVerify elements exist before taking action to avoid errors.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Check for elements first\nconst loginButtons = await page.observe(\"Find the login button\");\n\nif (loginButtons.length > 0) {\n  await page.act(loginButtons[0]);\n} else {\n  console.log(\"No login button found\");\n}\n```\n\n###\n\n[‚Äã\n\n](#be-specific-about-element-types)\n\nBe Specific About Element Types\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Specific element types\nconst submitButtons = await page.observe(\"Find submit button in the form\");\nconst dropdowns = await page.observe(\"Find the state dropdown menu\");\n\n// Bad - Too vague\nconst elements = await page.observe(\"Find submit stuff\");\nconst things = await page.observe(\"Find state selection\");\n```\n\n##\n\n[‚Äã\n\n](#agent-method)\n\nAgent Method\n\nUse `agent()` for complex, multi-step workflows. Provide detailed instructions and set appropriate limits.\n\n###\n\n[‚Äã\n\n](#navigate-first)\n\nNavigate First\n\nDon‚Äôt include navigation in agent tasks. Handle it separately.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Navigate first\nawait page.goto('https://amazon.com');\nawait agent.execute('Search for wireless headphones under $100 and add the best rated one to cart');\n\n// Bad - Navigation in task\nawait agent.execute('Go to Amazon, search for headphones, and add one to cart');\n```\n\n###\n\n[‚Äã\n\n](#be-highly-specific)\n\nBe Highly Specific\n\nDetailed instructions lead to better results.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Detailed instructions\nawait agent.execute({\n  instruction: \"Find Italian restaurants in Brooklyn that are open after 10pm, have outdoor seating, and are rated 4+ stars. Save the top 3 results.\",\n  maxSteps: 25\n});\n\n// Bad - Vague instructions\nawait agent.execute(\"Find some good restaurants\");\n```\n\n###\n\n[‚Äã\n\n](#set-appropriate-step-limits)\n\nSet Appropriate Step Limits\n\nMatch step limits to task complexity.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Simple task - fewer steps\nawait agent.execute({\n  instruction: \"Subscribe to the newsletter with email 'user@example.com'\",\n  maxSteps: 10\n});\n\n// Complex task - more steps\nawait agent.execute({\n  instruction: \"Research and compare 5 project management tools with pricing and features\",\n  maxSteps: 50\n});\n```\n\n###\n\n[‚Äã\n\n](#include-success-criteria)\n\nInclude Success Criteria\n\nTell the agent how to know when it‚Äôs done.\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\n// Good - Clear success criteria\nawait agent.execute({\n  instruction: \"Add 3 smartphone cases to cart and confirm the cart shows exactly 3 items with total price\",\n  maxSteps: 20\n});\n\n// Bad - No validation\nawait agent.execute(\"Add some items to cart\");\n```\n\n##\n\n[‚Äã\n\n](#common-mistakes-to-avoid)\n\nCommon Mistakes to Avoid\n\n-   **Combining multiple actions** - Keep each `act()` call to one action\n-   **Using vague descriptions** - Be specific about which elements to interact with\n-   **Exposing sensitive data** - Always use variables for credentials\n-   **Skipping validation** - Check results before proceeding\n\n##\n\n[‚Äã\n\n](#testing-your-prompts)\n\nTesting Your Prompts\n\n1.  **Start simple** - Test basic functionality first\n2.  **Add complexity gradually** - Build up to complex workflows\n3.  **Monitor results** - Use logging to understand what‚Äôs happening\n4.  **Iterate based on failures** - Refine prompts when they don‚Äôt work Remember: Good prompting is iterative. When in doubt, be more specific rather than less.\n\n[Agent Fallbacks](/best-practices/agent-fallbacks)[MCP Integrations](/best-practices/mcp-integrations)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:48.159Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/reference/extract",
        "title": "Failed to Load",
        "metaDescription": null,
        "markdown": "",
        "timestamp": "2025-09-28T18:55:42.514Z",
        "success": false,
        "error": "Failed to parse server response"
      },
      {
        "url": "https://docs.stagehand.dev/reference/observe",
        "title": "Page Not Found",
        "metaDescription": null,
        "markdown": "Page Not Found\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nPage Not Found\n\n404\n\n# Page Not Found\n\nWe couldn't find the page you were looking for. Maybe you were looking for?\n\n[observe()](/references/observe#)[Observe](/basics/observe#what-is-observe)[Usecase observe](/best-practices/usecase-observe#)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:56:00.121Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/reference/agent",
        "title": "Page Not Found",
        "metaDescription": null,
        "markdown": "Page Not Found\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nPage Not Found\n\n404\n\n# Page Not Found\n\nWe couldn't find the page you were looking for. Maybe you were looking for?\n\n[observe()](/references/observe#)[Observe](/basics/observe#what-is-observe)[Usecase observe](/best-practices/usecase-observe#)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:59.255Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#why-llm-choice-matters",
        "title": "Page Not Found",
        "metaDescription": null,
        "markdown": "Page Not Found\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nPage Not Found\n\n404\n\n# Page Not Found\n\nWe couldn't find the page you were looking for. Maybe you were looking for?\n\n[observe()](/references/observe#)[Observe](/basics/observe#what-is-observe)[Usecase observe](/best-practices/usecase-observe#)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:59.254Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#environment-variables-setup",
        "title": "Page Not Found",
        "metaDescription": null,
        "markdown": "Page Not Found\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nPage Not Found\n\n404\n\n# Page Not Found\n\nWe couldn't find the page you were looking for. Maybe you were looking for?\n\n[observe()](/references/observe#)[Observe](/basics/observe#what-is-observe)[Usecase observe](/best-practices/usecase-observe#)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:59.255Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#supported-providers",
        "title": "Page Not Found",
        "metaDescription": null,
        "markdown": "Page Not Found\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nPage Not Found\n\n404\n\n# Page Not Found\n\nWe couldn't find the page you were looking for. Maybe you were looking for?\n\n[observe()](/references/observe#)[Observe](/basics/observe#what-is-observe)[Usecase observe](/best-practices/usecase-observe#)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:55:59.256Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#production-ready-providers",
        "title": "Models - ü§ò Stagehand",
        "metaDescription": "Enhance Stagehand with LLMs for optimal performance, cost, and reliability",
        "markdown": "Models - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nModels\n\nOn this page\n\n-   [Why LLM Choice Matters](#why-llm-choice-matters)\n-   [Environment Variables Setup](#environment-variables-setup)\n-   [Supported Providers](#supported-providers)\n-   [Production-Ready Providers](#production-ready-providers)\n-   [Additional Providers](#additional-providers)\n-   [Basic Configuration](#basic-configuration)\n-   [Model Name Format](#model-name-format)\n-   [Quick Start Examples](#quick-start-examples)\n-   [Custom LLM Integration](#custom-llm-integration)\n-   [Vercel AI SDK](#vercel-ai-sdk)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n-   [Next Steps](#next-steps)\n\nConfiguration\n\n# Models\n\nCopy page\n\nEnhance Stagehand with LLMs for optimal performance, cost, and reliability\n\nCopy page\n\nStagehand uses Large Language Models (LLMs) to understand web pages, plan actions, and interact with complex interfaces. The choice of LLM significantly impacts your automation‚Äôs accuracy, speed, and cost.[\n\n## Model Evaluation\n\nFind more details about how to choose the right model on our Model Evaluation page.\n\n](https://www.stagehand.dev/evals)\n\n##\n\n[‚Äã\n\n](#why-llm-choice-matters)\n\nWhy LLM Choice Matters\n\n-   **Accuracy**: Better models provide more reliable element detection and action planning\n-   **Speed**: Faster models reduce automation latency\n-   **Cost**: Different providers offer varying pricing structures\n-   **Reliability**: Structured output support ensures consistent automation behavior\n\nFind more details about how to choose the right model on our [Model Evaluation](https://www.stagehand.dev/evals) page.\n\nSmall models on **Ollama** struggle with consistent structured outputs. While technically supported, we don‚Äôt recommend them for production Stagehand workflows.\n\n##\n\n[‚Äã\n\n](#environment-variables-setup)\n\nEnvironment Variables Setup\n\nSet up your API keys before configuring Stagehand:\n\n.env\n\nCopy\n\nAsk AI\n\n```\n# Choose one or more providers\nOPENAI_API_KEY=your_openai_key_here\nANTHROPIC_API_KEY=your_anthropic_key_here\nGOOGLE_API_KEY=your_google_key_here\nGROQ_API_KEY=your_groq_key_here\n```\n\n##\n\n[‚Äã\n\n](#supported-providers)\n\nSupported Providers\n\nStagehand supports major LLM providers with structured output capabilities:\n\n###\n\n[‚Äã\n\n](#production-ready-providers)\n\nProduction-Ready Providers\n\nProvider\n\nBest Models\n\nStrengths\n\nUse Case\n\n**OpenAI**\n\n`gpt-4.1`, `gpt-4.1-mini`\n\nHigh accuracy, reliable\n\nProduction, complex sites\n\n**Anthropic**\n\n`claude-3-7-sonnet-latest`\n\nExcellent reasoning\n\nComplex automation tasks\n\n**Google**\n\n`gemini-2.5-flash`, `gemini-2.5-pro`\n\nFast, cost-effective\n\nHigh-volume automation\n\n###\n\n[‚Äã\n\n](#additional-providers)\n\nAdditional Providers\n\nShow More Providers\n\n-   **Groq** - `llama-3.3-70b-versatile` (Good for speed critical applications)\n-   **xAI** - `grok-beta` (Good for complex reasoning)\n-   **Azure** - Enterprise OpenAI deployment\n-   **Cerebras** - High-speed inference\n-   **TogetherAI** - Open-source models\n-   **Mistral** - `mixtral-8x7b-32768` (European option)\n-   **DeepSeek** - Cost-effective alternative\n-   **Perplexity** - Real-time web data\n-   **Ollama** - Local deployment (limited accuracy)\n-   **Run any model included in AI SDK** - Find supported models in the [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) (Follow the guide [here](#vercel-ai-sdk) to get started.)\n\n##\n\n[‚Äã\n\n](#basic-configuration)\n\nBasic Configuration\n\n###\n\n[‚Äã\n\n](#model-name-format)\n\nModel Name Format\n\nStagehand uses the format `provider/model-name` for model specification. **Examples:**\n\n-   OpenAI: `openai/gpt-4.1`\n-   Anthropic: `anthropic/claude-3-7-sonnet-latest`\n-   Google: `google/gemini-2.5-flash` (Recommended)\n\n###\n\n[‚Äã\n\n](#quick-start-examples)\n\nQuick Start Examples\n\n-   Google (Recommended)\n-   OpenAI\n-   Anthropic\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  modelName: \"google/gemini-2.5-flash\",\n  modelClientOptions: {\n    apiKey: process.env.GOOGLE_API_KEY,\n  },\n});\n```\n\n##\n\n[‚Äã\n\n](#custom-llm-integration)\n\nCustom LLM Integration\n\nOnly [LiteLLM compatible providers](https://docs.litellm.ai/docs/providers) are available in Python. Some may require extra setup.\n\nIntegrate any LLM with Stagehand using custom clients. The only requirement is **structured output support** for consistent automation behavior.\n\n###\n\n[‚Äã\n\n](#vercel-ai-sdk)\n\nVercel AI SDK\n\nThe [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) is a popular library for interacting with LLMs. You can use any of the providers supported by the Vercel AI SDK to create a client for your model, **as long as they support structured outputs**. Vercel AI SDK supports providers for OpenAI, Anthropic, and Google, along with support for **Amazon Bedrock** and **Azure OpenAI**. For a full list, see the [Vercel AI SDK providers page](https://sdk.vercel.ai/providers/ai-sdk-providers). To get started, you‚Äôll need to install the `ai` package (version 4) and the provider you want to use (version 1 - both need to be compatible with LanguageModelV1). For example, to use Amazon Bedrock, you‚Äôll need to install the `@ai-sdk/amazon-bedrock` package. You‚Äôll also need to import the [Vercel AI SDK external client](https://github.com/browserbase/stagehand/blob/main/lib/llm/aisdk.ts) through Stagehand to create a client for your model.\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install ai@4 @ai-sdk/amazon-bedrock@1\n```\n\nThe `AISdkClient` is not yet available via the Stagehand npm package. For now, install Stagehand as a git repository to access the `AISdkClient` (this will be included in the npm package in an upcoming release).\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install @browserbasehq/stagehand@git+https://github.com/browserbase/stagehand.git\n```\n\nCopy\n\nAsk AI\n\n```\n// Install/import the provider you want to use.\n// For example, to use Azure OpenAI, import { createAzure } from '@ai-sdk/azure';\nimport { bedrock } from \"@ai-sdk/amazon-bedrock\";\n// @ts-ignore\nimport { AISdkClient } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  llmClient: new AISdkClient({\n\tmodel: bedrock(\"anthropic.claude-3-7-sonnet-20250219-v1:0\"),\n  }),\n});\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nModel doesn't support structured outputs\n\n**Error**: `Model does not support structured outputs`**Solution**: Use models that support function calling/structured outputs. The minimum requirements are:\n\n-   Model must support JSON/structured outputs\n-   Model must have strong reasoning capabilities\n-   Model must be able to handle complex instructions\n\nFor each provider, use their latest models that meet these requirements. Some examples:\n\n-   **OpenAI**: GPT-4 series or newer\n-   **Anthropic**: Claude 3 series or newer\n-   **Google**: Gemini 2 series or newer\n-   **Other providers**: Latest models with structured output support\n\n**Note**: Avoid base language models without structured output capabilities or fine-tuning for instruction following. When in doubt, check our [Model Evaluation](https://www.stagehand.dev/evals) page for up-to-date recommendations.\n\nAuthentication errors\n\n**Error**: `Invalid API key` or `Unauthorized`**Solution**:\n\n-   Verify your environment variables are set correctly\n-   Check API key permissions and quotas\n-   Ensure you‚Äôre using the correct API key for the provider\n-   For Anthropic, make sure you have access to the Claude API\n\nInconsistent automation results\n\n**Symptoms**: Actions work sometimes but fail other times**Causes & Solutions**:\n\n-   **Weak models**: Use more capable models - check our [Model Evaluation](https://www.stagehand.dev/evals) page for current recommendations\n-   **High temperature**: Set temperature to 0 for deterministic outputs\n-   **Complex pages**: Switch to models with higher accuracy scores on our [Model Evaluation](https://www.stagehand.dev/evals) page\n-   **Rate limits**: Implement retry logic with exponential backoff\n-   **Context limits**: Reduce page complexity or use models with larger context windows\n-   **Prompt clarity**: Ensure your automation instructions are clear and specific\n\nSlow performance\n\n**Issue**: Automation takes too long to respond**Solutions**:\n\n-   **Use fast models**: Choose models optimized for speed\n    -   Any model with < 1s response time\n    -   Models with ‚Äúfast‚Äù or ‚Äúflash‚Äù variants\n-   **Optimize settings**:\n    -   Use `verbose: 0` to minimize token usage\n    -   Set temperature to 0 for fastest processing\n    -   Keep max tokens as low as possible\n-   **Consider local deployment**: Local models can provide lowest latency\n-   **Batch operations**: Group multiple actions when possible\n\nHigh costs\n\n**Issue**: LLM usage costs are too high**Cost Optimization Strategies**:\n\n1.  **Switch to cost-effective models**:\n    -   Check our [Model Evaluation](https://www.stagehand.dev/evals) page for current cost-performance benchmarks\n    -   Choose models with lower cost per token that still meet accuracy requirements\n    -   Consider models optimized for speed to reduce total runtime costs\n2.  **Optimize token usage**:\n    -   Set `verbose: 0` to reduce logging overhead\n    -   Use concise prompts and limit response length\n3.  **Smart model selection**: Start with cheaper models, fallback to premium ones only when needed\n4.  **Cache responses**: Implement LLM response caching for repeated automation patterns\n5.  **Monitor usage**: Set up billing alerts and track costs per automation run\n6.  **Batch processing**: Process multiple similar tasks together\n\n###\n\n[‚Äã\n\n](#next-steps)\n\nNext Steps\n\n[\n\n## Choose Models\n\nSee our Model Evaluation page\n\n](https://www.stagehand.dev/evals)[\n\n## Test Models\n\nEvaluate performance on your specific use cases in our Model Evaluation guide\n\n](/configuration/evals)[\n\n## Track Costs\n\nMonitor token usage and set alerts using our Observability tools\n\n](/configuration/observability)[\n\n## Cache Results\n\nStore successful patterns using our Caching Guide\n\n](/best-practices/caching)\n\n[Logging](/configuration/logging)[Evaluations](/configuration/evals)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:56:07.987Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#additional-providers",
        "title": "Models - ü§ò Stagehand",
        "metaDescription": "Enhance Stagehand with LLMs for optimal performance, cost, and reliability",
        "markdown": "Models - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nModels\n\nOn this page\n\n-   [Why LLM Choice Matters](#why-llm-choice-matters)\n-   [Environment Variables Setup](#environment-variables-setup)\n-   [Supported Providers](#supported-providers)\n-   [Production-Ready Providers](#production-ready-providers)\n-   [Additional Providers](#additional-providers)\n-   [Basic Configuration](#basic-configuration)\n-   [Model Name Format](#model-name-format)\n-   [Quick Start Examples](#quick-start-examples)\n-   [Custom LLM Integration](#custom-llm-integration)\n-   [Vercel AI SDK](#vercel-ai-sdk)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n-   [Next Steps](#next-steps)\n\nConfiguration\n\n# Models\n\nCopy page\n\nEnhance Stagehand with LLMs for optimal performance, cost, and reliability\n\nCopy page\n\nStagehand uses Large Language Models (LLMs) to understand web pages, plan actions, and interact with complex interfaces. The choice of LLM significantly impacts your automation‚Äôs accuracy, speed, and cost.[\n\n## Model Evaluation\n\nFind more details about how to choose the right model on our Model Evaluation page.\n\n](https://www.stagehand.dev/evals)\n\n##\n\n[‚Äã\n\n](#why-llm-choice-matters)\n\nWhy LLM Choice Matters\n\n-   **Accuracy**: Better models provide more reliable element detection and action planning\n-   **Speed**: Faster models reduce automation latency\n-   **Cost**: Different providers offer varying pricing structures\n-   **Reliability**: Structured output support ensures consistent automation behavior\n\nFind more details about how to choose the right model on our [Model Evaluation](https://www.stagehand.dev/evals) page.\n\nSmall models on **Ollama** struggle with consistent structured outputs. While technically supported, we don‚Äôt recommend them for production Stagehand workflows.\n\n##\n\n[‚Äã\n\n](#environment-variables-setup)\n\nEnvironment Variables Setup\n\nSet up your API keys before configuring Stagehand:\n\n.env\n\nCopy\n\nAsk AI\n\n```\n# Choose one or more providers\nOPENAI_API_KEY=your_openai_key_here\nANTHROPIC_API_KEY=your_anthropic_key_here\nGOOGLE_API_KEY=your_google_key_here\nGROQ_API_KEY=your_groq_key_here\n```\n\n##\n\n[‚Äã\n\n](#supported-providers)\n\nSupported Providers\n\nStagehand supports major LLM providers with structured output capabilities:\n\n###\n\n[‚Äã\n\n](#production-ready-providers)\n\nProduction-Ready Providers\n\nProvider\n\nBest Models\n\nStrengths\n\nUse Case\n\n**OpenAI**\n\n`gpt-4.1`, `gpt-4.1-mini`\n\nHigh accuracy, reliable\n\nProduction, complex sites\n\n**Anthropic**\n\n`claude-3-7-sonnet-latest`\n\nExcellent reasoning\n\nComplex automation tasks\n\n**Google**\n\n`gemini-2.5-flash`, `gemini-2.5-pro`\n\nFast, cost-effective\n\nHigh-volume automation\n\n###\n\n[‚Äã\n\n](#additional-providers)\n\nAdditional Providers\n\nShow More Providers\n\n-   **Groq** - `llama-3.3-70b-versatile` (Good for speed critical applications)\n-   **xAI** - `grok-beta` (Good for complex reasoning)\n-   **Azure** - Enterprise OpenAI deployment\n-   **Cerebras** - High-speed inference\n-   **TogetherAI** - Open-source models\n-   **Mistral** - `mixtral-8x7b-32768` (European option)\n-   **DeepSeek** - Cost-effective alternative\n-   **Perplexity** - Real-time web data\n-   **Ollama** - Local deployment (limited accuracy)\n-   **Run any model included in AI SDK** - Find supported models in the [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) (Follow the guide [here](#vercel-ai-sdk) to get started.)\n\n##\n\n[‚Äã\n\n](#basic-configuration)\n\nBasic Configuration\n\n###\n\n[‚Äã\n\n](#model-name-format)\n\nModel Name Format\n\nStagehand uses the format `provider/model-name` for model specification. **Examples:**\n\n-   OpenAI: `openai/gpt-4.1`\n-   Anthropic: `anthropic/claude-3-7-sonnet-latest`\n-   Google: `google/gemini-2.5-flash` (Recommended)\n\n###\n\n[‚Äã\n\n](#quick-start-examples)\n\nQuick Start Examples\n\n-   Google (Recommended)\n-   OpenAI\n-   Anthropic\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  modelName: \"google/gemini-2.5-flash\",\n  modelClientOptions: {\n    apiKey: process.env.GOOGLE_API_KEY,\n  },\n});\n```\n\n##\n\n[‚Äã\n\n](#custom-llm-integration)\n\nCustom LLM Integration\n\nOnly [LiteLLM compatible providers](https://docs.litellm.ai/docs/providers) are available in Python. Some may require extra setup.\n\nIntegrate any LLM with Stagehand using custom clients. The only requirement is **structured output support** for consistent automation behavior.\n\n###\n\n[‚Äã\n\n](#vercel-ai-sdk)\n\nVercel AI SDK\n\nThe [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) is a popular library for interacting with LLMs. You can use any of the providers supported by the Vercel AI SDK to create a client for your model, **as long as they support structured outputs**. Vercel AI SDK supports providers for OpenAI, Anthropic, and Google, along with support for **Amazon Bedrock** and **Azure OpenAI**. For a full list, see the [Vercel AI SDK providers page](https://sdk.vercel.ai/providers/ai-sdk-providers). To get started, you‚Äôll need to install the `ai` package (version 4) and the provider you want to use (version 1 - both need to be compatible with LanguageModelV1). For example, to use Amazon Bedrock, you‚Äôll need to install the `@ai-sdk/amazon-bedrock` package. You‚Äôll also need to import the [Vercel AI SDK external client](https://github.com/browserbase/stagehand/blob/main/lib/llm/aisdk.ts) through Stagehand to create a client for your model.\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install ai@4 @ai-sdk/amazon-bedrock@1\n```\n\nThe `AISdkClient` is not yet available via the Stagehand npm package. For now, install Stagehand as a git repository to access the `AISdkClient` (this will be included in the npm package in an upcoming release).\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install @browserbasehq/stagehand@git+https://github.com/browserbase/stagehand.git\n```\n\nCopy\n\nAsk AI\n\n```\n// Install/import the provider you want to use.\n// For example, to use Azure OpenAI, import { createAzure } from '@ai-sdk/azure';\nimport { bedrock } from \"@ai-sdk/amazon-bedrock\";\n// @ts-ignore\nimport { AISdkClient } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  llmClient: new AISdkClient({\n\tmodel: bedrock(\"anthropic.claude-3-7-sonnet-20250219-v1:0\"),\n  }),\n});\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nModel doesn't support structured outputs\n\n**Error**: `Model does not support structured outputs`**Solution**: Use models that support function calling/structured outputs. The minimum requirements are:\n\n-   Model must support JSON/structured outputs\n-   Model must have strong reasoning capabilities\n-   Model must be able to handle complex instructions\n\nFor each provider, use their latest models that meet these requirements. Some examples:\n\n-   **OpenAI**: GPT-4 series or newer\n-   **Anthropic**: Claude 3 series or newer\n-   **Google**: Gemini 2 series or newer\n-   **Other providers**: Latest models with structured output support\n\n**Note**: Avoid base language models without structured output capabilities or fine-tuning for instruction following. When in doubt, check our [Model Evaluation](https://www.stagehand.dev/evals) page for up-to-date recommendations.\n\nAuthentication errors\n\n**Error**: `Invalid API key` or `Unauthorized`**Solution**:\n\n-   Verify your environment variables are set correctly\n-   Check API key permissions and quotas\n-   Ensure you‚Äôre using the correct API key for the provider\n-   For Anthropic, make sure you have access to the Claude API\n\nInconsistent automation results\n\n**Symptoms**: Actions work sometimes but fail other times**Causes & Solutions**:\n\n-   **Weak models**: Use more capable models - check our [Model Evaluation](https://www.stagehand.dev/evals) page for current recommendations\n-   **High temperature**: Set temperature to 0 for deterministic outputs\n-   **Complex pages**: Switch to models with higher accuracy scores on our [Model Evaluation](https://www.stagehand.dev/evals) page\n-   **Rate limits**: Implement retry logic with exponential backoff\n-   **Context limits**: Reduce page complexity or use models with larger context windows\n-   **Prompt clarity**: Ensure your automation instructions are clear and specific\n\nSlow performance\n\n**Issue**: Automation takes too long to respond**Solutions**:\n\n-   **Use fast models**: Choose models optimized for speed\n    -   Any model with < 1s response time\n    -   Models with ‚Äúfast‚Äù or ‚Äúflash‚Äù variants\n-   **Optimize settings**:\n    -   Use `verbose: 0` to minimize token usage\n    -   Set temperature to 0 for fastest processing\n    -   Keep max tokens as low as possible\n-   **Consider local deployment**: Local models can provide lowest latency\n-   **Batch operations**: Group multiple actions when possible\n\nHigh costs\n\n**Issue**: LLM usage costs are too high**Cost Optimization Strategies**:\n\n1.  **Switch to cost-effective models**:\n    -   Check our [Model Evaluation](https://www.stagehand.dev/evals) page for current cost-performance benchmarks\n    -   Choose models with lower cost per token that still meet accuracy requirements\n    -   Consider models optimized for speed to reduce total runtime costs\n2.  **Optimize token usage**:\n    -   Set `verbose: 0` to reduce logging overhead\n    -   Use concise prompts and limit response length\n3.  **Smart model selection**: Start with cheaper models, fallback to premium ones only when needed\n4.  **Cache responses**: Implement LLM response caching for repeated automation patterns\n5.  **Monitor usage**: Set up billing alerts and track costs per automation run\n6.  **Batch processing**: Process multiple similar tasks together\n\n###\n\n[‚Äã\n\n](#next-steps)\n\nNext Steps\n\n[\n\n## Choose Models\n\nSee our Model Evaluation page\n\n](https://www.stagehand.dev/evals)[\n\n## Test Models\n\nEvaluate performance on your specific use cases in our Model Evaluation guide\n\n](/configuration/evals)[\n\n## Track Costs\n\nMonitor token usage and set alerts using our Observability tools\n\n](/configuration/observability)[\n\n## Cache Results\n\nStore successful patterns using our Caching Guide\n\n](/best-practices/caching)\n\n[Logging](/configuration/logging)[Evaluations](/configuration/evals)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:56:07.985Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#basic-configuration",
        "title": "Models - ü§ò Stagehand",
        "metaDescription": "Enhance Stagehand with LLMs for optimal performance, cost, and reliability",
        "markdown": "Models - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nModels\n\nOn this page\n\n-   [Why LLM Choice Matters](#why-llm-choice-matters)\n-   [Environment Variables Setup](#environment-variables-setup)\n-   [Supported Providers](#supported-providers)\n-   [Production-Ready Providers](#production-ready-providers)\n-   [Additional Providers](#additional-providers)\n-   [Basic Configuration](#basic-configuration)\n-   [Model Name Format](#model-name-format)\n-   [Quick Start Examples](#quick-start-examples)\n-   [Custom LLM Integration](#custom-llm-integration)\n-   [Vercel AI SDK](#vercel-ai-sdk)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n-   [Next Steps](#next-steps)\n\nConfiguration\n\n# Models\n\nCopy page\n\nEnhance Stagehand with LLMs for optimal performance, cost, and reliability\n\nCopy page\n\nStagehand uses Large Language Models (LLMs) to understand web pages, plan actions, and interact with complex interfaces. The choice of LLM significantly impacts your automation‚Äôs accuracy, speed, and cost.[\n\n## Model Evaluation\n\nFind more details about how to choose the right model on our Model Evaluation page.\n\n](https://www.stagehand.dev/evals)\n\n##\n\n[‚Äã\n\n](#why-llm-choice-matters)\n\nWhy LLM Choice Matters\n\n-   **Accuracy**: Better models provide more reliable element detection and action planning\n-   **Speed**: Faster models reduce automation latency\n-   **Cost**: Different providers offer varying pricing structures\n-   **Reliability**: Structured output support ensures consistent automation behavior\n\nFind more details about how to choose the right model on our [Model Evaluation](https://www.stagehand.dev/evals) page.\n\nSmall models on **Ollama** struggle with consistent structured outputs. While technically supported, we don‚Äôt recommend them for production Stagehand workflows.\n\n##\n\n[‚Äã\n\n](#environment-variables-setup)\n\nEnvironment Variables Setup\n\nSet up your API keys before configuring Stagehand:\n\n.env\n\nCopy\n\nAsk AI\n\n```\n# Choose one or more providers\nOPENAI_API_KEY=your_openai_key_here\nANTHROPIC_API_KEY=your_anthropic_key_here\nGOOGLE_API_KEY=your_google_key_here\nGROQ_API_KEY=your_groq_key_here\n```\n\n##\n\n[‚Äã\n\n](#supported-providers)\n\nSupported Providers\n\nStagehand supports major LLM providers with structured output capabilities:\n\n###\n\n[‚Äã\n\n](#production-ready-providers)\n\nProduction-Ready Providers\n\nProvider\n\nBest Models\n\nStrengths\n\nUse Case\n\n**OpenAI**\n\n`gpt-4.1`, `gpt-4.1-mini`\n\nHigh accuracy, reliable\n\nProduction, complex sites\n\n**Anthropic**\n\n`claude-3-7-sonnet-latest`\n\nExcellent reasoning\n\nComplex automation tasks\n\n**Google**\n\n`gemini-2.5-flash`, `gemini-2.5-pro`\n\nFast, cost-effective\n\nHigh-volume automation\n\n###\n\n[‚Äã\n\n](#additional-providers)\n\nAdditional Providers\n\nShow More Providers\n\n-   **Groq** - `llama-3.3-70b-versatile` (Good for speed critical applications)\n-   **xAI** - `grok-beta` (Good for complex reasoning)\n-   **Azure** - Enterprise OpenAI deployment\n-   **Cerebras** - High-speed inference\n-   **TogetherAI** - Open-source models\n-   **Mistral** - `mixtral-8x7b-32768` (European option)\n-   **DeepSeek** - Cost-effective alternative\n-   **Perplexity** - Real-time web data\n-   **Ollama** - Local deployment (limited accuracy)\n-   **Run any model included in AI SDK** - Find supported models in the [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) (Follow the guide [here](#vercel-ai-sdk) to get started.)\n\n##\n\n[‚Äã\n\n](#basic-configuration)\n\nBasic Configuration\n\n###\n\n[‚Äã\n\n](#model-name-format)\n\nModel Name Format\n\nStagehand uses the format `provider/model-name` for model specification. **Examples:**\n\n-   OpenAI: `openai/gpt-4.1`\n-   Anthropic: `anthropic/claude-3-7-sonnet-latest`\n-   Google: `google/gemini-2.5-flash` (Recommended)\n\n###\n\n[‚Äã\n\n](#quick-start-examples)\n\nQuick Start Examples\n\n-   Google (Recommended)\n-   OpenAI\n-   Anthropic\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  modelName: \"google/gemini-2.5-flash\",\n  modelClientOptions: {\n    apiKey: process.env.GOOGLE_API_KEY,\n  },\n});\n```\n\n##\n\n[‚Äã\n\n](#custom-llm-integration)\n\nCustom LLM Integration\n\nOnly [LiteLLM compatible providers](https://docs.litellm.ai/docs/providers) are available in Python. Some may require extra setup.\n\nIntegrate any LLM with Stagehand using custom clients. The only requirement is **structured output support** for consistent automation behavior.\n\n###\n\n[‚Äã\n\n](#vercel-ai-sdk)\n\nVercel AI SDK\n\nThe [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) is a popular library for interacting with LLMs. You can use any of the providers supported by the Vercel AI SDK to create a client for your model, **as long as they support structured outputs**. Vercel AI SDK supports providers for OpenAI, Anthropic, and Google, along with support for **Amazon Bedrock** and **Azure OpenAI**. For a full list, see the [Vercel AI SDK providers page](https://sdk.vercel.ai/providers/ai-sdk-providers). To get started, you‚Äôll need to install the `ai` package (version 4) and the provider you want to use (version 1 - both need to be compatible with LanguageModelV1). For example, to use Amazon Bedrock, you‚Äôll need to install the `@ai-sdk/amazon-bedrock` package. You‚Äôll also need to import the [Vercel AI SDK external client](https://github.com/browserbase/stagehand/blob/main/lib/llm/aisdk.ts) through Stagehand to create a client for your model.\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install ai@4 @ai-sdk/amazon-bedrock@1\n```\n\nThe `AISdkClient` is not yet available via the Stagehand npm package. For now, install Stagehand as a git repository to access the `AISdkClient` (this will be included in the npm package in an upcoming release).\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install @browserbasehq/stagehand@git+https://github.com/browserbase/stagehand.git\n```\n\nCopy\n\nAsk AI\n\n```\n// Install/import the provider you want to use.\n// For example, to use Azure OpenAI, import { createAzure } from '@ai-sdk/azure';\nimport { bedrock } from \"@ai-sdk/amazon-bedrock\";\n// @ts-ignore\nimport { AISdkClient } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  llmClient: new AISdkClient({\n\tmodel: bedrock(\"anthropic.claude-3-7-sonnet-20250219-v1:0\"),\n  }),\n});\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nModel doesn't support structured outputs\n\n**Error**: `Model does not support structured outputs`**Solution**: Use models that support function calling/structured outputs. The minimum requirements are:\n\n-   Model must support JSON/structured outputs\n-   Model must have strong reasoning capabilities\n-   Model must be able to handle complex instructions\n\nFor each provider, use their latest models that meet these requirements. Some examples:\n\n-   **OpenAI**: GPT-4 series or newer\n-   **Anthropic**: Claude 3 series or newer\n-   **Google**: Gemini 2 series or newer\n-   **Other providers**: Latest models with structured output support\n\n**Note**: Avoid base language models without structured output capabilities or fine-tuning for instruction following. When in doubt, check our [Model Evaluation](https://www.stagehand.dev/evals) page for up-to-date recommendations.\n\nAuthentication errors\n\n**Error**: `Invalid API key` or `Unauthorized`**Solution**:\n\n-   Verify your environment variables are set correctly\n-   Check API key permissions and quotas\n-   Ensure you‚Äôre using the correct API key for the provider\n-   For Anthropic, make sure you have access to the Claude API\n\nInconsistent automation results\n\n**Symptoms**: Actions work sometimes but fail other times**Causes & Solutions**:\n\n-   **Weak models**: Use more capable models - check our [Model Evaluation](https://www.stagehand.dev/evals) page for current recommendations\n-   **High temperature**: Set temperature to 0 for deterministic outputs\n-   **Complex pages**: Switch to models with higher accuracy scores on our [Model Evaluation](https://www.stagehand.dev/evals) page\n-   **Rate limits**: Implement retry logic with exponential backoff\n-   **Context limits**: Reduce page complexity or use models with larger context windows\n-   **Prompt clarity**: Ensure your automation instructions are clear and specific\n\nSlow performance\n\n**Issue**: Automation takes too long to respond**Solutions**:\n\n-   **Use fast models**: Choose models optimized for speed\n    -   Any model with < 1s response time\n    -   Models with ‚Äúfast‚Äù or ‚Äúflash‚Äù variants\n-   **Optimize settings**:\n    -   Use `verbose: 0` to minimize token usage\n    -   Set temperature to 0 for fastest processing\n    -   Keep max tokens as low as possible\n-   **Consider local deployment**: Local models can provide lowest latency\n-   **Batch operations**: Group multiple actions when possible\n\nHigh costs\n\n**Issue**: LLM usage costs are too high**Cost Optimization Strategies**:\n\n1.  **Switch to cost-effective models**:\n    -   Check our [Model Evaluation](https://www.stagehand.dev/evals) page for current cost-performance benchmarks\n    -   Choose models with lower cost per token that still meet accuracy requirements\n    -   Consider models optimized for speed to reduce total runtime costs\n2.  **Optimize token usage**:\n    -   Set `verbose: 0` to reduce logging overhead\n    -   Use concise prompts and limit response length\n3.  **Smart model selection**: Start with cheaper models, fallback to premium ones only when needed\n4.  **Cache responses**: Implement LLM response caching for repeated automation patterns\n5.  **Monitor usage**: Set up billing alerts and track costs per automation run\n6.  **Batch processing**: Process multiple similar tasks together\n\n###\n\n[‚Äã\n\n](#next-steps)\n\nNext Steps\n\n[\n\n## Choose Models\n\nSee our Model Evaluation page\n\n](https://www.stagehand.dev/evals)[\n\n## Test Models\n\nEvaluate performance on your specific use cases in our Model Evaluation guide\n\n](/configuration/evals)[\n\n## Track Costs\n\nMonitor token usage and set alerts using our Observability tools\n\n](/configuration/observability)[\n\n## Cache Results\n\nStore successful patterns using our Caching Guide\n\n](/best-practices/caching)\n\n[Logging](/configuration/logging)[Evaluations](/configuration/evals)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:56:07.988Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#model-name-format",
        "title": "Models - ü§ò Stagehand",
        "metaDescription": "Enhance Stagehand with LLMs for optimal performance, cost, and reliability",
        "markdown": "Models - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nModels\n\nOn this page\n\n-   [Why LLM Choice Matters](#why-llm-choice-matters)\n-   [Environment Variables Setup](#environment-variables-setup)\n-   [Supported Providers](#supported-providers)\n-   [Production-Ready Providers](#production-ready-providers)\n-   [Additional Providers](#additional-providers)\n-   [Basic Configuration](#basic-configuration)\n-   [Model Name Format](#model-name-format)\n-   [Quick Start Examples](#quick-start-examples)\n-   [Custom LLM Integration](#custom-llm-integration)\n-   [Vercel AI SDK](#vercel-ai-sdk)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n-   [Next Steps](#next-steps)\n\nConfiguration\n\n# Models\n\nCopy page\n\nEnhance Stagehand with LLMs for optimal performance, cost, and reliability\n\nCopy page\n\nStagehand uses Large Language Models (LLMs) to understand web pages, plan actions, and interact with complex interfaces. The choice of LLM significantly impacts your automation‚Äôs accuracy, speed, and cost.[\n\n## Model Evaluation\n\nFind more details about how to choose the right model on our Model Evaluation page.\n\n](https://www.stagehand.dev/evals)\n\n##\n\n[‚Äã\n\n](#why-llm-choice-matters)\n\nWhy LLM Choice Matters\n\n-   **Accuracy**: Better models provide more reliable element detection and action planning\n-   **Speed**: Faster models reduce automation latency\n-   **Cost**: Different providers offer varying pricing structures\n-   **Reliability**: Structured output support ensures consistent automation behavior\n\nFind more details about how to choose the right model on our [Model Evaluation](https://www.stagehand.dev/evals) page.\n\nSmall models on **Ollama** struggle with consistent structured outputs. While technically supported, we don‚Äôt recommend them for production Stagehand workflows.\n\n##\n\n[‚Äã\n\n](#environment-variables-setup)\n\nEnvironment Variables Setup\n\nSet up your API keys before configuring Stagehand:\n\n.env\n\nCopy\n\nAsk AI\n\n```\n# Choose one or more providers\nOPENAI_API_KEY=your_openai_key_here\nANTHROPIC_API_KEY=your_anthropic_key_here\nGOOGLE_API_KEY=your_google_key_here\nGROQ_API_KEY=your_groq_key_here\n```\n\n##\n\n[‚Äã\n\n](#supported-providers)\n\nSupported Providers\n\nStagehand supports major LLM providers with structured output capabilities:\n\n###\n\n[‚Äã\n\n](#production-ready-providers)\n\nProduction-Ready Providers\n\nProvider\n\nBest Models\n\nStrengths\n\nUse Case\n\n**OpenAI**\n\n`gpt-4.1`, `gpt-4.1-mini`\n\nHigh accuracy, reliable\n\nProduction, complex sites\n\n**Anthropic**\n\n`claude-3-7-sonnet-latest`\n\nExcellent reasoning\n\nComplex automation tasks\n\n**Google**\n\n`gemini-2.5-flash`, `gemini-2.5-pro`\n\nFast, cost-effective\n\nHigh-volume automation\n\n###\n\n[‚Äã\n\n](#additional-providers)\n\nAdditional Providers\n\nShow More Providers\n\n-   **Groq** - `llama-3.3-70b-versatile` (Good for speed critical applications)\n-   **xAI** - `grok-beta` (Good for complex reasoning)\n-   **Azure** - Enterprise OpenAI deployment\n-   **Cerebras** - High-speed inference\n-   **TogetherAI** - Open-source models\n-   **Mistral** - `mixtral-8x7b-32768` (European option)\n-   **DeepSeek** - Cost-effective alternative\n-   **Perplexity** - Real-time web data\n-   **Ollama** - Local deployment (limited accuracy)\n-   **Run any model included in AI SDK** - Find supported models in the [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) (Follow the guide [here](#vercel-ai-sdk) to get started.)\n\n##\n\n[‚Äã\n\n](#basic-configuration)\n\nBasic Configuration\n\n###\n\n[‚Äã\n\n](#model-name-format)\n\nModel Name Format\n\nStagehand uses the format `provider/model-name` for model specification. **Examples:**\n\n-   OpenAI: `openai/gpt-4.1`\n-   Anthropic: `anthropic/claude-3-7-sonnet-latest`\n-   Google: `google/gemini-2.5-flash` (Recommended)\n\n###\n\n[‚Äã\n\n](#quick-start-examples)\n\nQuick Start Examples\n\n-   Google (Recommended)\n-   OpenAI\n-   Anthropic\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  modelName: \"google/gemini-2.5-flash\",\n  modelClientOptions: {\n    apiKey: process.env.GOOGLE_API_KEY,\n  },\n});\n```\n\n##\n\n[‚Äã\n\n](#custom-llm-integration)\n\nCustom LLM Integration\n\nOnly [LiteLLM compatible providers](https://docs.litellm.ai/docs/providers) are available in Python. Some may require extra setup.\n\nIntegrate any LLM with Stagehand using custom clients. The only requirement is **structured output support** for consistent automation behavior.\n\n###\n\n[‚Äã\n\n](#vercel-ai-sdk)\n\nVercel AI SDK\n\nThe [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) is a popular library for interacting with LLMs. You can use any of the providers supported by the Vercel AI SDK to create a client for your model, **as long as they support structured outputs**. Vercel AI SDK supports providers for OpenAI, Anthropic, and Google, along with support for **Amazon Bedrock** and **Azure OpenAI**. For a full list, see the [Vercel AI SDK providers page](https://sdk.vercel.ai/providers/ai-sdk-providers). To get started, you‚Äôll need to install the `ai` package (version 4) and the provider you want to use (version 1 - both need to be compatible with LanguageModelV1). For example, to use Amazon Bedrock, you‚Äôll need to install the `@ai-sdk/amazon-bedrock` package. You‚Äôll also need to import the [Vercel AI SDK external client](https://github.com/browserbase/stagehand/blob/main/lib/llm/aisdk.ts) through Stagehand to create a client for your model.\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install ai@4 @ai-sdk/amazon-bedrock@1\n```\n\nThe `AISdkClient` is not yet available via the Stagehand npm package. For now, install Stagehand as a git repository to access the `AISdkClient` (this will be included in the npm package in an upcoming release).\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install @browserbasehq/stagehand@git+https://github.com/browserbase/stagehand.git\n```\n\nCopy\n\nAsk AI\n\n```\n// Install/import the provider you want to use.\n// For example, to use Azure OpenAI, import { createAzure } from '@ai-sdk/azure';\nimport { bedrock } from \"@ai-sdk/amazon-bedrock\";\n// @ts-ignore\nimport { AISdkClient } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  llmClient: new AISdkClient({\n\tmodel: bedrock(\"anthropic.claude-3-7-sonnet-20250219-v1:0\"),\n  }),\n});\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nModel doesn't support structured outputs\n\n**Error**: `Model does not support structured outputs`**Solution**: Use models that support function calling/structured outputs. The minimum requirements are:\n\n-   Model must support JSON/structured outputs\n-   Model must have strong reasoning capabilities\n-   Model must be able to handle complex instructions\n\nFor each provider, use their latest models that meet these requirements. Some examples:\n\n-   **OpenAI**: GPT-4 series or newer\n-   **Anthropic**: Claude 3 series or newer\n-   **Google**: Gemini 2 series or newer\n-   **Other providers**: Latest models with structured output support\n\n**Note**: Avoid base language models without structured output capabilities or fine-tuning for instruction following. When in doubt, check our [Model Evaluation](https://www.stagehand.dev/evals) page for up-to-date recommendations.\n\nAuthentication errors\n\n**Error**: `Invalid API key` or `Unauthorized`**Solution**:\n\n-   Verify your environment variables are set correctly\n-   Check API key permissions and quotas\n-   Ensure you‚Äôre using the correct API key for the provider\n-   For Anthropic, make sure you have access to the Claude API\n\nInconsistent automation results\n\n**Symptoms**: Actions work sometimes but fail other times**Causes & Solutions**:\n\n-   **Weak models**: Use more capable models - check our [Model Evaluation](https://www.stagehand.dev/evals) page for current recommendations\n-   **High temperature**: Set temperature to 0 for deterministic outputs\n-   **Complex pages**: Switch to models with higher accuracy scores on our [Model Evaluation](https://www.stagehand.dev/evals) page\n-   **Rate limits**: Implement retry logic with exponential backoff\n-   **Context limits**: Reduce page complexity or use models with larger context windows\n-   **Prompt clarity**: Ensure your automation instructions are clear and specific\n\nSlow performance\n\n**Issue**: Automation takes too long to respond**Solutions**:\n\n-   **Use fast models**: Choose models optimized for speed\n    -   Any model with < 1s response time\n    -   Models with ‚Äúfast‚Äù or ‚Äúflash‚Äù variants\n-   **Optimize settings**:\n    -   Use `verbose: 0` to minimize token usage\n    -   Set temperature to 0 for fastest processing\n    -   Keep max tokens as low as possible\n-   **Consider local deployment**: Local models can provide lowest latency\n-   **Batch operations**: Group multiple actions when possible\n\nHigh costs\n\n**Issue**: LLM usage costs are too high**Cost Optimization Strategies**:\n\n1.  **Switch to cost-effective models**:\n    -   Check our [Model Evaluation](https://www.stagehand.dev/evals) page for current cost-performance benchmarks\n    -   Choose models with lower cost per token that still meet accuracy requirements\n    -   Consider models optimized for speed to reduce total runtime costs\n2.  **Optimize token usage**:\n    -   Set `verbose: 0` to reduce logging overhead\n    -   Use concise prompts and limit response length\n3.  **Smart model selection**: Start with cheaper models, fallback to premium ones only when needed\n4.  **Cache responses**: Implement LLM response caching for repeated automation patterns\n5.  **Monitor usage**: Set up billing alerts and track costs per automation run\n6.  **Batch processing**: Process multiple similar tasks together\n\n###\n\n[‚Äã\n\n](#next-steps)\n\nNext Steps\n\n[\n\n## Choose Models\n\nSee our Model Evaluation page\n\n](https://www.stagehand.dev/evals)[\n\n## Test Models\n\nEvaluate performance on your specific use cases in our Model Evaluation guide\n\n](/configuration/evals)[\n\n## Track Costs\n\nMonitor token usage and set alerts using our Observability tools\n\n](/configuration/observability)[\n\n## Cache Results\n\nStore successful patterns using our Caching Guide\n\n](/best-practices/caching)\n\n[Logging](/configuration/logging)[Evaluations](/configuration/evals)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:56:07.987Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#quick-start-examples",
        "title": "Models - ü§ò Stagehand",
        "metaDescription": "Enhance Stagehand with LLMs for optimal performance, cost, and reliability",
        "markdown": "Models - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nModels\n\nOn this page\n\n-   [Why LLM Choice Matters](#why-llm-choice-matters)\n-   [Environment Variables Setup](#environment-variables-setup)\n-   [Supported Providers](#supported-providers)\n-   [Production-Ready Providers](#production-ready-providers)\n-   [Additional Providers](#additional-providers)\n-   [Basic Configuration](#basic-configuration)\n-   [Model Name Format](#model-name-format)\n-   [Quick Start Examples](#quick-start-examples)\n-   [Custom LLM Integration](#custom-llm-integration)\n-   [Vercel AI SDK](#vercel-ai-sdk)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n-   [Next Steps](#next-steps)\n\nConfiguration\n\n# Models\n\nCopy page\n\nEnhance Stagehand with LLMs for optimal performance, cost, and reliability\n\nCopy page\n\nStagehand uses Large Language Models (LLMs) to understand web pages, plan actions, and interact with complex interfaces. The choice of LLM significantly impacts your automation‚Äôs accuracy, speed, and cost.[\n\n## Model Evaluation\n\nFind more details about how to choose the right model on our Model Evaluation page.\n\n](https://www.stagehand.dev/evals)\n\n##\n\n[‚Äã\n\n](#why-llm-choice-matters)\n\nWhy LLM Choice Matters\n\n-   **Accuracy**: Better models provide more reliable element detection and action planning\n-   **Speed**: Faster models reduce automation latency\n-   **Cost**: Different providers offer varying pricing structures\n-   **Reliability**: Structured output support ensures consistent automation behavior\n\nFind more details about how to choose the right model on our [Model Evaluation](https://www.stagehand.dev/evals) page.\n\nSmall models on **Ollama** struggle with consistent structured outputs. While technically supported, we don‚Äôt recommend them for production Stagehand workflows.\n\n##\n\n[‚Äã\n\n](#environment-variables-setup)\n\nEnvironment Variables Setup\n\nSet up your API keys before configuring Stagehand:\n\n.env\n\nCopy\n\nAsk AI\n\n```\n# Choose one or more providers\nOPENAI_API_KEY=your_openai_key_here\nANTHROPIC_API_KEY=your_anthropic_key_here\nGOOGLE_API_KEY=your_google_key_here\nGROQ_API_KEY=your_groq_key_here\n```\n\n##\n\n[‚Äã\n\n](#supported-providers)\n\nSupported Providers\n\nStagehand supports major LLM providers with structured output capabilities:\n\n###\n\n[‚Äã\n\n](#production-ready-providers)\n\nProduction-Ready Providers\n\nProvider\n\nBest Models\n\nStrengths\n\nUse Case\n\n**OpenAI**\n\n`gpt-4.1`, `gpt-4.1-mini`\n\nHigh accuracy, reliable\n\nProduction, complex sites\n\n**Anthropic**\n\n`claude-3-7-sonnet-latest`\n\nExcellent reasoning\n\nComplex automation tasks\n\n**Google**\n\n`gemini-2.5-flash`, `gemini-2.5-pro`\n\nFast, cost-effective\n\nHigh-volume automation\n\n###\n\n[‚Äã\n\n](#additional-providers)\n\nAdditional Providers\n\nShow More Providers\n\n-   **Groq** - `llama-3.3-70b-versatile` (Good for speed critical applications)\n-   **xAI** - `grok-beta` (Good for complex reasoning)\n-   **Azure** - Enterprise OpenAI deployment\n-   **Cerebras** - High-speed inference\n-   **TogetherAI** - Open-source models\n-   **Mistral** - `mixtral-8x7b-32768` (European option)\n-   **DeepSeek** - Cost-effective alternative\n-   **Perplexity** - Real-time web data\n-   **Ollama** - Local deployment (limited accuracy)\n-   **Run any model included in AI SDK** - Find supported models in the [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) (Follow the guide [here](#vercel-ai-sdk) to get started.)\n\n##\n\n[‚Äã\n\n](#basic-configuration)\n\nBasic Configuration\n\n###\n\n[‚Äã\n\n](#model-name-format)\n\nModel Name Format\n\nStagehand uses the format `provider/model-name` for model specification. **Examples:**\n\n-   OpenAI: `openai/gpt-4.1`\n-   Anthropic: `anthropic/claude-3-7-sonnet-latest`\n-   Google: `google/gemini-2.5-flash` (Recommended)\n\n###\n\n[‚Äã\n\n](#quick-start-examples)\n\nQuick Start Examples\n\n-   Google (Recommended)\n-   OpenAI\n-   Anthropic\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  modelName: \"google/gemini-2.5-flash\",\n  modelClientOptions: {\n    apiKey: process.env.GOOGLE_API_KEY,\n  },\n});\n```\n\n##\n\n[‚Äã\n\n](#custom-llm-integration)\n\nCustom LLM Integration\n\nOnly [LiteLLM compatible providers](https://docs.litellm.ai/docs/providers) are available in Python. Some may require extra setup.\n\nIntegrate any LLM with Stagehand using custom clients. The only requirement is **structured output support** for consistent automation behavior.\n\n###\n\n[‚Äã\n\n](#vercel-ai-sdk)\n\nVercel AI SDK\n\nThe [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) is a popular library for interacting with LLMs. You can use any of the providers supported by the Vercel AI SDK to create a client for your model, **as long as they support structured outputs**. Vercel AI SDK supports providers for OpenAI, Anthropic, and Google, along with support for **Amazon Bedrock** and **Azure OpenAI**. For a full list, see the [Vercel AI SDK providers page](https://sdk.vercel.ai/providers/ai-sdk-providers). To get started, you‚Äôll need to install the `ai` package (version 4) and the provider you want to use (version 1 - both need to be compatible with LanguageModelV1). For example, to use Amazon Bedrock, you‚Äôll need to install the `@ai-sdk/amazon-bedrock` package. You‚Äôll also need to import the [Vercel AI SDK external client](https://github.com/browserbase/stagehand/blob/main/lib/llm/aisdk.ts) through Stagehand to create a client for your model.\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install ai@4 @ai-sdk/amazon-bedrock@1\n```\n\nThe `AISdkClient` is not yet available via the Stagehand npm package. For now, install Stagehand as a git repository to access the `AISdkClient` (this will be included in the npm package in an upcoming release).\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install @browserbasehq/stagehand@git+https://github.com/browserbase/stagehand.git\n```\n\nCopy\n\nAsk AI\n\n```\n// Install/import the provider you want to use.\n// For example, to use Azure OpenAI, import { createAzure } from '@ai-sdk/azure';\nimport { bedrock } from \"@ai-sdk/amazon-bedrock\";\n// @ts-ignore\nimport { AISdkClient } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  llmClient: new AISdkClient({\n\tmodel: bedrock(\"anthropic.claude-3-7-sonnet-20250219-v1:0\"),\n  }),\n});\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nModel doesn't support structured outputs\n\n**Error**: `Model does not support structured outputs`**Solution**: Use models that support function calling/structured outputs. The minimum requirements are:\n\n-   Model must support JSON/structured outputs\n-   Model must have strong reasoning capabilities\n-   Model must be able to handle complex instructions\n\nFor each provider, use their latest models that meet these requirements. Some examples:\n\n-   **OpenAI**: GPT-4 series or newer\n-   **Anthropic**: Claude 3 series or newer\n-   **Google**: Gemini 2 series or newer\n-   **Other providers**: Latest models with structured output support\n\n**Note**: Avoid base language models without structured output capabilities or fine-tuning for instruction following. When in doubt, check our [Model Evaluation](https://www.stagehand.dev/evals) page for up-to-date recommendations.\n\nAuthentication errors\n\n**Error**: `Invalid API key` or `Unauthorized`**Solution**:\n\n-   Verify your environment variables are set correctly\n-   Check API key permissions and quotas\n-   Ensure you‚Äôre using the correct API key for the provider\n-   For Anthropic, make sure you have access to the Claude API\n\nInconsistent automation results\n\n**Symptoms**: Actions work sometimes but fail other times**Causes & Solutions**:\n\n-   **Weak models**: Use more capable models - check our [Model Evaluation](https://www.stagehand.dev/evals) page for current recommendations\n-   **High temperature**: Set temperature to 0 for deterministic outputs\n-   **Complex pages**: Switch to models with higher accuracy scores on our [Model Evaluation](https://www.stagehand.dev/evals) page\n-   **Rate limits**: Implement retry logic with exponential backoff\n-   **Context limits**: Reduce page complexity or use models with larger context windows\n-   **Prompt clarity**: Ensure your automation instructions are clear and specific\n\nSlow performance\n\n**Issue**: Automation takes too long to respond**Solutions**:\n\n-   **Use fast models**: Choose models optimized for speed\n    -   Any model with < 1s response time\n    -   Models with ‚Äúfast‚Äù or ‚Äúflash‚Äù variants\n-   **Optimize settings**:\n    -   Use `verbose: 0` to minimize token usage\n    -   Set temperature to 0 for fastest processing\n    -   Keep max tokens as low as possible\n-   **Consider local deployment**: Local models can provide lowest latency\n-   **Batch operations**: Group multiple actions when possible\n\nHigh costs\n\n**Issue**: LLM usage costs are too high**Cost Optimization Strategies**:\n\n1.  **Switch to cost-effective models**:\n    -   Check our [Model Evaluation](https://www.stagehand.dev/evals) page for current cost-performance benchmarks\n    -   Choose models with lower cost per token that still meet accuracy requirements\n    -   Consider models optimized for speed to reduce total runtime costs\n2.  **Optimize token usage**:\n    -   Set `verbose: 0` to reduce logging overhead\n    -   Use concise prompts and limit response length\n3.  **Smart model selection**: Start with cheaper models, fallback to premium ones only when needed\n4.  **Cache responses**: Implement LLM response caching for repeated automation patterns\n5.  **Monitor usage**: Set up billing alerts and track costs per automation run\n6.  **Batch processing**: Process multiple similar tasks together\n\n###\n\n[‚Äã\n\n](#next-steps)\n\nNext Steps\n\n[\n\n## Choose Models\n\nSee our Model Evaluation page\n\n](https://www.stagehand.dev/evals)[\n\n## Test Models\n\nEvaluate performance on your specific use cases in our Model Evaluation guide\n\n](/configuration/evals)[\n\n## Track Costs\n\nMonitor token usage and set alerts using our Observability tools\n\n](/configuration/observability)[\n\n## Cache Results\n\nStore successful patterns using our Caching Guide\n\n](/best-practices/caching)\n\n[Logging](/configuration/logging)[Evaluations](/configuration/evals)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:56:07.987Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#custom-llm-integration",
        "title": "Models - ü§ò Stagehand",
        "metaDescription": "Enhance Stagehand with LLMs for optimal performance, cost, and reliability",
        "markdown": "Models - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nModels\n\nOn this page\n\n-   [Why LLM Choice Matters](#why-llm-choice-matters)\n-   [Environment Variables Setup](#environment-variables-setup)\n-   [Supported Providers](#supported-providers)\n-   [Production-Ready Providers](#production-ready-providers)\n-   [Additional Providers](#additional-providers)\n-   [Basic Configuration](#basic-configuration)\n-   [Model Name Format](#model-name-format)\n-   [Quick Start Examples](#quick-start-examples)\n-   [Custom LLM Integration](#custom-llm-integration)\n-   [Vercel AI SDK](#vercel-ai-sdk)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n-   [Next Steps](#next-steps)\n\nConfiguration\n\n# Models\n\nCopy page\n\nEnhance Stagehand with LLMs for optimal performance, cost, and reliability\n\nCopy page\n\nStagehand uses Large Language Models (LLMs) to understand web pages, plan actions, and interact with complex interfaces. The choice of LLM significantly impacts your automation‚Äôs accuracy, speed, and cost.[\n\n## Model Evaluation\n\nFind more details about how to choose the right model on our Model Evaluation page.\n\n](https://www.stagehand.dev/evals)\n\n##\n\n[‚Äã\n\n](#why-llm-choice-matters)\n\nWhy LLM Choice Matters\n\n-   **Accuracy**: Better models provide more reliable element detection and action planning\n-   **Speed**: Faster models reduce automation latency\n-   **Cost**: Different providers offer varying pricing structures\n-   **Reliability**: Structured output support ensures consistent automation behavior\n\nFind more details about how to choose the right model on our [Model Evaluation](https://www.stagehand.dev/evals) page.\n\nSmall models on **Ollama** struggle with consistent structured outputs. While technically supported, we don‚Äôt recommend them for production Stagehand workflows.\n\n##\n\n[‚Äã\n\n](#environment-variables-setup)\n\nEnvironment Variables Setup\n\nSet up your API keys before configuring Stagehand:\n\n.env\n\nCopy\n\nAsk AI\n\n```\n# Choose one or more providers\nOPENAI_API_KEY=your_openai_key_here\nANTHROPIC_API_KEY=your_anthropic_key_here\nGOOGLE_API_KEY=your_google_key_here\nGROQ_API_KEY=your_groq_key_here\n```\n\n##\n\n[‚Äã\n\n](#supported-providers)\n\nSupported Providers\n\nStagehand supports major LLM providers with structured output capabilities:\n\n###\n\n[‚Äã\n\n](#production-ready-providers)\n\nProduction-Ready Providers\n\nProvider\n\nBest Models\n\nStrengths\n\nUse Case\n\n**OpenAI**\n\n`gpt-4.1`, `gpt-4.1-mini`\n\nHigh accuracy, reliable\n\nProduction, complex sites\n\n**Anthropic**\n\n`claude-3-7-sonnet-latest`\n\nExcellent reasoning\n\nComplex automation tasks\n\n**Google**\n\n`gemini-2.5-flash`, `gemini-2.5-pro`\n\nFast, cost-effective\n\nHigh-volume automation\n\n###\n\n[‚Äã\n\n](#additional-providers)\n\nAdditional Providers\n\nShow More Providers\n\n-   **Groq** - `llama-3.3-70b-versatile` (Good for speed critical applications)\n-   **xAI** - `grok-beta` (Good for complex reasoning)\n-   **Azure** - Enterprise OpenAI deployment\n-   **Cerebras** - High-speed inference\n-   **TogetherAI** - Open-source models\n-   **Mistral** - `mixtral-8x7b-32768` (European option)\n-   **DeepSeek** - Cost-effective alternative\n-   **Perplexity** - Real-time web data\n-   **Ollama** - Local deployment (limited accuracy)\n-   **Run any model included in AI SDK** - Find supported models in the [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) (Follow the guide [here](#vercel-ai-sdk) to get started.)\n\n##\n\n[‚Äã\n\n](#basic-configuration)\n\nBasic Configuration\n\n###\n\n[‚Äã\n\n](#model-name-format)\n\nModel Name Format\n\nStagehand uses the format `provider/model-name` for model specification. **Examples:**\n\n-   OpenAI: `openai/gpt-4.1`\n-   Anthropic: `anthropic/claude-3-7-sonnet-latest`\n-   Google: `google/gemini-2.5-flash` (Recommended)\n\n###\n\n[‚Äã\n\n](#quick-start-examples)\n\nQuick Start Examples\n\n-   Google (Recommended)\n-   OpenAI\n-   Anthropic\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  modelName: \"google/gemini-2.5-flash\",\n  modelClientOptions: {\n    apiKey: process.env.GOOGLE_API_KEY,\n  },\n});\n```\n\n##\n\n[‚Äã\n\n](#custom-llm-integration)\n\nCustom LLM Integration\n\nOnly [LiteLLM compatible providers](https://docs.litellm.ai/docs/providers) are available in Python. Some may require extra setup.\n\nIntegrate any LLM with Stagehand using custom clients. The only requirement is **structured output support** for consistent automation behavior.\n\n###\n\n[‚Äã\n\n](#vercel-ai-sdk)\n\nVercel AI SDK\n\nThe [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) is a popular library for interacting with LLMs. You can use any of the providers supported by the Vercel AI SDK to create a client for your model, **as long as they support structured outputs**. Vercel AI SDK supports providers for OpenAI, Anthropic, and Google, along with support for **Amazon Bedrock** and **Azure OpenAI**. For a full list, see the [Vercel AI SDK providers page](https://sdk.vercel.ai/providers/ai-sdk-providers). To get started, you‚Äôll need to install the `ai` package (version 4) and the provider you want to use (version 1 - both need to be compatible with LanguageModelV1). For example, to use Amazon Bedrock, you‚Äôll need to install the `@ai-sdk/amazon-bedrock` package. You‚Äôll also need to import the [Vercel AI SDK external client](https://github.com/browserbase/stagehand/blob/main/lib/llm/aisdk.ts) through Stagehand to create a client for your model.\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install ai@4 @ai-sdk/amazon-bedrock@1\n```\n\nThe `AISdkClient` is not yet available via the Stagehand npm package. For now, install Stagehand as a git repository to access the `AISdkClient` (this will be included in the npm package in an upcoming release).\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install @browserbasehq/stagehand@git+https://github.com/browserbase/stagehand.git\n```\n\nCopy\n\nAsk AI\n\n```\n// Install/import the provider you want to use.\n// For example, to use Azure OpenAI, import { createAzure } from '@ai-sdk/azure';\nimport { bedrock } from \"@ai-sdk/amazon-bedrock\";\n// @ts-ignore\nimport { AISdkClient } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  llmClient: new AISdkClient({\n\tmodel: bedrock(\"anthropic.claude-3-7-sonnet-20250219-v1:0\"),\n  }),\n});\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nModel doesn't support structured outputs\n\n**Error**: `Model does not support structured outputs`**Solution**: Use models that support function calling/structured outputs. The minimum requirements are:\n\n-   Model must support JSON/structured outputs\n-   Model must have strong reasoning capabilities\n-   Model must be able to handle complex instructions\n\nFor each provider, use their latest models that meet these requirements. Some examples:\n\n-   **OpenAI**: GPT-4 series or newer\n-   **Anthropic**: Claude 3 series or newer\n-   **Google**: Gemini 2 series or newer\n-   **Other providers**: Latest models with structured output support\n\n**Note**: Avoid base language models without structured output capabilities or fine-tuning for instruction following. When in doubt, check our [Model Evaluation](https://www.stagehand.dev/evals) page for up-to-date recommendations.\n\nAuthentication errors\n\n**Error**: `Invalid API key` or `Unauthorized`**Solution**:\n\n-   Verify your environment variables are set correctly\n-   Check API key permissions and quotas\n-   Ensure you‚Äôre using the correct API key for the provider\n-   For Anthropic, make sure you have access to the Claude API\n\nInconsistent automation results\n\n**Symptoms**: Actions work sometimes but fail other times**Causes & Solutions**:\n\n-   **Weak models**: Use more capable models - check our [Model Evaluation](https://www.stagehand.dev/evals) page for current recommendations\n-   **High temperature**: Set temperature to 0 for deterministic outputs\n-   **Complex pages**: Switch to models with higher accuracy scores on our [Model Evaluation](https://www.stagehand.dev/evals) page\n-   **Rate limits**: Implement retry logic with exponential backoff\n-   **Context limits**: Reduce page complexity or use models with larger context windows\n-   **Prompt clarity**: Ensure your automation instructions are clear and specific\n\nSlow performance\n\n**Issue**: Automation takes too long to respond**Solutions**:\n\n-   **Use fast models**: Choose models optimized for speed\n    -   Any model with < 1s response time\n    -   Models with ‚Äúfast‚Äù or ‚Äúflash‚Äù variants\n-   **Optimize settings**:\n    -   Use `verbose: 0` to minimize token usage\n    -   Set temperature to 0 for fastest processing\n    -   Keep max tokens as low as possible\n-   **Consider local deployment**: Local models can provide lowest latency\n-   **Batch operations**: Group multiple actions when possible\n\nHigh costs\n\n**Issue**: LLM usage costs are too high**Cost Optimization Strategies**:\n\n1.  **Switch to cost-effective models**:\n    -   Check our [Model Evaluation](https://www.stagehand.dev/evals) page for current cost-performance benchmarks\n    -   Choose models with lower cost per token that still meet accuracy requirements\n    -   Consider models optimized for speed to reduce total runtime costs\n2.  **Optimize token usage**:\n    -   Set `verbose: 0` to reduce logging overhead\n    -   Use concise prompts and limit response length\n3.  **Smart model selection**: Start with cheaper models, fallback to premium ones only when needed\n4.  **Cache responses**: Implement LLM response caching for repeated automation patterns\n5.  **Monitor usage**: Set up billing alerts and track costs per automation run\n6.  **Batch processing**: Process multiple similar tasks together\n\n###\n\n[‚Äã\n\n](#next-steps)\n\nNext Steps\n\n[\n\n## Choose Models\n\nSee our Model Evaluation page\n\n](https://www.stagehand.dev/evals)[\n\n## Test Models\n\nEvaluate performance on your specific use cases in our Model Evaluation guide\n\n](/configuration/evals)[\n\n## Track Costs\n\nMonitor token usage and set alerts using our Observability tools\n\n](/configuration/observability)[\n\n## Cache Results\n\nStore successful patterns using our Caching Guide\n\n](/best-practices/caching)\n\n[Logging](/configuration/logging)[Evaluations](/configuration/evals)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:56:11.681Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#vercel-ai-sdk",
        "title": "Models - ü§ò Stagehand",
        "metaDescription": "Enhance Stagehand with LLMs for optimal performance, cost, and reliability",
        "markdown": "Models - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nModels\n\nOn this page\n\n-   [Why LLM Choice Matters](#why-llm-choice-matters)\n-   [Environment Variables Setup](#environment-variables-setup)\n-   [Supported Providers](#supported-providers)\n-   [Production-Ready Providers](#production-ready-providers)\n-   [Additional Providers](#additional-providers)\n-   [Basic Configuration](#basic-configuration)\n-   [Model Name Format](#model-name-format)\n-   [Quick Start Examples](#quick-start-examples)\n-   [Custom LLM Integration](#custom-llm-integration)\n-   [Vercel AI SDK](#vercel-ai-sdk)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n-   [Next Steps](#next-steps)\n\nConfiguration\n\n# Models\n\nCopy page\n\nEnhance Stagehand with LLMs for optimal performance, cost, and reliability\n\nCopy page\n\nStagehand uses Large Language Models (LLMs) to understand web pages, plan actions, and interact with complex interfaces. The choice of LLM significantly impacts your automation‚Äôs accuracy, speed, and cost.[\n\n## Model Evaluation\n\nFind more details about how to choose the right model on our Model Evaluation page.\n\n](https://www.stagehand.dev/evals)\n\n##\n\n[‚Äã\n\n](#why-llm-choice-matters)\n\nWhy LLM Choice Matters\n\n-   **Accuracy**: Better models provide more reliable element detection and action planning\n-   **Speed**: Faster models reduce automation latency\n-   **Cost**: Different providers offer varying pricing structures\n-   **Reliability**: Structured output support ensures consistent automation behavior\n\nFind more details about how to choose the right model on our [Model Evaluation](https://www.stagehand.dev/evals) page.\n\nSmall models on **Ollama** struggle with consistent structured outputs. While technically supported, we don‚Äôt recommend them for production Stagehand workflows.\n\n##\n\n[‚Äã\n\n](#environment-variables-setup)\n\nEnvironment Variables Setup\n\nSet up your API keys before configuring Stagehand:\n\n.env\n\nCopy\n\nAsk AI\n\n```\n# Choose one or more providers\nOPENAI_API_KEY=your_openai_key_here\nANTHROPIC_API_KEY=your_anthropic_key_here\nGOOGLE_API_KEY=your_google_key_here\nGROQ_API_KEY=your_groq_key_here\n```\n\n##\n\n[‚Äã\n\n](#supported-providers)\n\nSupported Providers\n\nStagehand supports major LLM providers with structured output capabilities:\n\n###\n\n[‚Äã\n\n](#production-ready-providers)\n\nProduction-Ready Providers\n\nProvider\n\nBest Models\n\nStrengths\n\nUse Case\n\n**OpenAI**\n\n`gpt-4.1`, `gpt-4.1-mini`\n\nHigh accuracy, reliable\n\nProduction, complex sites\n\n**Anthropic**\n\n`claude-3-7-sonnet-latest`\n\nExcellent reasoning\n\nComplex automation tasks\n\n**Google**\n\n`gemini-2.5-flash`, `gemini-2.5-pro`\n\nFast, cost-effective\n\nHigh-volume automation\n\n###\n\n[‚Äã\n\n](#additional-providers)\n\nAdditional Providers\n\nShow More Providers\n\n-   **Groq** - `llama-3.3-70b-versatile` (Good for speed critical applications)\n-   **xAI** - `grok-beta` (Good for complex reasoning)\n-   **Azure** - Enterprise OpenAI deployment\n-   **Cerebras** - High-speed inference\n-   **TogetherAI** - Open-source models\n-   **Mistral** - `mixtral-8x7b-32768` (European option)\n-   **DeepSeek** - Cost-effective alternative\n-   **Perplexity** - Real-time web data\n-   **Ollama** - Local deployment (limited accuracy)\n-   **Run any model included in AI SDK** - Find supported models in the [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) (Follow the guide [here](#vercel-ai-sdk) to get started.)\n\n##\n\n[‚Äã\n\n](#basic-configuration)\n\nBasic Configuration\n\n###\n\n[‚Äã\n\n](#model-name-format)\n\nModel Name Format\n\nStagehand uses the format `provider/model-name` for model specification. **Examples:**\n\n-   OpenAI: `openai/gpt-4.1`\n-   Anthropic: `anthropic/claude-3-7-sonnet-latest`\n-   Google: `google/gemini-2.5-flash` (Recommended)\n\n###\n\n[‚Äã\n\n](#quick-start-examples)\n\nQuick Start Examples\n\n-   Google (Recommended)\n-   OpenAI\n-   Anthropic\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  modelName: \"google/gemini-2.5-flash\",\n  modelClientOptions: {\n    apiKey: process.env.GOOGLE_API_KEY,\n  },\n});\n```\n\n##\n\n[‚Äã\n\n](#custom-llm-integration)\n\nCustom LLM Integration\n\nOnly [LiteLLM compatible providers](https://docs.litellm.ai/docs/providers) are available in Python. Some may require extra setup.\n\nIntegrate any LLM with Stagehand using custom clients. The only requirement is **structured output support** for consistent automation behavior.\n\n###\n\n[‚Äã\n\n](#vercel-ai-sdk)\n\nVercel AI SDK\n\nThe [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) is a popular library for interacting with LLMs. You can use any of the providers supported by the Vercel AI SDK to create a client for your model, **as long as they support structured outputs**. Vercel AI SDK supports providers for OpenAI, Anthropic, and Google, along with support for **Amazon Bedrock** and **Azure OpenAI**. For a full list, see the [Vercel AI SDK providers page](https://sdk.vercel.ai/providers/ai-sdk-providers). To get started, you‚Äôll need to install the `ai` package (version 4) and the provider you want to use (version 1 - both need to be compatible with LanguageModelV1). For example, to use Amazon Bedrock, you‚Äôll need to install the `@ai-sdk/amazon-bedrock` package. You‚Äôll also need to import the [Vercel AI SDK external client](https://github.com/browserbase/stagehand/blob/main/lib/llm/aisdk.ts) through Stagehand to create a client for your model.\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install ai@4 @ai-sdk/amazon-bedrock@1\n```\n\nThe `AISdkClient` is not yet available via the Stagehand npm package. For now, install Stagehand as a git repository to access the `AISdkClient` (this will be included in the npm package in an upcoming release).\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install @browserbasehq/stagehand@git+https://github.com/browserbase/stagehand.git\n```\n\nCopy\n\nAsk AI\n\n```\n// Install/import the provider you want to use.\n// For example, to use Azure OpenAI, import { createAzure } from '@ai-sdk/azure';\nimport { bedrock } from \"@ai-sdk/amazon-bedrock\";\n// @ts-ignore\nimport { AISdkClient } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  llmClient: new AISdkClient({\n\tmodel: bedrock(\"anthropic.claude-3-7-sonnet-20250219-v1:0\"),\n  }),\n});\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nModel doesn't support structured outputs\n\n**Error**: `Model does not support structured outputs`**Solution**: Use models that support function calling/structured outputs. The minimum requirements are:\n\n-   Model must support JSON/structured outputs\n-   Model must have strong reasoning capabilities\n-   Model must be able to handle complex instructions\n\nFor each provider, use their latest models that meet these requirements. Some examples:\n\n-   **OpenAI**: GPT-4 series or newer\n-   **Anthropic**: Claude 3 series or newer\n-   **Google**: Gemini 2 series or newer\n-   **Other providers**: Latest models with structured output support\n\n**Note**: Avoid base language models without structured output capabilities or fine-tuning for instruction following. When in doubt, check our [Model Evaluation](https://www.stagehand.dev/evals) page for up-to-date recommendations.\n\nAuthentication errors\n\n**Error**: `Invalid API key` or `Unauthorized`**Solution**:\n\n-   Verify your environment variables are set correctly\n-   Check API key permissions and quotas\n-   Ensure you‚Äôre using the correct API key for the provider\n-   For Anthropic, make sure you have access to the Claude API\n\nInconsistent automation results\n\n**Symptoms**: Actions work sometimes but fail other times**Causes & Solutions**:\n\n-   **Weak models**: Use more capable models - check our [Model Evaluation](https://www.stagehand.dev/evals) page for current recommendations\n-   **High temperature**: Set temperature to 0 for deterministic outputs\n-   **Complex pages**: Switch to models with higher accuracy scores on our [Model Evaluation](https://www.stagehand.dev/evals) page\n-   **Rate limits**: Implement retry logic with exponential backoff\n-   **Context limits**: Reduce page complexity or use models with larger context windows\n-   **Prompt clarity**: Ensure your automation instructions are clear and specific\n\nSlow performance\n\n**Issue**: Automation takes too long to respond**Solutions**:\n\n-   **Use fast models**: Choose models optimized for speed\n    -   Any model with < 1s response time\n    -   Models with ‚Äúfast‚Äù or ‚Äúflash‚Äù variants\n-   **Optimize settings**:\n    -   Use `verbose: 0` to minimize token usage\n    -   Set temperature to 0 for fastest processing\n    -   Keep max tokens as low as possible\n-   **Consider local deployment**: Local models can provide lowest latency\n-   **Batch operations**: Group multiple actions when possible\n\nHigh costs\n\n**Issue**: LLM usage costs are too high**Cost Optimization Strategies**:\n\n1.  **Switch to cost-effective models**:\n    -   Check our [Model Evaluation](https://www.stagehand.dev/evals) page for current cost-performance benchmarks\n    -   Choose models with lower cost per token that still meet accuracy requirements\n    -   Consider models optimized for speed to reduce total runtime costs\n2.  **Optimize token usage**:\n    -   Set `verbose: 0` to reduce logging overhead\n    -   Use concise prompts and limit response length\n3.  **Smart model selection**: Start with cheaper models, fallback to premium ones only when needed\n4.  **Cache responses**: Implement LLM response caching for repeated automation patterns\n5.  **Monitor usage**: Set up billing alerts and track costs per automation run\n6.  **Batch processing**: Process multiple similar tasks together\n\n###\n\n[‚Äã\n\n](#next-steps)\n\nNext Steps\n\n[\n\n## Choose Models\n\nSee our Model Evaluation page\n\n](https://www.stagehand.dev/evals)[\n\n## Test Models\n\nEvaluate performance on your specific use cases in our Model Evaluation guide\n\n](/configuration/evals)[\n\n## Track Costs\n\nMonitor token usage and set alerts using our Observability tools\n\n](/configuration/observability)[\n\n## Cache Results\n\nStore successful patterns using our Caching Guide\n\n](/best-practices/caching)\n\n[Logging](/configuration/logging)[Evaluations](/configuration/evals)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:56:11.757Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#troubleshooting",
        "title": "Models - ü§ò Stagehand",
        "metaDescription": "Enhance Stagehand with LLMs for optimal performance, cost, and reliability",
        "markdown": "Models - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nModels\n\nOn this page\n\n-   [Why LLM Choice Matters](#why-llm-choice-matters)\n-   [Environment Variables Setup](#environment-variables-setup)\n-   [Supported Providers](#supported-providers)\n-   [Production-Ready Providers](#production-ready-providers)\n-   [Additional Providers](#additional-providers)\n-   [Basic Configuration](#basic-configuration)\n-   [Model Name Format](#model-name-format)\n-   [Quick Start Examples](#quick-start-examples)\n-   [Custom LLM Integration](#custom-llm-integration)\n-   [Vercel AI SDK](#vercel-ai-sdk)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n-   [Next Steps](#next-steps)\n\nConfiguration\n\n# Models\n\nCopy page\n\nEnhance Stagehand with LLMs for optimal performance, cost, and reliability\n\nCopy page\n\nStagehand uses Large Language Models (LLMs) to understand web pages, plan actions, and interact with complex interfaces. The choice of LLM significantly impacts your automation‚Äôs accuracy, speed, and cost.[\n\n## Model Evaluation\n\nFind more details about how to choose the right model on our Model Evaluation page.\n\n](https://www.stagehand.dev/evals)\n\n##\n\n[‚Äã\n\n](#why-llm-choice-matters)\n\nWhy LLM Choice Matters\n\n-   **Accuracy**: Better models provide more reliable element detection and action planning\n-   **Speed**: Faster models reduce automation latency\n-   **Cost**: Different providers offer varying pricing structures\n-   **Reliability**: Structured output support ensures consistent automation behavior\n\nFind more details about how to choose the right model on our [Model Evaluation](https://www.stagehand.dev/evals) page.\n\nSmall models on **Ollama** struggle with consistent structured outputs. While technically supported, we don‚Äôt recommend them for production Stagehand workflows.\n\n##\n\n[‚Äã\n\n](#environment-variables-setup)\n\nEnvironment Variables Setup\n\nSet up your API keys before configuring Stagehand:\n\n.env\n\nCopy\n\nAsk AI\n\n```\n# Choose one or more providers\nOPENAI_API_KEY=your_openai_key_here\nANTHROPIC_API_KEY=your_anthropic_key_here\nGOOGLE_API_KEY=your_google_key_here\nGROQ_API_KEY=your_groq_key_here\n```\n\n##\n\n[‚Äã\n\n](#supported-providers)\n\nSupported Providers\n\nStagehand supports major LLM providers with structured output capabilities:\n\n###\n\n[‚Äã\n\n](#production-ready-providers)\n\nProduction-Ready Providers\n\nProvider\n\nBest Models\n\nStrengths\n\nUse Case\n\n**OpenAI**\n\n`gpt-4.1`, `gpt-4.1-mini`\n\nHigh accuracy, reliable\n\nProduction, complex sites\n\n**Anthropic**\n\n`claude-3-7-sonnet-latest`\n\nExcellent reasoning\n\nComplex automation tasks\n\n**Google**\n\n`gemini-2.5-flash`, `gemini-2.5-pro`\n\nFast, cost-effective\n\nHigh-volume automation\n\n###\n\n[‚Äã\n\n](#additional-providers)\n\nAdditional Providers\n\nShow More Providers\n\n-   **Groq** - `llama-3.3-70b-versatile` (Good for speed critical applications)\n-   **xAI** - `grok-beta` (Good for complex reasoning)\n-   **Azure** - Enterprise OpenAI deployment\n-   **Cerebras** - High-speed inference\n-   **TogetherAI** - Open-source models\n-   **Mistral** - `mixtral-8x7b-32768` (European option)\n-   **DeepSeek** - Cost-effective alternative\n-   **Perplexity** - Real-time web data\n-   **Ollama** - Local deployment (limited accuracy)\n-   **Run any model included in AI SDK** - Find supported models in the [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) (Follow the guide [here](#vercel-ai-sdk) to get started.)\n\n##\n\n[‚Äã\n\n](#basic-configuration)\n\nBasic Configuration\n\n###\n\n[‚Äã\n\n](#model-name-format)\n\nModel Name Format\n\nStagehand uses the format `provider/model-name` for model specification. **Examples:**\n\n-   OpenAI: `openai/gpt-4.1`\n-   Anthropic: `anthropic/claude-3-7-sonnet-latest`\n-   Google: `google/gemini-2.5-flash` (Recommended)\n\n###\n\n[‚Äã\n\n](#quick-start-examples)\n\nQuick Start Examples\n\n-   Google (Recommended)\n-   OpenAI\n-   Anthropic\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  modelName: \"google/gemini-2.5-flash\",\n  modelClientOptions: {\n    apiKey: process.env.GOOGLE_API_KEY,\n  },\n});\n```\n\n##\n\n[‚Äã\n\n](#custom-llm-integration)\n\nCustom LLM Integration\n\nOnly [LiteLLM compatible providers](https://docs.litellm.ai/docs/providers) are available in Python. Some may require extra setup.\n\nIntegrate any LLM with Stagehand using custom clients. The only requirement is **structured output support** for consistent automation behavior.\n\n###\n\n[‚Äã\n\n](#vercel-ai-sdk)\n\nVercel AI SDK\n\nThe [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) is a popular library for interacting with LLMs. You can use any of the providers supported by the Vercel AI SDK to create a client for your model, **as long as they support structured outputs**. Vercel AI SDK supports providers for OpenAI, Anthropic, and Google, along with support for **Amazon Bedrock** and **Azure OpenAI**. For a full list, see the [Vercel AI SDK providers page](https://sdk.vercel.ai/providers/ai-sdk-providers). To get started, you‚Äôll need to install the `ai` package (version 4) and the provider you want to use (version 1 - both need to be compatible with LanguageModelV1). For example, to use Amazon Bedrock, you‚Äôll need to install the `@ai-sdk/amazon-bedrock` package. You‚Äôll also need to import the [Vercel AI SDK external client](https://github.com/browserbase/stagehand/blob/main/lib/llm/aisdk.ts) through Stagehand to create a client for your model.\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install ai@4 @ai-sdk/amazon-bedrock@1\n```\n\nThe `AISdkClient` is not yet available via the Stagehand npm package. For now, install Stagehand as a git repository to access the `AISdkClient` (this will be included in the npm package in an upcoming release).\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install @browserbasehq/stagehand@git+https://github.com/browserbase/stagehand.git\n```\n\nCopy\n\nAsk AI\n\n```\n// Install/import the provider you want to use.\n// For example, to use Azure OpenAI, import { createAzure } from '@ai-sdk/azure';\nimport { bedrock } from \"@ai-sdk/amazon-bedrock\";\n// @ts-ignore\nimport { AISdkClient } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  llmClient: new AISdkClient({\n\tmodel: bedrock(\"anthropic.claude-3-7-sonnet-20250219-v1:0\"),\n  }),\n});\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nModel doesn't support structured outputs\n\n**Error**: `Model does not support structured outputs`**Solution**: Use models that support function calling/structured outputs. The minimum requirements are:\n\n-   Model must support JSON/structured outputs\n-   Model must have strong reasoning capabilities\n-   Model must be able to handle complex instructions\n\nFor each provider, use their latest models that meet these requirements. Some examples:\n\n-   **OpenAI**: GPT-4 series or newer\n-   **Anthropic**: Claude 3 series or newer\n-   **Google**: Gemini 2 series or newer\n-   **Other providers**: Latest models with structured output support\n\n**Note**: Avoid base language models without structured output capabilities or fine-tuning for instruction following. When in doubt, check our [Model Evaluation](https://www.stagehand.dev/evals) page for up-to-date recommendations.\n\nAuthentication errors\n\n**Error**: `Invalid API key` or `Unauthorized`**Solution**:\n\n-   Verify your environment variables are set correctly\n-   Check API key permissions and quotas\n-   Ensure you‚Äôre using the correct API key for the provider\n-   For Anthropic, make sure you have access to the Claude API\n\nInconsistent automation results\n\n**Symptoms**: Actions work sometimes but fail other times**Causes & Solutions**:\n\n-   **Weak models**: Use more capable models - check our [Model Evaluation](https://www.stagehand.dev/evals) page for current recommendations\n-   **High temperature**: Set temperature to 0 for deterministic outputs\n-   **Complex pages**: Switch to models with higher accuracy scores on our [Model Evaluation](https://www.stagehand.dev/evals) page\n-   **Rate limits**: Implement retry logic with exponential backoff\n-   **Context limits**: Reduce page complexity or use models with larger context windows\n-   **Prompt clarity**: Ensure your automation instructions are clear and specific\n\nSlow performance\n\n**Issue**: Automation takes too long to respond**Solutions**:\n\n-   **Use fast models**: Choose models optimized for speed\n    -   Any model with < 1s response time\n    -   Models with ‚Äúfast‚Äù or ‚Äúflash‚Äù variants\n-   **Optimize settings**:\n    -   Use `verbose: 0` to minimize token usage\n    -   Set temperature to 0 for fastest processing\n    -   Keep max tokens as low as possible\n-   **Consider local deployment**: Local models can provide lowest latency\n-   **Batch operations**: Group multiple actions when possible\n\nHigh costs\n\n**Issue**: LLM usage costs are too high**Cost Optimization Strategies**:\n\n1.  **Switch to cost-effective models**:\n    -   Check our [Model Evaluation](https://www.stagehand.dev/evals) page for current cost-performance benchmarks\n    -   Choose models with lower cost per token that still meet accuracy requirements\n    -   Consider models optimized for speed to reduce total runtime costs\n2.  **Optimize token usage**:\n    -   Set `verbose: 0` to reduce logging overhead\n    -   Use concise prompts and limit response length\n3.  **Smart model selection**: Start with cheaper models, fallback to premium ones only when needed\n4.  **Cache responses**: Implement LLM response caching for repeated automation patterns\n5.  **Monitor usage**: Set up billing alerts and track costs per automation run\n6.  **Batch processing**: Process multiple similar tasks together\n\n###\n\n[‚Äã\n\n](#next-steps)\n\nNext Steps\n\n[\n\n## Choose Models\n\nSee our Model Evaluation page\n\n](https://www.stagehand.dev/evals)[\n\n## Test Models\n\nEvaluate performance on your specific use cases in our Model Evaluation guide\n\n](/configuration/evals)[\n\n## Track Costs\n\nMonitor token usage and set alerts using our Observability tools\n\n](/configuration/observability)[\n\n## Cache Results\n\nStore successful patterns using our Caching Guide\n\n](/best-practices/caching)\n\n[Logging](/configuration/logging)[Evaluations](/configuration/evals)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:56:11.680Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#common-issues",
        "title": "Models - ü§ò Stagehand",
        "metaDescription": "Enhance Stagehand with LLMs for optimal performance, cost, and reliability",
        "markdown": "Models - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nModels\n\nOn this page\n\n-   [Why LLM Choice Matters](#why-llm-choice-matters)\n-   [Environment Variables Setup](#environment-variables-setup)\n-   [Supported Providers](#supported-providers)\n-   [Production-Ready Providers](#production-ready-providers)\n-   [Additional Providers](#additional-providers)\n-   [Basic Configuration](#basic-configuration)\n-   [Model Name Format](#model-name-format)\n-   [Quick Start Examples](#quick-start-examples)\n-   [Custom LLM Integration](#custom-llm-integration)\n-   [Vercel AI SDK](#vercel-ai-sdk)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n-   [Next Steps](#next-steps)\n\nConfiguration\n\n# Models\n\nCopy page\n\nEnhance Stagehand with LLMs for optimal performance, cost, and reliability\n\nCopy page\n\nStagehand uses Large Language Models (LLMs) to understand web pages, plan actions, and interact with complex interfaces. The choice of LLM significantly impacts your automation‚Äôs accuracy, speed, and cost.[\n\n## Model Evaluation\n\nFind more details about how to choose the right model on our Model Evaluation page.\n\n](https://www.stagehand.dev/evals)\n\n##\n\n[‚Äã\n\n](#why-llm-choice-matters)\n\nWhy LLM Choice Matters\n\n-   **Accuracy**: Better models provide more reliable element detection and action planning\n-   **Speed**: Faster models reduce automation latency\n-   **Cost**: Different providers offer varying pricing structures\n-   **Reliability**: Structured output support ensures consistent automation behavior\n\nFind more details about how to choose the right model on our [Model Evaluation](https://www.stagehand.dev/evals) page.\n\nSmall models on **Ollama** struggle with consistent structured outputs. While technically supported, we don‚Äôt recommend them for production Stagehand workflows.\n\n##\n\n[‚Äã\n\n](#environment-variables-setup)\n\nEnvironment Variables Setup\n\nSet up your API keys before configuring Stagehand:\n\n.env\n\nCopy\n\nAsk AI\n\n```\n# Choose one or more providers\nOPENAI_API_KEY=your_openai_key_here\nANTHROPIC_API_KEY=your_anthropic_key_here\nGOOGLE_API_KEY=your_google_key_here\nGROQ_API_KEY=your_groq_key_here\n```\n\n##\n\n[‚Äã\n\n](#supported-providers)\n\nSupported Providers\n\nStagehand supports major LLM providers with structured output capabilities:\n\n###\n\n[‚Äã\n\n](#production-ready-providers)\n\nProduction-Ready Providers\n\nProvider\n\nBest Models\n\nStrengths\n\nUse Case\n\n**OpenAI**\n\n`gpt-4.1`, `gpt-4.1-mini`\n\nHigh accuracy, reliable\n\nProduction, complex sites\n\n**Anthropic**\n\n`claude-3-7-sonnet-latest`\n\nExcellent reasoning\n\nComplex automation tasks\n\n**Google**\n\n`gemini-2.5-flash`, `gemini-2.5-pro`\n\nFast, cost-effective\n\nHigh-volume automation\n\n###\n\n[‚Äã\n\n](#additional-providers)\n\nAdditional Providers\n\nShow More Providers\n\n-   **Groq** - `llama-3.3-70b-versatile` (Good for speed critical applications)\n-   **xAI** - `grok-beta` (Good for complex reasoning)\n-   **Azure** - Enterprise OpenAI deployment\n-   **Cerebras** - High-speed inference\n-   **TogetherAI** - Open-source models\n-   **Mistral** - `mixtral-8x7b-32768` (European option)\n-   **DeepSeek** - Cost-effective alternative\n-   **Perplexity** - Real-time web data\n-   **Ollama** - Local deployment (limited accuracy)\n-   **Run any model included in AI SDK** - Find supported models in the [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) (Follow the guide [here](#vercel-ai-sdk) to get started.)\n\n##\n\n[‚Äã\n\n](#basic-configuration)\n\nBasic Configuration\n\n###\n\n[‚Äã\n\n](#model-name-format)\n\nModel Name Format\n\nStagehand uses the format `provider/model-name` for model specification. **Examples:**\n\n-   OpenAI: `openai/gpt-4.1`\n-   Anthropic: `anthropic/claude-3-7-sonnet-latest`\n-   Google: `google/gemini-2.5-flash` (Recommended)\n\n###\n\n[‚Äã\n\n](#quick-start-examples)\n\nQuick Start Examples\n\n-   Google (Recommended)\n-   OpenAI\n-   Anthropic\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  modelName: \"google/gemini-2.5-flash\",\n  modelClientOptions: {\n    apiKey: process.env.GOOGLE_API_KEY,\n  },\n});\n```\n\n##\n\n[‚Äã\n\n](#custom-llm-integration)\n\nCustom LLM Integration\n\nOnly [LiteLLM compatible providers](https://docs.litellm.ai/docs/providers) are available in Python. Some may require extra setup.\n\nIntegrate any LLM with Stagehand using custom clients. The only requirement is **structured output support** for consistent automation behavior.\n\n###\n\n[‚Äã\n\n](#vercel-ai-sdk)\n\nVercel AI SDK\n\nThe [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) is a popular library for interacting with LLMs. You can use any of the providers supported by the Vercel AI SDK to create a client for your model, **as long as they support structured outputs**. Vercel AI SDK supports providers for OpenAI, Anthropic, and Google, along with support for **Amazon Bedrock** and **Azure OpenAI**. For a full list, see the [Vercel AI SDK providers page](https://sdk.vercel.ai/providers/ai-sdk-providers). To get started, you‚Äôll need to install the `ai` package (version 4) and the provider you want to use (version 1 - both need to be compatible with LanguageModelV1). For example, to use Amazon Bedrock, you‚Äôll need to install the `@ai-sdk/amazon-bedrock` package. You‚Äôll also need to import the [Vercel AI SDK external client](https://github.com/browserbase/stagehand/blob/main/lib/llm/aisdk.ts) through Stagehand to create a client for your model.\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install ai@4 @ai-sdk/amazon-bedrock@1\n```\n\nThe `AISdkClient` is not yet available via the Stagehand npm package. For now, install Stagehand as a git repository to access the `AISdkClient` (this will be included in the npm package in an upcoming release).\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install @browserbasehq/stagehand@git+https://github.com/browserbase/stagehand.git\n```\n\nCopy\n\nAsk AI\n\n```\n// Install/import the provider you want to use.\n// For example, to use Azure OpenAI, import { createAzure } from '@ai-sdk/azure';\nimport { bedrock } from \"@ai-sdk/amazon-bedrock\";\n// @ts-ignore\nimport { AISdkClient } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  llmClient: new AISdkClient({\n\tmodel: bedrock(\"anthropic.claude-3-7-sonnet-20250219-v1:0\"),\n  }),\n});\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nModel doesn't support structured outputs\n\n**Error**: `Model does not support structured outputs`**Solution**: Use models that support function calling/structured outputs. The minimum requirements are:\n\n-   Model must support JSON/structured outputs\n-   Model must have strong reasoning capabilities\n-   Model must be able to handle complex instructions\n\nFor each provider, use their latest models that meet these requirements. Some examples:\n\n-   **OpenAI**: GPT-4 series or newer\n-   **Anthropic**: Claude 3 series or newer\n-   **Google**: Gemini 2 series or newer\n-   **Other providers**: Latest models with structured output support\n\n**Note**: Avoid base language models without structured output capabilities or fine-tuning for instruction following. When in doubt, check our [Model Evaluation](https://www.stagehand.dev/evals) page for up-to-date recommendations.\n\nAuthentication errors\n\n**Error**: `Invalid API key` or `Unauthorized`**Solution**:\n\n-   Verify your environment variables are set correctly\n-   Check API key permissions and quotas\n-   Ensure you‚Äôre using the correct API key for the provider\n-   For Anthropic, make sure you have access to the Claude API\n\nInconsistent automation results\n\n**Symptoms**: Actions work sometimes but fail other times**Causes & Solutions**:\n\n-   **Weak models**: Use more capable models - check our [Model Evaluation](https://www.stagehand.dev/evals) page for current recommendations\n-   **High temperature**: Set temperature to 0 for deterministic outputs\n-   **Complex pages**: Switch to models with higher accuracy scores on our [Model Evaluation](https://www.stagehand.dev/evals) page\n-   **Rate limits**: Implement retry logic with exponential backoff\n-   **Context limits**: Reduce page complexity or use models with larger context windows\n-   **Prompt clarity**: Ensure your automation instructions are clear and specific\n\nSlow performance\n\n**Issue**: Automation takes too long to respond**Solutions**:\n\n-   **Use fast models**: Choose models optimized for speed\n    -   Any model with < 1s response time\n    -   Models with ‚Äúfast‚Äù or ‚Äúflash‚Äù variants\n-   **Optimize settings**:\n    -   Use `verbose: 0` to minimize token usage\n    -   Set temperature to 0 for fastest processing\n    -   Keep max tokens as low as possible\n-   **Consider local deployment**: Local models can provide lowest latency\n-   **Batch operations**: Group multiple actions when possible\n\nHigh costs\n\n**Issue**: LLM usage costs are too high**Cost Optimization Strategies**:\n\n1.  **Switch to cost-effective models**:\n    -   Check our [Model Evaluation](https://www.stagehand.dev/evals) page for current cost-performance benchmarks\n    -   Choose models with lower cost per token that still meet accuracy requirements\n    -   Consider models optimized for speed to reduce total runtime costs\n2.  **Optimize token usage**:\n    -   Set `verbose: 0` to reduce logging overhead\n    -   Use concise prompts and limit response length\n3.  **Smart model selection**: Start with cheaper models, fallback to premium ones only when needed\n4.  **Cache responses**: Implement LLM response caching for repeated automation patterns\n5.  **Monitor usage**: Set up billing alerts and track costs per automation run\n6.  **Batch processing**: Process multiple similar tasks together\n\n###\n\n[‚Äã\n\n](#next-steps)\n\nNext Steps\n\n[\n\n## Choose Models\n\nSee our Model Evaluation page\n\n](https://www.stagehand.dev/evals)[\n\n## Test Models\n\nEvaluate performance on your specific use cases in our Model Evaluation guide\n\n](/configuration/evals)[\n\n## Track Costs\n\nMonitor token usage and set alerts using our Observability tools\n\n](/configuration/observability)[\n\n## Cache Results\n\nStore successful patterns using our Caching Guide\n\n](/best-practices/caching)\n\n[Logging](/configuration/logging)[Evaluations](/configuration/evals)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:56:11.681Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#next-steps",
        "title": "Models - ü§ò Stagehand",
        "metaDescription": "Enhance Stagehand with LLMs for optimal performance, cost, and reliability",
        "markdown": "Models - ü§ò Stagehand\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Changelog](https://github.com/browserbase/stagehand/releases)\n-   [Stagehand by Browserbase](https://docs.stagehand.dev/first-steps/introduction)\n\n##### First Steps\n\n-   [\n\n    Introduction\n\n\n\n    ](/first-steps/introduction)\n-   [\n\n    Quickstart\n\n\n\n    ](/first-steps/quickstart)\n-   [\n\n    Installation\n\n\n\n    ](/first-steps/installation)\n-   [\n\n    AI Rules\n\n\n\n    ](/first-steps/ai-rules)\n\n##### The Basics\n\n-   [\n\n    Act\n\n\n\n    ](/basics/act)\n-   [\n\n    Extract\n\n\n\n    ](/basics/extract)\n-   [\n\n    Observe\n\n\n\n    ](/basics/observe)\n-   [\n\n    Agent\n\n\n\n    ](/basics/agent)\n\n##### Configuration\n\n-   [\n\n    Browser\n\n\n\n    ](/configuration/browser)\n-   [\n\n    Observability\n\n\n\n    ](/configuration/observability)\n-   [\n\n    Logging\n\n\n\n    ](/configuration/logging)\n-   [\n\n    Models\n\n\n\n    ](/configuration/models)\n-   [\n\n    Evaluations\n\n\n\n    ](/configuration/evals)\n\n##### Best Practices\n\n-   [\n\n    Caching Actions\n\n\n\n    ](/best-practices/caching)\n-   [\n\n    Cost Optimization\n\n\n\n    ](/best-practices/cost-optimization)\n-   [\n\n    Using Multiple Tabs\n\n\n\n    ](/best-practices/using-multiple-tabs)\n-   [\n\n    Working with iframes\n\n\n\n    ](/best-practices/working-with-iframes)\n-   [\n\n    Deploying Stagehand\n\n\n\n    ](/best-practices/deployments)\n-   [\n\n    Computer Use Agents\n\n\n\n    ](/best-practices/computer-use)\n-   [\n\n    Contribute to Stagehand\n\n\n\n    ](/best-practices/contributing)\n-   [\n\n    Playwright Interoperability\n\n\n\n    ](/best-practices/playwright-interop)\n-   [\n\n    Build a web browsing agent\n\n\n\n    ](/best-practices/build-agent)\n-   [\n\n    Agent Fallbacks\n\n\n\n    ](/best-practices/agent-fallbacks)\n-   [\n\n    Prompting Best Practices\n\n\n\n    ](/best-practices/prompting-best-practices)\n-   [\n\n    MCP Integrations\n\n\n\n    ](/best-practices/mcp-integrations)\n-   [\n\n    Speed Optimization\n\n\n\n    ](/best-practices/speed-optimization)\n\n##### Integrations\n\n-   MCP Server\n\n-   CrewAI\n\n-   Langchain\n\n-   Next.js + Vercel\n\n\n##### Reference\n\n-   [\n\n    act()\n\n\n\n    ](/references/act)\n-   [\n\n    extract()\n\n\n\n    ](/references/extract)\n-   [\n\n    observe()\n\n\n\n    ](/references/observe)\n-   [\n\n    agent()\n\n\n\n    ](/references/agent)\n\n-   [\n\n    Support\n\n    ](mailto:support@browserbase.com)\n\n[ü§ò Stagehand home page![light logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/light_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=cb759f50fefd9800bb51457db4faa4b8)![dark logo](https://mintcdn.com/stagehand/W3kYIUy5sYF-nkqt/logo/dark_logo.png?fit=max&auto=format&n=W3kYIUy5sYF-nkqt&q=85&s=87dc397ae90550780e9fc803af66f015)](https://stagehand.dev)\n\nSearch...\n\nCtrl K\n\n-   [Support](mailto:support@browserbase.com)\n\nSearch...\n\nNavigation\n\nConfiguration\n\nModels\n\nOn this page\n\n-   [Why LLM Choice Matters](#why-llm-choice-matters)\n-   [Environment Variables Setup](#environment-variables-setup)\n-   [Supported Providers](#supported-providers)\n-   [Production-Ready Providers](#production-ready-providers)\n-   [Additional Providers](#additional-providers)\n-   [Basic Configuration](#basic-configuration)\n-   [Model Name Format](#model-name-format)\n-   [Quick Start Examples](#quick-start-examples)\n-   [Custom LLM Integration](#custom-llm-integration)\n-   [Vercel AI SDK](#vercel-ai-sdk)\n-   [Troubleshooting](#troubleshooting)\n-   [Common Issues](#common-issues)\n-   [Next Steps](#next-steps)\n\nConfiguration\n\n# Models\n\nCopy page\n\nEnhance Stagehand with LLMs for optimal performance, cost, and reliability\n\nCopy page\n\nStagehand uses Large Language Models (LLMs) to understand web pages, plan actions, and interact with complex interfaces. The choice of LLM significantly impacts your automation‚Äôs accuracy, speed, and cost.[\n\n## Model Evaluation\n\nFind more details about how to choose the right model on our Model Evaluation page.\n\n](https://www.stagehand.dev/evals)\n\n##\n\n[‚Äã\n\n](#why-llm-choice-matters)\n\nWhy LLM Choice Matters\n\n-   **Accuracy**: Better models provide more reliable element detection and action planning\n-   **Speed**: Faster models reduce automation latency\n-   **Cost**: Different providers offer varying pricing structures\n-   **Reliability**: Structured output support ensures consistent automation behavior\n\nFind more details about how to choose the right model on our [Model Evaluation](https://www.stagehand.dev/evals) page.\n\nSmall models on **Ollama** struggle with consistent structured outputs. While technically supported, we don‚Äôt recommend them for production Stagehand workflows.\n\n##\n\n[‚Äã\n\n](#environment-variables-setup)\n\nEnvironment Variables Setup\n\nSet up your API keys before configuring Stagehand:\n\n.env\n\nCopy\n\nAsk AI\n\n```\n# Choose one or more providers\nOPENAI_API_KEY=your_openai_key_here\nANTHROPIC_API_KEY=your_anthropic_key_here\nGOOGLE_API_KEY=your_google_key_here\nGROQ_API_KEY=your_groq_key_here\n```\n\n##\n\n[‚Äã\n\n](#supported-providers)\n\nSupported Providers\n\nStagehand supports major LLM providers with structured output capabilities:\n\n###\n\n[‚Äã\n\n](#production-ready-providers)\n\nProduction-Ready Providers\n\nProvider\n\nBest Models\n\nStrengths\n\nUse Case\n\n**OpenAI**\n\n`gpt-4.1`, `gpt-4.1-mini`\n\nHigh accuracy, reliable\n\nProduction, complex sites\n\n**Anthropic**\n\n`claude-3-7-sonnet-latest`\n\nExcellent reasoning\n\nComplex automation tasks\n\n**Google**\n\n`gemini-2.5-flash`, `gemini-2.5-pro`\n\nFast, cost-effective\n\nHigh-volume automation\n\n###\n\n[‚Äã\n\n](#additional-providers)\n\nAdditional Providers\n\nShow More Providers\n\n-   **Groq** - `llama-3.3-70b-versatile` (Good for speed critical applications)\n-   **xAI** - `grok-beta` (Good for complex reasoning)\n-   **Azure** - Enterprise OpenAI deployment\n-   **Cerebras** - High-speed inference\n-   **TogetherAI** - Open-source models\n-   **Mistral** - `mixtral-8x7b-32768` (European option)\n-   **DeepSeek** - Cost-effective alternative\n-   **Perplexity** - Real-time web data\n-   **Ollama** - Local deployment (limited accuracy)\n-   **Run any model included in AI SDK** - Find supported models in the [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) (Follow the guide [here](#vercel-ai-sdk) to get started.)\n\n##\n\n[‚Äã\n\n](#basic-configuration)\n\nBasic Configuration\n\n###\n\n[‚Äã\n\n](#model-name-format)\n\nModel Name Format\n\nStagehand uses the format `provider/model-name` for model specification. **Examples:**\n\n-   OpenAI: `openai/gpt-4.1`\n-   Anthropic: `anthropic/claude-3-7-sonnet-latest`\n-   Google: `google/gemini-2.5-flash` (Recommended)\n\n###\n\n[‚Äã\n\n](#quick-start-examples)\n\nQuick Start Examples\n\n-   Google (Recommended)\n-   OpenAI\n-   Anthropic\n\nTypeScript\n\nPython\n\nCopy\n\nAsk AI\n\n```\nimport { Stagehand } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  modelName: \"google/gemini-2.5-flash\",\n  modelClientOptions: {\n    apiKey: process.env.GOOGLE_API_KEY,\n  },\n});\n```\n\n##\n\n[‚Äã\n\n](#custom-llm-integration)\n\nCustom LLM Integration\n\nOnly [LiteLLM compatible providers](https://docs.litellm.ai/docs/providers) are available in Python. Some may require extra setup.\n\nIntegrate any LLM with Stagehand using custom clients. The only requirement is **structured output support** for consistent automation behavior.\n\n###\n\n[‚Äã\n\n](#vercel-ai-sdk)\n\nVercel AI SDK\n\nThe [Vercel AI SDK](https://sdk.vercel.ai/providers/ai-sdk-providers) is a popular library for interacting with LLMs. You can use any of the providers supported by the Vercel AI SDK to create a client for your model, **as long as they support structured outputs**. Vercel AI SDK supports providers for OpenAI, Anthropic, and Google, along with support for **Amazon Bedrock** and **Azure OpenAI**. For a full list, see the [Vercel AI SDK providers page](https://sdk.vercel.ai/providers/ai-sdk-providers). To get started, you‚Äôll need to install the `ai` package (version 4) and the provider you want to use (version 1 - both need to be compatible with LanguageModelV1). For example, to use Amazon Bedrock, you‚Äôll need to install the `@ai-sdk/amazon-bedrock` package. You‚Äôll also need to import the [Vercel AI SDK external client](https://github.com/browserbase/stagehand/blob/main/lib/llm/aisdk.ts) through Stagehand to create a client for your model.\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install ai@4 @ai-sdk/amazon-bedrock@1\n```\n\nThe `AISdkClient` is not yet available via the Stagehand npm package. For now, install Stagehand as a git repository to access the `AISdkClient` (this will be included in the npm package in an upcoming release).\n\n-   npm\n-   pnpm\n-   yarn\n\nCopy\n\nAsk AI\n\n```\nnpm install @browserbasehq/stagehand@git+https://github.com/browserbase/stagehand.git\n```\n\nCopy\n\nAsk AI\n\n```\n// Install/import the provider you want to use.\n// For example, to use Azure OpenAI, import { createAzure } from '@ai-sdk/azure';\nimport { bedrock } from \"@ai-sdk/amazon-bedrock\";\n// @ts-ignore\nimport { AISdkClient } from \"@browserbasehq/stagehand\";\n\nconst stagehand = new Stagehand({\n  llmClient: new AISdkClient({\n\tmodel: bedrock(\"anthropic.claude-3-7-sonnet-20250219-v1:0\"),\n  }),\n});\n```\n\n##\n\n[‚Äã\n\n](#troubleshooting)\n\nTroubleshooting\n\n###\n\n[‚Äã\n\n](#common-issues)\n\nCommon Issues\n\nModel doesn't support structured outputs\n\n**Error**: `Model does not support structured outputs`**Solution**: Use models that support function calling/structured outputs. The minimum requirements are:\n\n-   Model must support JSON/structured outputs\n-   Model must have strong reasoning capabilities\n-   Model must be able to handle complex instructions\n\nFor each provider, use their latest models that meet these requirements. Some examples:\n\n-   **OpenAI**: GPT-4 series or newer\n-   **Anthropic**: Claude 3 series or newer\n-   **Google**: Gemini 2 series or newer\n-   **Other providers**: Latest models with structured output support\n\n**Note**: Avoid base language models without structured output capabilities or fine-tuning for instruction following. When in doubt, check our [Model Evaluation](https://www.stagehand.dev/evals) page for up-to-date recommendations.\n\nAuthentication errors\n\n**Error**: `Invalid API key` or `Unauthorized`**Solution**:\n\n-   Verify your environment variables are set correctly\n-   Check API key permissions and quotas\n-   Ensure you‚Äôre using the correct API key for the provider\n-   For Anthropic, make sure you have access to the Claude API\n\nInconsistent automation results\n\n**Symptoms**: Actions work sometimes but fail other times**Causes & Solutions**:\n\n-   **Weak models**: Use more capable models - check our [Model Evaluation](https://www.stagehand.dev/evals) page for current recommendations\n-   **High temperature**: Set temperature to 0 for deterministic outputs\n-   **Complex pages**: Switch to models with higher accuracy scores on our [Model Evaluation](https://www.stagehand.dev/evals) page\n-   **Rate limits**: Implement retry logic with exponential backoff\n-   **Context limits**: Reduce page complexity or use models with larger context windows\n-   **Prompt clarity**: Ensure your automation instructions are clear and specific\n\nSlow performance\n\n**Issue**: Automation takes too long to respond**Solutions**:\n\n-   **Use fast models**: Choose models optimized for speed\n    -   Any model with < 1s response time\n    -   Models with ‚Äúfast‚Äù or ‚Äúflash‚Äù variants\n-   **Optimize settings**:\n    -   Use `verbose: 0` to minimize token usage\n    -   Set temperature to 0 for fastest processing\n    -   Keep max tokens as low as possible\n-   **Consider local deployment**: Local models can provide lowest latency\n-   **Batch operations**: Group multiple actions when possible\n\nHigh costs\n\n**Issue**: LLM usage costs are too high**Cost Optimization Strategies**:\n\n1.  **Switch to cost-effective models**:\n    -   Check our [Model Evaluation](https://www.stagehand.dev/evals) page for current cost-performance benchmarks\n    -   Choose models with lower cost per token that still meet accuracy requirements\n    -   Consider models optimized for speed to reduce total runtime costs\n2.  **Optimize token usage**:\n    -   Set `verbose: 0` to reduce logging overhead\n    -   Use concise prompts and limit response length\n3.  **Smart model selection**: Start with cheaper models, fallback to premium ones only when needed\n4.  **Cache responses**: Implement LLM response caching for repeated automation patterns\n5.  **Monitor usage**: Set up billing alerts and track costs per automation run\n6.  **Batch processing**: Process multiple similar tasks together\n\n###\n\n[‚Äã\n\n](#next-steps)\n\nNext Steps\n\n[\n\n## Choose Models\n\nSee our Model Evaluation page\n\n](https://www.stagehand.dev/evals)[\n\n## Test Models\n\nEvaluate performance on your specific use cases in our Model Evaluation guide\n\n](/configuration/evals)[\n\n## Track Costs\n\nMonitor token usage and set alerts using our Observability tools\n\n](/configuration/observability)[\n\n## Cache Results\n\nStore successful patterns using our Caching Guide\n\n](/best-practices/caching)\n\n[Logging](/configuration/logging)[Evaluations](/configuration/evals)\n\n[x](https://x.com/stagehanddev)[github](https://github.com/browserbase/stagehand)[linkedin](https://linkedin.com/company/browserbasehq)[slack](https://stagehand.dev/slack)\n\n[Powered by Mintlify](https://mintlify.com?utm_campaign=poweredBy&utm_medium=referral&utm_source=stagehand)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.",
        "timestamp": "2025-09-28T18:56:11.680Z",
        "success": true
      }
    ],
    "summary": {
      "total": 45,
      "successful": 38,
      "failed": 7,
      "completedAt": "2025-09-28T18:56:11.757Z"
    }
  },
  "summaries": {
    "summaries": [
      {
        "url": "https://docs.stagehand.dev/",
        "title": "Introducing Stagehand - ü§ò Stagehand",
        "summary": "Of course. As a technical documentation expert, here is a comprehensive summary and analysis of the provided documentation page for Stagehand.\n\n***\n\n### Summary of \"Introducing Stagehand\"\n\nStagehand is a modern browser automation framework designed for developers who need to create reliable and maintainable web automations. The documentation introduces it as a solution that bridges the gap between traditional, brittle automation scripts (like those written with Playwright or Puppeteer) and unpredictable, fully autonomous AI agents. The core value proposition is combining the precision of code with the flexibility of AI-driven natural language commands, giving developers precise control over the level of automation. The target audience is developers building production-grade browser automations and AI agents that require dependable web interaction.\n\nThe framework is built around four primary primitives that allow for a composable approach to automation: `Act` (to execute actions using natural language), `Extract` (to pull structured data using schemas), `Observe` (to discover available actions on a page), and `Agent` (to automate entire workflows autonomously). The documentation provides a key code example in both TypeScript and Python to illustrate these concepts in practice:\n\n```typescript\n// Act - Execute natural language actions\nawait page.act(\"click the login button\");\n\n// Extract - Pull structured data\nconst { price } = await page.extract({\n  schema: z.object({ price: z.number() })\n});\n\n// Observe - Discover available actions\nconst actions = await page.observe(\"find submit buttons\");\n\n// Agent - Automate entire workflows\nconst agent = stagehand.agent(/* ...config */);\nawait agent.execute(\"apply for this job\");\n```\n\nStagehand is built for modern development environments, offering first-class SDKs for both TypeScript and Python. A significant feature is its full compatibility with Playwright, ensuring that developers are never locked into Stagehand's abstractions and can fall back to familiar Playwright APIs when needed. It works with all Chromium-based browsers and is maintained by Browserbase, which is also recommended as the preferred cloud infrastructure for running Stagehand automations. The page concludes by directing new users to a Quickstart guide, examples, and community support channels to facilitate a fast onboarding process.",
        "wordCount": 724,
        "summaryWordCount": 334,
        "timestamp": "2025-09-28T18:56:28.942Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/changelog",
        "title": "Introducing Stagehand - ü§ò Stagehand",
        "summary": "Of course. As a technical documentation expert, here is a comprehensive summary and analysis of the provided documentation page.\n\n***\n\n### Summary of \"Introducing Stagehand\"\n\nThis documentation page introduces Stagehand, a modern browser automation framework designed for developers. The core purpose of Stagehand is to solve the fundamental problems of web automation by combining the flexibility of AI-powered natural language with the precision and reliability of traditional code. It positions itself as a solution that is neither as brittle as selector-based frameworks like Playwright, which break with UI changes, nor as unpredictable as fully autonomous AI agents. The target audience is developers who are building production-grade browser automations, web scrapers, or AI agents that require dependable web interaction.\n\nStagehand is built around four primary primitives that allow developers to choose their desired level of AI control: **Act** (to execute actions using natural language, e.g., `await page.act(\"click the login button\");`), **Extract** (to pull structured data using a defined schema), **Observe** (to discover available actions on a page), and **Agent** (to automate entire workflows autonomously). The framework is designed for modern development with first-class SDKs for both TypeScript and Python, ensuring type safety and IDE support.\n\nKey dependencies and integrations include full compatibility with Playwright, allowing developers to use its APIs alongside Stagehand without being locked in. It works with all Chromium-based browsers and is maintained by Browserbase, which is also the recommended cloud browser infrastructure for deploying Stagehand automations. The page encourages users to get started quickly by following the quickstart guide, exploring examples, or using the companion AI tool, Director.ai, to generate scripts.",
        "wordCount": 724,
        "summaryWordCount": 263,
        "timestamp": "2025-09-28T18:56:28.838Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/introduction",
        "title": "Introducing Stagehand - ü§ò Stagehand",
        "summary": "Here is a summary and analysis of the provided documentation page for Stagehand.\n\n***\n\n### **Summary of \"Introducing Stagehand\"**\n\nStagehand is a modern browser automation framework designed for developers seeking to create reliable and maintainable web automations. The documentation introduces it as a solution to the common dilemma between traditional, brittle automation scripts (like those in Playwright) that break with UI changes, and purely AI-driven agents that can be unpredictable and difficult to debug. Stagehand's core philosophy is to provide the \"best of both worlds\" by combining the flexibility of natural language commands with the precision and control of deterministic code, making web automation more adaptable and robust.\n\nThe framework is built",
        "wordCount": 724,
        "summaryWordCount": 112,
        "timestamp": "2025-09-28T18:56:48.988Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/quickstart",
        "title": "Introducing Stagehand - ü§ò Stagehand",
        "summary": "Of course. Here is a professional summary and analysis of the provided documentation page.\n\n***\n\n### Summary of \"Introducing Stagehand\"\n\nStagehand is a modern browser automation framework designed to provide a reliable and maintainable way to control web browsers. The documentation introduces it as a solution to the common pitfalls of web automation, positioning it as a middle ground between traditional, brittle scripting tools like Playwright and unpredictable, fully autonomous AI web agents. The core value proposition of Stagehand is its hybrid approach, which combines the flexibility of AI and natural language with the precision and control of deterministic code. This allows developers to choose the exact level of AI intervention needed for their tasks, resulting in automations that are both robust and adaptable to UI changes.\n\nThe framework is built around four primary primitives, which are demonstrated in a clear code example for both TypeScript and Python:\n*   **`Act`**: Executes actions described in natural language (e.g., `await page.act(\"click the login button\");`).\n*   **`Extract`**: Pulls structured data from a page based on a defined schema.\n*   **`Observe`**: Discovers and lists available actions or elements on the current page.\n*   **`Agent`**: Automates entire multi-step workflows autonomously based on a high-level goal.\n\nThis documentation is targeted at developers building production-level browser automations or AI agents that require dependable web access. Key technical features highlighted include full compatibility with the Playwright API, allowing developers to use familiar tools alongside Stagehand's abstractions. It offers first-class SDKs for TypeScript and Python and is compatible with all Chromium-based browsers. The page also notes that Stagehand is created by the team at Browser",
        "wordCount": 724,
        "summaryWordCount": 266,
        "timestamp": "2025-09-28T18:56:49.154Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/ai-rules",
        "title": "Page Not Found",
        "summary": "**Summary:**\n\nThis documentation page is a \"404 Page Not Found\" error, indicating that the content for the requested URL, `https://docs.stagehand.dev/ai-rules`, does not exist at that specific location. The primary purpose of this page is to inform the user of the broken link while providing comprehensive navigational aids to help them find the correct information and explore the Stagehand documentation. The target audience is developers or technical users who were attempting to access information about a feature likely named \"AI Rules\" and encountered an incorrect URL.\n\nWhile the page itself contains no substantive technical content, code examples, or configuration details, its key feature is the set of recovery and discovery tools it offers. It provides three specific, algorithmically-suggested links to potentially relevant topics: \"AI Rules\" (pointing to the likely correct location at `/first-steps/ai-rules`), \"Models,\" and \"Browserbase MCP Server.\" This strongly suggests that the concept of \"AI Rules\" is a foundational topic within Stagehand, closely related to model configuration and server integrations.\n\nFurthermore, the page includes the complete site navigation sidebar, which acts as a full table of contents for the Stagehand documentation. This sidebar organizes the documentation into logical sections such as \"First Steps,\" \"The Basics,\" \"Configuration,\" \"Best Practices,\" \"Integrations,\" and a \"Reference\" guide for core functions like `act()`, `extract()`, `observe()`, and `agent()`. This structure allows the user to understand the overall architecture of the Stagehand library and easily navigate to any other topic of interest.",
        "wordCount": 239,
        "summaryWordCount": 235,
        "timestamp": "2025-09-28T18:57:09.376Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/the-basics/extract",
        "title": "Page Not Found",
        "summary": "Based on my analysis as a technical documentation expert, here is a summary of the provided page.\n\n***\n\n### **Summary**\n\nThis documentation page is a \"404 Page Not Found\" error, indicating that the content for the URL `.../the-basics/extract` is missing, has been moved, or the link is broken. The primary purpose of this page is to inform users, likely developers interested in the Stagehand framework, that their requested resource is unavailable. Instead of technical content, the page provides navigational aids to help users reorient themselves and find relevant information within the Stagehand documentation.\n\nWhile the page itself contains no specific details, code examples, or configurations related to an `extract` feature, its structure provides significant context about the Stagehand product. The comprehensive navigation sidebar outlines the entire documentation hierarchy, revealing that `extract` is intended to be a core concept under \"The Basics,\" alongside `act`, `observe`, and `agent`. These functions are also listed in the \"Reference\" section, confirming their importance to the framework. The sidebar also details other key areas such as configuration, best practices for cost and performance optimization, and integrations with tools like CrewAI and Langchain.\n\nThe page serves its function as a user-friendly error message by not only displaying the 404 status but also by offering alternative navigation paths. It includes a persistent search bar and suggests potentially related topics, such as \"AI Rules,\" \"Models,\" and the \"Browserbase MCP Server,\" to guide the user toward other useful content. In essence, the page's value lies not in its direct content but in the structural map it provides to the overall Stagehand documentation, allowing a lost user to discover the breadth of the tool's capabilities and find alternative information.",
        "wordCount": 239,
        "summaryWordCount": 278,
        "timestamp": "2025-09-28T18:57:10.783Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/the-basics/observe",
        "title": "Page Not Found",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 45.055086861s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"45s\"}]",
        "wordCount": 239,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:57:11.903Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 45.055086861s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"45s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/browser",
        "title": "Browser - ü§ò Stagehand",
        "summary": "Of course. As a technical documentation expert, here is a comprehensive summary and analysis of the provided documentation page.\n\n***\n\n### Summary of Stagehand Browser Configuration\n\nThis documentation page details how to configure the browser environment for Stagehand, a tool designed for web automation. The primary purpose is to guide developers in setting up their execution environment, whether for large-scale production tasks or local development and debugging. The page outlines two distinct environments: **Browserbase**, a managed cloud browser infrastructure, and a **Local** environment running on the developer's own machine. Browserbase is positioned as the solution for production use, offering high scalability, advanced stealth features, built-in proxies, and session persistence. In contrast, the Local environment is ideal for development, providing direct control, access to browser DevTools, and the ability to automate an existing browser session.\n\nThe documentation provides clear, actionable instructions and code examples for configuring each environment. For Browserbase, the main prerequisite is setting `BROWSERBASE_API_KEY` and `BROWSERBASE_PROJECT_ID` as environment variables. Configuration is managed within the `Stagehand` constructor by setting `env: \"BROWSERBASE\"` and passing advanced options through the `browserbaseSessionCreateParams` object, which can control settings like region, proxies, and viewport size. For the Local environment (`env: \"LOCAL\"`), developers can customize the browser launch using the `localBrowserLaunchOptions` object to control headless mode, specify an executable path, or connect to an already running browser instance via its Chrome DevTools Protocol (CDP) URL.\n\nFinally, the page covers important operational details and troubleshooting. It explains that the `stagehand.init()` method returns crucial session information, including a `debugUrl` for live session viewing and a unique `sessionId`. A dedicated troubleshooting section addresses common issues such as authentication errors with Browserbase, local browser launch failures (including required Linux dependencies), and session timeouts. This makes the document a complete guide for developers needing to set up, configure, and debug their Stagehand browser environment.",
        "wordCount": 1197,
        "summaryWordCount": 302,
        "timestamp": "2025-09-28T18:57:27.527Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/configuration/observability",
        "title": "Browser - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 28.262433023s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"28s\"}]",
        "wordCount": 1197,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:57:28.685Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 28.262433023s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"28s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/logging",
        "title": "Browser - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 28.311116113s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"28s\"}]",
        "wordCount": 1197,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:57:28.642Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 28.311116113s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"28s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models",
        "title": "Browser - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 27.173982136s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"27s\"}]",
        "wordCount": 1197,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:57:29.770Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 27.173982136s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"27s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/evaluations",
        "title": "Browser - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 27.167728165s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"27s\"}]",
        "wordCount": 1197,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:57:29.778Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 27.167728165s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"27s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/caching-actions",
        "title": "Working with iframes - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 26.083440136s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"26s\"}]",
        "wordCount": 529,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:57:30.864Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 26.083440136s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"26s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/using-multiple-tabs",
        "title": "Working with iframes - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 26.079978954s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"26s\"}]",
        "wordCount": 529,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:57:30.862Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 26.079978954s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"26s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/working-with-iframes",
        "title": "Working with iframes - ü§ò Stagehand",
        "summary": "Of course. Here is a professional analysis and summary of the provided technical documentation page.\n\n***\n\n### **Summary of \"Working with iframes - ü§ò Stagehand\"**\n\nThis documentation page serves as a best-practice guide for developers using the Stagehand automation library to interact with web page elements located inside iframes. The primary audience is developers who need to automate actions or extract data from complex web pages that embed third-party content, such as payment widgets, consent banners, or chat bubbles. The document explains that elements within an iframe exist in a separate document context, making them inaccessible to Stagehand's core functions by default.\n\nThe central instruction of the guide is how to enable iframe support. This is achieved by adding the `iframes: true` parameter to Stagehand's main commands: `act()`, `observe()`, and `extract()`. The page provides a clear code example demonstrating this implementation for all three functions, showing how to instruct Stagehand to search within iframes for the target elements. For instance, to click a button inside an iframe, a developer would use `await page.act({ action: \"...\", iframes: true });`.\n\nThe document concludes with practical tips and performance considerations. It advises that enabling iframe support can increase processing time, so it should only be used when necessary. For debugging, developers are encouraged to check Stagehand logs to verify if a target element resides within an iframe. The guide also addresses potential issues with lazy-loaded iframes, recommending the addition of small waits or action retries to handle intermittent failures. As a related topic, it mentions that experimental features like Shadow DOM support can be enabled separately in the Stagehand configuration.",
        "wordCount": 529,
        "summaryWordCount": 267,
        "timestamp": "2025-09-28T18:57:48.078Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/computer-use-agents",
        "title": "Page Not Found",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 24.993263736s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro\",\"location\":\"global\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"24s\"}]",
        "wordCount": 240,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:57:31.954Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 24.993263736s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro\",\"location\":\"global\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"24s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/contribute-to-stagehand",
        "title": "Page Not Found",
        "summary": "Based on the analysis of the provided documentation page, here is a comprehensive summary.\n\n***\n\n### Summary\n\nThis documentation page is a \"Page Not Found\" (404) error, indicating that the content for the requested URL, `.../best-practices/contribute-to-stagehand`, does not exist at that specific path. The primary purpose of this page is to inform the user of the broken link and provide alternative methods for finding the desired information. Analysis of the page's navigation sidebar suggests a potential typo in the URL; the correct page for this topic is likely located at the similar but distinct path `/best-practices/contributing`.\n\nWhile the page itself contains no substantive content, code examples, or configuration details, it serves a crucial navigational function. It provides a comprehensive site-wide navigation menu, a prominent search bar (with a `Ctrl+K` shortcut), and direct links to the Stagehand home page, the project's changelog, and email support. The navigation is organized into logical sections, including \"First Steps,\" \"The Basics,\" \"Configuration,\" \"Best Practices,\" \"Integrations,\" and \"Reference,\" which allows any user who lands on this page to easily reorient themselves and browse the full scope of the Stagehand documentation to find the correct topic. The page also offers a few AI-generated links to other potentially relevant pages, such as \"Computer Use Agents\" and \"Prompt",
        "wordCount": 240,
        "summaryWordCount": 209,
        "timestamp": "2025-09-28T18:58:08.777Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/playwright-interoperability",
        "title": "Page Not Found",
        "summary": "Based on the provided information, here is a summary and analysis of the documentation page.\n\n***\n\n### Summary of Documentation Page\n\nThis documentation page, located at the URL `https://docs.stagehand.dev/best-practices/playwright-interoperability`, is a \"Page Not Found\" (404) error page. As a result, it does not contain any specific content, technical concepts, or code examples related to Playwright interoperability with the Stagehand framework. The page's primary purpose is to inform the user that the requested content could not be found and to provide alternative navigation options to help them locate the correct information within the Stagehand documentation.\n\nAn analysis of the page's navigation sidebar reveals a potential reason for the error. The sidebar lists a topic under \"Best Practices\" titled \"Playwright Interoperability\" with the URL path `/best-practices/playwright-interop`. This suggests the requested URL (`.../playwright-interoperability`) may be incorrect or outdated, and that the intended content is likely available at the slightly different address ending in `.../playwright-interop`. The target audience for the intended content would be developers looking to integrate or use the Stagehand AI-powered browser automation tool in conjunction with the Playwright testing framework.\n\nWhile the specific page content is missing, the surrounding navigation provides a high-level overview of the Stagehand documentation. It is structured for developers and covers topics from initial setup (\"First Steps\") and core functions (`act`, `extract`, `observe`) to advanced configuration and best practices. Related topics of interest might include \"Using Multiple Tabs,\" \"Working with iframes,\" and \"Build a web browsing agent,\" all of which are listed in the \"",
        "wordCount": 240,
        "summaryWordCount": 248,
        "timestamp": "2025-09-28T18:58:08.194Z",
        "success": true
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/agent-fallbacks",
        "title": "Page Not Found",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 47.058837102s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"47s\"}]",
        "wordCount": 240,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:09.886Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 47.058837102s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"47s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/prompting-best-practices",
        "title": "Prompting Best Practices - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 47.062173463s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro\",\"location\":\"global\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"47s\"}]",
        "wordCount": 1458,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:09.884Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 47.062173463s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro\",\"location\":\"global\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"47s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/mcp-integrations",
        "title": "Prompting Best Practices - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 45.96288149s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"45s\"}]",
        "wordCount": 1456,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:10.981Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 45.96288149s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"45s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/best-practices/speed-optimization",
        "title": "Prompting Best Practices - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 45.950657231s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro\",\"location\":\"global\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"45s\"}]",
        "wordCount": 1458,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:10.992Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 45.950657231s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro\",\"location\":\"global\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"45s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/reference/act",
        "title": "Prompting Best Practices - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 44.849586201s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"44s\"}]",
        "wordCount": 1458,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:12.095Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 44.849586201s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"44s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/reference/observe",
        "title": "Page Not Found",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 44.848883553s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"44s\"}]",
        "wordCount": 237,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:12.095Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 44.848883553s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"44s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/reference/agent",
        "title": "Page Not Found",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 43.768046846s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"43s\"}]",
        "wordCount": 237,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:13.179Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 43.768046846s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"43s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#why-llm-choice-matters",
        "title": "Page Not Found",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 43.766083242s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"43s\"}]",
        "wordCount": 237,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:13.177Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 43.766083242s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"43s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#environment-variables-setup",
        "title": "Page Not Found",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 42.689375116s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro\",\"location\":\"global\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"42s\"}]",
        "wordCount": 237,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:14.256Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 42.689375116s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro\",\"location\":\"global\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"42s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#supported-providers",
        "title": "Page Not Found",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 42.672324151s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"42s\"}]",
        "wordCount": 237,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:14.271Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 42.672324151s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"42s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#production-ready-providers",
        "title": "Models - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 41.577973847s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"41s\"}]",
        "wordCount": 1444,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:15.364Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 41.577973847s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"41s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#additional-providers",
        "title": "Models - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 41.567868164s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro\",\"location\":\"global\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"41s\"}]",
        "wordCount": 1444,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:15.375Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 41.567868164s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro\",\"location\":\"global\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"41s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#basic-configuration",
        "title": "Models - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 40.472869253s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro\",\"location\":\"global\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"40s\"}]",
        "wordCount": 1444,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:16.474Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 40.472869253s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro\",\"location\":\"global\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"40s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#model-name-format",
        "title": "Models - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 40.477283421s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"40s\"}]",
        "wordCount": 1444,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:16.468Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 40.477283421s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"40s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#quick-start-examples",
        "title": "Models - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 39.373920793s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"39s\"}]",
        "wordCount": 1444,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:17.571Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 39.373920793s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"39s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#custom-llm-integration",
        "title": "Models - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 39.375040714s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"39s\"}]",
        "wordCount": 1444,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:17.567Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 39.375040714s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"39s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#vercel-ai-sdk",
        "title": "Models - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 38.277891667s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"38s\"}]",
        "wordCount": 1444,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:18.662Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 38.277891667s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"38s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#troubleshooting",
        "title": "Models - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 38.287504129s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"38s\"}]",
        "wordCount": 1444,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:18.656Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 38.287504129s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"38s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#common-issues",
        "title": "Models - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 37.195341571s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"37s\"}]",
        "wordCount": 1444,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:19.747Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 37.195341571s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"37s\"}]"
      },
      {
        "url": "https://docs.stagehand.dev/configuration/models#next-steps",
        "title": "Models - ü§ò Stagehand",
        "summary": "Failed to generate summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 37.193392877s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"37s\"}]",
        "wordCount": 1444,
        "summaryWordCount": 0,
        "timestamp": "2025-09-28T18:58:19.749Z",
        "success": false,
        "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 37.193392877s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"37s\"}]"
      }
    ],
    "stats": {
      "total": 38,
      "successful": 10,
      "failed": 28,
      "successRate": "26.3%",
      "totalContentWords": 5580,
      "totalSummaryWords": 2514,
      "averageCompressionRatio": "45.1%",
      "averageWordsPerPage": 558,
      "averageSummaryLength": 251
    }
  },
  "masterSummary": {
    "masterSummary": "Failed to generate master summary: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 37.053005799s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"37s\"}]",
    "timestamp": "2025-09-28T18:58:19.890Z",
    "success": false,
    "error": "[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\n* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 2\nPlease retry in 37.053005799s. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro\"},\"quotaValue\":\"2\"}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"37s\"}]"
  }
}